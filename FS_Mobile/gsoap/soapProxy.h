/* soapProxy.h
   Generated by wsdl2h 2.8.3 from http://220.165.8.124:2655/PaymentFunctionWebService.asmx?WSDL http://220.165.8.124:2655/UserFunctionWebService.asmx?WSDL http://220.165.8.124:2655/UtilFunctionWebService.asmx?WSDL http://220.165.8.124:2557/QueryService.asmx?WSDL http://220.165.8.124:2556/HttpService.asmx?WSDL http://220.165.8.124:2655/BusinessFunctionWebService.asmx?WSDL and typemap.dat
   2013-07-27 11:50:05 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on soapProxy.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://tempuri.org/"
ns2 = "http://microsoft.com/wsdl/types/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://tempuri.org/"
//gsoap ns1   schema namespace:	http://tempuri.org/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns2	"http://microsoft.com/wsdl/types/"
//gsoap ns2   schema namespace:	http://microsoft.com/wsdl/types/
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class ns1__PayWithListResult.
class ns1__PayWithListResult;

//  Forward declaration of class ns1__ArrayOfPayWithListItem.
class ns1__ArrayOfPayWithListItem;

//  Forward declaration of class ns1__PayWithListItem.
class ns1__PayWithListItem;

//  Forward declaration of class ns1__ArrayOfPaymentItem.
class ns1__ArrayOfPaymentItem;

//  Forward declaration of class ns1__PaymentItem.
class ns1__PaymentItem;

//  Forward declaration of class ns1__ArrayOfTransaction.
class ns1__ArrayOfTransaction;

//  Forward declaration of class ns1__Transaction.
class ns1__Transaction;

//  Forward declaration of class ns1__ArrayOfTransStaticsItem.
class ns1__ArrayOfTransStaticsItem;

//  Forward declaration of class ns1__TransStaticsItem.
class ns1__TransStaticsItem;

//  Forward declaration of class ns1__ArrayOfPayInternetItem.
class ns1__ArrayOfPayInternetItem;

//  Forward declaration of class ns1__PayInternetItem.
class ns1__PayInternetItem;

//  Forward declaration of class ns1__ArrayOfPayGameItem.
class ns1__ArrayOfPayGameItem;

//  Forward declaration of class ns1__PayGameItem.
class ns1__PayGameItem;

//  Forward declaration of class ns1__ArrayOfPayPublicTelItem.
class ns1__ArrayOfPayPublicTelItem;

//  Forward declaration of class ns1__PayPublicTelItem.
class ns1__PayPublicTelItem;

//  Forward declaration of class ns1__User.
class ns1__User;

//  Forward declaration of class ns1__ReturnInfo.
class ns1__ReturnInfo;

//  Forward declaration of class ns1__ArrayOfReturnInfoItem.
class ns1__ArrayOfReturnInfoItem;

//  Forward declaration of class ns1__ReturnInfoItem.
class ns1__ReturnInfoItem;

//  Forward declaration of class ns1__ArrayOfWorker.
class ns1__ArrayOfWorker;

//  Forward declaration of class ns1__Worker.
class ns1__Worker;

//  Forward declaration of class ns1__ArrayOfSystemFunction.
class ns1__ArrayOfSystemFunction;

//  Forward declaration of class ns1__SystemFunction.
class ns1__SystemFunction;

//  Forward declaration of class ns1__ArrayOfReturnedItem.
class ns1__ArrayOfReturnedItem;

//  Forward declaration of class ns1__ReturnedItem.
class ns1__ReturnedItem;

//  Forward declaration of class ns1__ArrayOfAcountPaymentItem.
class ns1__ArrayOfAcountPaymentItem;

//  Forward declaration of class ns1__AcountPaymentItem.
class ns1__AcountPaymentItem;

//  Forward declaration of class ns1__ArrayOfDIC_USCOREContent.
class ns1__ArrayOfDIC_USCOREContent;

//  Forward declaration of class ns1__DIC_USCOREContent.
class ns1__DIC_USCOREContent;

//  Forward declaration of class ns1__ArrayOfDIC_USCORECategory.
class ns1__ArrayOfDIC_USCORECategory;

//  Forward declaration of class ns1__DIC_USCORECategory.
class ns1__DIC_USCORECategory;

//  Forward declaration of class ns1__TableStatistics.
class ns1__TableStatistics;

//  Forward declaration of class ns1__Notice.
class ns1__Notice;

//  Forward declaration of class ns1__ArrayOfNoticeItem.
class ns1__ArrayOfNoticeItem;

//  Forward declaration of class ns1__NoticeItem.
class ns1__NoticeItem;

//  Forward declaration of class ns1__ArrayOfReturnProportion.
class ns1__ArrayOfReturnProportion;

//  Forward declaration of class ns1__ReturnProportion.
class ns1__ReturnProportion;

//  Forward declaration of class ns1__ArrayOfPhoneNumberBelong.
class ns1__ArrayOfPhoneNumberBelong;

//  Forward declaration of class ns1__PhoneNumberBelong.
class ns1__PhoneNumberBelong;

//  Forward declaration of class ns1__CompanyInfo.
class ns1__CompanyInfo;

//  Forward declaration of class ns1__ArrayOfCompanyAccount.
class ns1__ArrayOfCompanyAccount;

//  Forward declaration of class ns1__CompanyAccount.
class ns1__CompanyAccount;

//  Forward declaration of class ns1__Result.
class ns1__Result;

//  Forward declaration of class ns1__PhoneNoList.
class ns1__PhoneNoList;

//  Forward declaration of class ns1__ArrayOfPhoneNoItem.
class ns1__ArrayOfPhoneNoItem;

//  Forward declaration of class ns1__PhoneNoItem.
class ns1__PhoneNoItem;

//  Forward declaration of class ns1__ArrayOfString.
class ns1__ArrayOfString;

//  Forward declaration of class ns1__ArrayOfMiniCardItem.
class ns1__ArrayOfMiniCardItem;

//  Forward declaration of class ns1__MiniCardItem.
class ns1__MiniCardItem;

//  Forward declaration of class ns1__ArrayOfPayMiniCardItem.
class ns1__ArrayOfPayMiniCardItem;

//  Forward declaration of class ns1__PayMiniCardItem.
class ns1__PayMiniCardItem;

//  Forward declaration of class ns1__ArrayOfCardService.
class ns1__ArrayOfCardService;

//  Forward declaration of class ns1__CardService.
class ns1__CardService;

//  Forward declaration of class ns1__ArrayOfSellCardItem.
class ns1__ArrayOfSellCardItem;

//  Forward declaration of class ns1__SellCardItem.
class ns1__SellCardItem;

//  Forward declaration of class ns1__ArrayOfBusinessItem.
class ns1__ArrayOfBusinessItem;

//  Forward declaration of class ns1__BusinessItem.
class ns1__BusinessItem;

//  Forward declaration of class ns1__ArrayOfSellOtherCardItem.
class ns1__ArrayOfSellOtherCardItem;

//  Forward declaration of class ns1__SellOtherCardItem.
class ns1__SellOtherCardItem;

//  Forward declaration of class ns1__ArrayOfOtherCardItem.
class ns1__ArrayOfOtherCardItem;

//  Forward declaration of class ns1__OtherCardItem.
class ns1__OtherCardItem;

//  Forward declaration of class ns1__ArrayOfStockCardItem.
class ns1__ArrayOfStockCardItem;

//  Forward declaration of class ns1__StockCardItem.
class ns1__StockCardItem;

//  Forward declaration of class _ns1__GetLocation.
class _ns1__GetLocation;

//  Forward declaration of class _ns1__GetLocationResponse.
class _ns1__GetLocationResponse;

//  Forward declaration of class _ns1__PayMoney.
class _ns1__PayMoney;

//  Forward declaration of class _ns1__PayMoneyResponse.
class _ns1__PayMoneyResponse;

//  Forward declaration of class _ns1__PayMoneyWithList.
class _ns1__PayMoneyWithList;

//  Forward declaration of class _ns1__PayMoneyWithListResponse.
class _ns1__PayMoneyWithListResponse;

//  Forward declaration of class _ns1__RequstRollback.
class _ns1__RequstRollback;

//  Forward declaration of class _ns1__RequstRollbackResponse.
class _ns1__RequstRollbackResponse;

//  Forward declaration of class _ns1__PayInternet.
class _ns1__PayInternet;

//  Forward declaration of class _ns1__PayInternetResponse.
class _ns1__PayInternetResponse;

//  Forward declaration of class _ns1__PayInternetWithList.
class _ns1__PayInternetWithList;

//  Forward declaration of class _ns1__PayInternetWithListResponse.
class _ns1__PayInternetWithListResponse;

//  Forward declaration of class _ns1__RequstInternetRollback.
class _ns1__RequstInternetRollback;

//  Forward declaration of class _ns1__RequstInternetRollbackResponse.
class _ns1__RequstInternetRollbackResponse;

//  Forward declaration of class _ns1__PayGame.
class _ns1__PayGame;

//  Forward declaration of class _ns1__PayGameResponse.
class _ns1__PayGameResponse;

//  Forward declaration of class _ns1__PayPublicTel.
class _ns1__PayPublicTel;

//  Forward declaration of class _ns1__PayPublicTelResponse.
class _ns1__PayPublicTelResponse;

//  Forward declaration of class _ns1__GetPaymentRecord.
class _ns1__GetPaymentRecord;

//  Forward declaration of class _ns1__GetPaymentRecordResponse.
class _ns1__GetPaymentRecordResponse;

//  Forward declaration of class _ns1__GetPaymentItem.
class _ns1__GetPaymentItem;

//  Forward declaration of class _ns1__GetPaymentItemResponse.
class _ns1__GetPaymentItemResponse;

//  Forward declaration of class _ns1__GetTransactionByCondition.
class _ns1__GetTransactionByCondition;

//  Forward declaration of class _ns1__GetTransactionByConditionResponse.
class _ns1__GetTransactionByConditionResponse;

//  Forward declaration of class _ns1__GetTransactionStaticsByCondition.
class _ns1__GetTransactionStaticsByCondition;

//  Forward declaration of class _ns1__GetTransactionStaticsByConditionResponse.
class _ns1__GetTransactionStaticsByConditionResponse;

//  Forward declaration of class _ns1__GetPaymentOrPaymentHistoryByCondition.
class _ns1__GetPaymentOrPaymentHistoryByCondition;

//  Forward declaration of class _ns1__GetPaymentOrPaymentHistoryByConditionResponse.
class _ns1__GetPaymentOrPaymentHistoryByConditionResponse;

//  Forward declaration of class _ns1__GetPayInternetByCondition.
class _ns1__GetPayInternetByCondition;

//  Forward declaration of class _ns1__GetPayInternetByConditionResponse.
class _ns1__GetPayInternetByConditionResponse;

//  Forward declaration of class _ns1__GetPayInternetHistoryByCondition.
class _ns1__GetPayInternetHistoryByCondition;

//  Forward declaration of class _ns1__GetPayInternetHistoryByConditionResponse.
class _ns1__GetPayInternetHistoryByConditionResponse;

//  Forward declaration of class _ns1__GetPayGameByCondition.
class _ns1__GetPayGameByCondition;

//  Forward declaration of class _ns1__GetPayGameByConditionResponse.
class _ns1__GetPayGameByConditionResponse;

//  Forward declaration of class _ns1__GetPayGameHistoryByCondition.
class _ns1__GetPayGameHistoryByCondition;

//  Forward declaration of class _ns1__GetPayGameHistoryByConditionResponse.
class _ns1__GetPayGameHistoryByConditionResponse;

//  Forward declaration of class _ns1__GetPayPublicTelByCondition.
class _ns1__GetPayPublicTelByCondition;

//  Forward declaration of class _ns1__GetPayPublicTelByConditionResponse.
class _ns1__GetPayPublicTelByConditionResponse;

//  Forward declaration of class _ns1__GetPayPublicTelHistoryByCondition.
class _ns1__GetPayPublicTelHistoryByCondition;

//  Forward declaration of class _ns1__GetPayPublicTelHistoryByConditionResponse.
class _ns1__GetPayPublicTelHistoryByConditionResponse;

//  Forward declaration of class _ns1__HelloWorld.
class _ns1__HelloWorld;

//  Forward declaration of class _ns1__HelloWorldResponse.
class _ns1__HelloWorldResponse;

//  Forward declaration of class _ns1__loggout.
class _ns1__loggout;

//  Forward declaration of class _ns1__loggoutResponse.
class _ns1__loggoutResponse;

//  Forward declaration of class _ns1__TestLogin.
class _ns1__TestLogin;

//  Forward declaration of class _ns1__TestLoginResponse.
class _ns1__TestLoginResponse;

//  Forward declaration of class _ns1__GetUserInfo.
class _ns1__GetUserInfo;

//  Forward declaration of class _ns1__GetUserInfoResponse.
class _ns1__GetUserInfoResponse;

//  Forward declaration of class _ns1__RegisterUser.
class _ns1__RegisterUser;

//  Forward declaration of class _ns1__RegisterUserResponse.
class _ns1__RegisterUserResponse;

//  Forward declaration of class _ns1__AlterPsw.
class _ns1__AlterPsw;

//  Forward declaration of class _ns1__AlterPswResponse.
class _ns1__AlterPswResponse;

//  Forward declaration of class _ns1__AlterUserInfo.
class _ns1__AlterUserInfo;

//  Forward declaration of class _ns1__AlterUserInfoResponse.
class _ns1__AlterUserInfoResponse;

//  Forward declaration of class _ns1__AddAcountPayment.
class _ns1__AddAcountPayment;

//  Forward declaration of class _ns1__AddAcountPaymentResponse.
class _ns1__AddAcountPaymentResponse;

//  Forward declaration of class _ns1__GetReturnInfo.
class _ns1__GetReturnInfo;

//  Forward declaration of class _ns1__GetReturnInfoResponse.
class _ns1__GetReturnInfoResponse;

//  Forward declaration of class _ns1__CharegeReturnedMoney.
class _ns1__CharegeReturnedMoney;

//  Forward declaration of class _ns1__CharegeReturnedMoneyResponse.
class _ns1__CharegeReturnedMoneyResponse;

//  Forward declaration of class _ns1__GetWorkNameList.
class _ns1__GetWorkNameList;

//  Forward declaration of class _ns1__GetWorkNameListResponse.
class _ns1__GetWorkNameListResponse;

//  Forward declaration of class _ns1__GetUserFunction.
class _ns1__GetUserFunction;

//  Forward declaration of class _ns1__GetUserFunctionResponse.
class _ns1__GetUserFunctionResponse;

//  Forward declaration of class _ns1__GetReturnRecord.
class _ns1__GetReturnRecord;

//  Forward declaration of class _ns1__GetReturnRecordResponse.
class _ns1__GetReturnRecordResponse;

//  Forward declaration of class _ns1__GetReturnRecordDeal.
class _ns1__GetReturnRecordDeal;

//  Forward declaration of class _ns1__GetReturnRecordDealResponse.
class _ns1__GetReturnRecordDealResponse;

//  Forward declaration of class _ns1__GetAcountPaymentRecord.
class _ns1__GetAcountPaymentRecord;

//  Forward declaration of class _ns1__GetAcountPaymentRecordResponse.
class _ns1__GetAcountPaymentRecordResponse;

//  Forward declaration of class _ns1__GetDicContentByCondition.
class _ns1__GetDicContentByCondition;

//  Forward declaration of class _ns1__GetDicContentByConditionResponse.
class _ns1__GetDicContentByConditionResponse;

//  Forward declaration of class _ns1__GetAllCategory.
class _ns1__GetAllCategory;

//  Forward declaration of class _ns1__GetAllCategoryResponse.
class _ns1__GetAllCategoryResponse;

//  Forward declaration of class _ns1__InsertDicContent.
class _ns1__InsertDicContent;

//  Forward declaration of class _ns1__InsertDicContentResponse.
class _ns1__InsertDicContentResponse;

//  Forward declaration of class _ns1__UpdateDicContent.
class _ns1__UpdateDicContent;

//  Forward declaration of class _ns1__UpdateDicContentResponse.
class _ns1__UpdateDicContentResponse;

//  Forward declaration of class _ns1__DeleteDicContent.
class _ns1__DeleteDicContent;

//  Forward declaration of class _ns1__DeleteDicContentResponse.
class _ns1__DeleteDicContentResponse;

//  Forward declaration of class _ns1__UpdateDicContentByCategory.
class _ns1__UpdateDicContentByCategory;

//  Forward declaration of class _ns1__UpdateDicContentByCategoryResponse.
class _ns1__UpdateDicContentByCategoryResponse;

//  Forward declaration of class _ns1__GetFunctionList.
class _ns1__GetFunctionList;

//  Forward declaration of class _ns1__GetFunctionListResponse.
class _ns1__GetFunctionListResponse;

//  Forward declaration of class _ns1__UpdateUserFunctionList.
class _ns1__UpdateUserFunctionList;

//  Forward declaration of class _ns1__UpdateUserFunctionListResponse.
class _ns1__UpdateUserFunctionListResponse;

//  Forward declaration of class _ns1__UpdateFunctionRight.
class _ns1__UpdateFunctionRight;

//  Forward declaration of class _ns1__UpdateFunctionRightResponse.
class _ns1__UpdateFunctionRightResponse;

//  Forward declaration of class _ns1__GetTableStatistics.
class _ns1__GetTableStatistics;

//  Forward declaration of class _ns1__GetTableStatisticsResponse.
class _ns1__GetTableStatisticsResponse;

//  Forward declaration of class _ns1__GetNoticeList.
class _ns1__GetNoticeList;

//  Forward declaration of class _ns1__GetNoticeListResponse.
class _ns1__GetNoticeListResponse;

//  Forward declaration of class _ns1__GetNoticeListByCondition.
class _ns1__GetNoticeListByCondition;

//  Forward declaration of class _ns1__GetNoticeListByConditionResponse.
class _ns1__GetNoticeListByConditionResponse;

//  Forward declaration of class _ns1__GetNoticeItem.
class _ns1__GetNoticeItem;

//  Forward declaration of class _ns1__GetNoticeItemResponse.
class _ns1__GetNoticeItemResponse;

//  Forward declaration of class _ns1__GetAlertNoticeList.
class _ns1__GetAlertNoticeList;

//  Forward declaration of class _ns1__GetAlertNoticeListResponse.
class _ns1__GetAlertNoticeListResponse;

//  Forward declaration of class _ns1__AddNoticeItem.
class _ns1__AddNoticeItem;

//  Forward declaration of class _ns1__AddNoticeItemResponse.
class _ns1__AddNoticeItemResponse;

//  Forward declaration of class _ns1__AddNoticeItemToSomeone.
class _ns1__AddNoticeItemToSomeone;

//  Forward declaration of class _ns1__AddNoticeItemToSomeoneResponse.
class _ns1__AddNoticeItemToSomeoneResponse;

//  Forward declaration of class _ns1__UpdateNoticeItem.
class _ns1__UpdateNoticeItem;

//  Forward declaration of class _ns1__UpdateNoticeItemResponse.
class _ns1__UpdateNoticeItemResponse;

//  Forward declaration of class _ns1__DeleteNoticeItem.
class _ns1__DeleteNoticeItem;

//  Forward declaration of class _ns1__DeleteNoticeItemResponse.
class _ns1__DeleteNoticeItemResponse;

//  Forward declaration of class _ns1__InserNoticeToSomeOne.
class _ns1__InserNoticeToSomeOne;

//  Forward declaration of class _ns1__InserNoticeToSomeOneResponse.
class _ns1__InserNoticeToSomeOneResponse;

//  Forward declaration of class _ns1__GetReturnProportionRecord.
class _ns1__GetReturnProportionRecord;

//  Forward declaration of class _ns1__GetReturnProportionRecordResponse.
class _ns1__GetReturnProportionRecordResponse;

//  Forward declaration of class _ns1__AddtReturnProportion.
class _ns1__AddtReturnProportion;

//  Forward declaration of class _ns1__AddtReturnProportionResponse.
class _ns1__AddtReturnProportionResponse;

//  Forward declaration of class _ns1__UpdatetReturnProportion.
class _ns1__UpdatetReturnProportion;

//  Forward declaration of class _ns1__UpdatetReturnProportionResponse.
class _ns1__UpdatetReturnProportionResponse;

//  Forward declaration of class _ns1__DeletetReturnProportion.
class _ns1__DeletetReturnProportion;

//  Forward declaration of class _ns1__DeletetReturnProportionResponse.
class _ns1__DeletetReturnProportionResponse;

//  Forward declaration of class _ns1__GetPhoneNumberBelongByCondition.
class _ns1__GetPhoneNumberBelongByCondition;

//  Forward declaration of class _ns1__GetPhoneNumberBelongByConditionResponse.
class _ns1__GetPhoneNumberBelongByConditionResponse;

//  Forward declaration of class _ns1__UpdatePhoneNumberBelong.
class _ns1__UpdatePhoneNumberBelong;

//  Forward declaration of class _ns1__UpdatePhoneNumberBelongResponse.
class _ns1__UpdatePhoneNumberBelongResponse;

//  Forward declaration of class _ns1__AddPhoneNumberBelong.
class _ns1__AddPhoneNumberBelong;

//  Forward declaration of class _ns1__AddPhoneNumberBelongResponse.
class _ns1__AddPhoneNumberBelongResponse;

//  Forward declaration of class _ns1__DeletePhoneNumberBelong.
class _ns1__DeletePhoneNumberBelong;

//  Forward declaration of class _ns1__DeletePhoneNumberBelongResponse.
class _ns1__DeletePhoneNumberBelongResponse;

//  Forward declaration of class _ns1__GetCompanyInfo.
class _ns1__GetCompanyInfo;

//  Forward declaration of class _ns1__GetCompanyInfoResponse.
class _ns1__GetCompanyInfoResponse;

//  Forward declaration of class _ns1__UpdateCompanyInfo.
class _ns1__UpdateCompanyInfo;

//  Forward declaration of class _ns1__UpdateCompanyInfoResponse.
class _ns1__UpdateCompanyInfoResponse;

//  Forward declaration of class _ns1__GetCompanyAccount.
class _ns1__GetCompanyAccount;

//  Forward declaration of class _ns1__GetCompanyAccountResponse.
class _ns1__GetCompanyAccountResponse;

//  Forward declaration of class _ns1__AddCompanyAccount.
class _ns1__AddCompanyAccount;

//  Forward declaration of class _ns1__AddCompanyAccountResponse.
class _ns1__AddCompanyAccountResponse;

//  Forward declaration of class _ns1__UpdateCompanyAccount.
class _ns1__UpdateCompanyAccount;

//  Forward declaration of class _ns1__UpdateCompanyAccountResponse.
class _ns1__UpdateCompanyAccountResponse;

//  Forward declaration of class _ns1__DeleteCompanyAccount.
class _ns1__DeleteCompanyAccount;

//  Forward declaration of class _ns1__DeleteCompanyAccountResponse.
class _ns1__DeleteCompanyAccountResponse;

//  Forward declaration of class _ns1__GetClientVersion.
class _ns1__GetClientVersion;

//  Forward declaration of class _ns1__GetClientVersionResponse.
class _ns1__GetClientVersionResponse;

//  Forward declaration of class _ns1__queryPhoneNOInfo.
class _ns1__queryPhoneNOInfo;

//  Forward declaration of class _ns1__queryPhoneNOInfoResponse.
class _ns1__queryPhoneNOInfoResponse;

//  Forward declaration of class _ns1__BuyMiniCard.
class _ns1__BuyMiniCard;

//  Forward declaration of class _ns1__BuyMiniCardResponse.
class _ns1__BuyMiniCardResponse;

//  Forward declaration of class _ns1__GetPhoneNoByCondition.
class _ns1__GetPhoneNoByCondition;

//  Forward declaration of class _ns1__GetPhoneNoByConditionResponse.
class _ns1__GetPhoneNoByConditionResponse;

//  Forward declaration of class _ns1__GetMyNoSection.
class _ns1__GetMyNoSection;

//  Forward declaration of class _ns1__GetMyNoSectionResponse.
class _ns1__GetMyNoSectionResponse;

//  Forward declaration of class _ns1__LockNo.
class _ns1__LockNo;

//  Forward declaration of class _ns1__LockNoResponse.
class _ns1__LockNoResponse;

//  Forward declaration of class _ns1__UnlockNo.
class _ns1__UnlockNo;

//  Forward declaration of class _ns1__UnlockNoResponse.
class _ns1__UnlockNoResponse;

//  Forward declaration of class _ns1__SubmitBusiness.
class _ns1__SubmitBusiness;

//  Forward declaration of class _ns1__SubmitBusinessResponse.
class _ns1__SubmitBusinessResponse;

//  Forward declaration of class _ns1__SellNo.
class _ns1__SellNo;

//  Forward declaration of class _ns1__SellNoResponse.
class _ns1__SellNoResponse;

//  Forward declaration of class _ns1__SellOhterCard.
class _ns1__SellOhterCard;

//  Forward declaration of class _ns1__SellOhterCardResponse.
class _ns1__SellOhterCardResponse;

//  Forward declaration of class _ns1__GetMiniCardRecord.
class _ns1__GetMiniCardRecord;

//  Forward declaration of class _ns1__GetMiniCardRecordResponse.
class _ns1__GetMiniCardRecordResponse;

//  Forward declaration of class _ns1__GetPayMiniCardByCondition.
class _ns1__GetPayMiniCardByCondition;

//  Forward declaration of class _ns1__GetPayMiniCardByConditionResponse.
class _ns1__GetPayMiniCardByConditionResponse;

//  Forward declaration of class _ns1__GetPayMiniCardHistoryByCondition.
class _ns1__GetPayMiniCardHistoryByCondition;

//  Forward declaration of class _ns1__GetPayMiniCardHistoryByConditionResponse.
class _ns1__GetPayMiniCardHistoryByConditionResponse;

//  Forward declaration of class _ns1__GetPhoneNoItemByCondition.
class _ns1__GetPhoneNoItemByCondition;

//  Forward declaration of class _ns1__GetPhoneNoItemByConditionResponse.
class _ns1__GetPhoneNoItemByConditionResponse;

//  Forward declaration of class _ns1__GetPhoneNoItemAndHistoryByCondition.
class _ns1__GetPhoneNoItemAndHistoryByCondition;

//  Forward declaration of class _ns1__GetPhoneNoItemAndHistoryByConditionResponse.
class _ns1__GetPhoneNoItemAndHistoryByConditionResponse;

//  Forward declaration of class _ns1__GetCardService.
class _ns1__GetCardService;

//  Forward declaration of class _ns1__GetCardServiceResponse.
class _ns1__GetCardServiceResponse;

//  Forward declaration of class _ns1__GetSellCardRecordByCondition.
class _ns1__GetSellCardRecordByCondition;

//  Forward declaration of class _ns1__GetSellCardRecordByConditionResponse.
class _ns1__GetSellCardRecordByConditionResponse;

//  Forward declaration of class _ns1__GetSellCardRecordHistoryByCondition.
class _ns1__GetSellCardRecordHistoryByCondition;

//  Forward declaration of class _ns1__GetSellCardRecordHistoryByConditionResponse.
class _ns1__GetSellCardRecordHistoryByConditionResponse;

//  Forward declaration of class _ns1__GetBusinessRecordByCondition.
class _ns1__GetBusinessRecordByCondition;

//  Forward declaration of class _ns1__GetBusinessRecordByConditionResponse.
class _ns1__GetBusinessRecordByConditionResponse;

//  Forward declaration of class _ns1__GettBusinessRecordHistoryByCondition.
class _ns1__GettBusinessRecordHistoryByCondition;

//  Forward declaration of class _ns1__GettBusinessRecordHistoryByConditionResponse.
class _ns1__GettBusinessRecordHistoryByConditionResponse;

//  Forward declaration of class _ns1__GetSellOtherCardRecordByCondition.
class _ns1__GetSellOtherCardRecordByCondition;

//  Forward declaration of class _ns1__GetSellOtherCardRecordByConditionResponse.
class _ns1__GetSellOtherCardRecordByConditionResponse;

//  Forward declaration of class _ns1__GettSellOtherCardRecordHistoryByCondition.
class _ns1__GettSellOtherCardRecordHistoryByCondition;

//  Forward declaration of class _ns1__GettSellOtherCardRecordHistoryByConditionResponse.
class _ns1__GettSellOtherCardRecordHistoryByConditionResponse;

//  Forward declaration of class _ns1__GetOtherCardList.
class _ns1__GetOtherCardList;

//  Forward declaration of class _ns1__GetOtherCardListResponse.
class _ns1__GetOtherCardListResponse;

//  Forward declaration of class _ns1__GetStockCardItemByCondition.
class _ns1__GetStockCardItemByCondition;

//  Forward declaration of class _ns1__GetStockCardItemByConditionResponse.
class _ns1__GetStockCardItemByConditionResponse;

//  Forward declaration of class _ns1__GetStockCardItemAndHistoryByCondition.
class _ns1__GetStockCardItemAndHistoryByCondition;

//  Forward declaration of class _ns1__GetStockCardItemAndHistoryByConditionResponse.
class _ns1__GetStockCardItemAndHistoryByConditionResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://microsoft.com/wsdl/types/                                         *
 *                                                                            *
\******************************************************************************/


/// "http://microsoft.com/wsdl/types/":guid is a simpleType restriction of xs:string.
/// Content pattern is "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}" (note: not automatically enforced)
typedef char* ns2__guid "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}";

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/// "http://tempuri.org/":PayWithListResult is a complexType.
class ns1__PayWithListResult
{ public:
/// Element result of type xs:string.
    char*                                result                         0;	///< Optional element.
/// Element count of type xs:int.
    int                                  count                          1;	///< Required element.
/// Element successCount of type xs:int.
    int                                  successCount                   1;	///< Required element.
/// Element failedCount of type xs:int.
    int                                  failedCount                    1;	///< Required element.
/// Element list of type "http://tempuri.org/":ArrayOfPayWithListItem.
    ns1__ArrayOfPayWithListItem*         list                           0;	///< Optional element.
/// Element totalMoney of type xs:double.
    double                               totalMoney                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfPayWithListItem is a complexType.
class ns1__ArrayOfPayWithListItem
{ public:
/// Size of array of ns1__PayWithListItem* is 0..unbounded
   $int                                  __sizePayWithListItem          0;
/// Pointer to array ns1__PayWithListItem* of length 0..unbounded
    ns1__PayWithListItem*               *PayWithListItem                0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PayWithListItem is a complexType.
class ns1__PayWithListItem
{ public:
/// Element phoneNo of type xs:string.
    char*                                phoneNo                        0;	///< Optional element.
/// Element money of type xs:double.
    double                               money                          1;	///< Required element.
/// Element type of type xs:string.
    char*                                type                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfPaymentItem is a complexType.
class ns1__ArrayOfPaymentItem
{ public:
/// Size of array of ns1__PaymentItem* is 0..unbounded
   $int                                  __sizePaymentItem              0;
/// Pointer to array ns1__PaymentItem* of length 0..unbounded
    ns1__PaymentItem*                   *PaymentItem                    0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PaymentItem is a complexType.
class ns1__PaymentItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element customerName of type xs:string.
    char*                                customerName                   0;	///< Optional element.
/// Element customerBeforeMoney of type xs:double.
    double                               customerBeforeMoney            1;	///< Required element.
/// Element customerAfterMoney of type xs:double.
    double                               customerAfterMoney             1;	///< Required element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element telNo of type xs:string.
    char*                                telNo                          0;	///< Optional element.
/// Element chargeMoney of type xs:double.
    double                               chargeMoney                    1;	///< Required element.
/// Element chargeTime of type xs:dateTime.
    time_t                               chargeTime                     1;	///< Required element.
/// Element NoLocation of type xs:string.
    char*                                NoLocation                     0;	///< Optional element.
/// Element moneyBefore of type xs:double.
    double                               moneyBefore                    1;	///< Required element.
/// Element moneyAfter of type xs:double.
    double                               moneyAfter                     1;	///< Required element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element brand of type xs:string.
    char*                                brand                          0;	///< Optional element.
/// Element area of type xs:string.
    char*                                area                           0;	///< Optional element.
/// Element user_id of type xs:string.
    char*                                user_USCOREid                  0;	///< Optional element.
/// Element user_name of type xs:string.
    char*                                user_USCOREname                0;	///< Optional element.
/// Element work_id of type xs:string.
    char*                                work_USCOREid                  0;	///< Optional element.
/// Element work_name of type xs:string.
    char*                                work_USCOREname                0;	///< Optional element.
/// Element manager_name of type xs:string.
    char*                                manager_USCOREname             0;	///< Optional element.
/// Element repay of type xs:double.
    double                               repay                          1;	///< Required element.
/// Element SP of type xs:string.
    char*                                SP                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfTransaction is a complexType.
class ns1__ArrayOfTransaction
{ public:
/// Size of array of ns1__Transaction* is 0..unbounded
   $int                                  __sizeTransaction              0;
/// Pointer to array ns1__Transaction* of length 0..unbounded
    ns1__Transaction*                   *Transaction                    0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":Transaction is a complexType.
class ns1__Transaction
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element name of type xs:string.
    char*                                name                           0;	///< Optional element.
/// Element type of type xs:string.
    char*                                type                           0;	///< Optional element.
/// Element phoneNo of type xs:string.
    char*                                phoneNo                        0;	///< Optional element.
/// Element accountBefore of type xs:double.
    double                               accountBefore                  1;	///< Required element.
/// Element processMoney of type xs:double.
    double                               processMoney                   1;	///< Required element.
/// Element returnMoney of type xs:double.
    double                               returnMoney                    1;	///< Required element.
/// Element accountAfter of type xs:double.
    double                               accountAfter                   1;	///< Required element.
/// Element processTime of type xs:dateTime.
    time_t                               processTime                    1;	///< Required element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfTransStaticsItem is a complexType.
class ns1__ArrayOfTransStaticsItem
{ public:
/// Size of array of ns1__TransStaticsItem* is 0..unbounded
   $int                                  __sizeTransStaticsItem         0;
/// Pointer to array ns1__TransStaticsItem* of length 0..unbounded
    ns1__TransStaticsItem*              *TransStaticsItem               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":TransStaticsItem is a complexType.
class ns1__TransStaticsItem
{ public:
/// Element transName of type xs:string.
    char*                                transName                      0;	///< Optional element.
/// Element count of type xs:int.
    int                                  count                          1;	///< Required element.
/// Element totalPay of type xs:double.
    double                               totalPay                       1;	///< Required element.
/// Element totalCharge of type xs:double.
    double                               totalCharge                    1;	///< Required element.
/// Element totalReturn of type xs:double.
    double                               totalReturn                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfPayInternetItem is a complexType.
class ns1__ArrayOfPayInternetItem
{ public:
/// Size of array of ns1__PayInternetItem* is 0..unbounded
   $int                                  __sizePayInternetItem          0;
/// Pointer to array ns1__PayInternetItem* of length 0..unbounded
    ns1__PayInternetItem*               *PayInternetItem                0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PayInternetItem is a complexType.
class ns1__PayInternetItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element addDateTime of type xs:dateTime.
    time_t                               addDateTime                    1;	///< Required element.
/// Element internentType of type xs:string.
    char*                                internentType                  0;	///< Optional element.
/// Element internetAccount of type xs:string.
    char*                                internetAccount                0;	///< Optional element.
/// Element money of type xs:double.
    double                               money                          1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element workId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            workId                         1;	///< Required element.
/// Element work_name of type xs:string.
    char*                                work_USCOREname                0;	///< Optional element.
/// Element manager_name of type xs:string.
    char*                                manager_USCOREname             0;	///< Optional element.
/// Element moneyBefore of type xs:double.
    double                               moneyBefore                    1;	///< Required element.
/// Element moneyAfter of type xs:double.
    double                               moneyAfter                     1;	///< Required element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element returnMoney of type xs:double.
    double                               returnMoney                    1;	///< Required element.
/// Element area of type xs:string.
    char*                                area                           0;	///< Optional element.
/// Element location of type xs:string.
    char*                                location                       0;	///< Optional element.
/// Element customerName of type xs:string.
    char*                                customerName                   0;	///< Optional element.
/// Element customerBeforeMoney of type xs:double.
    double                               customerBeforeMoney            1;	///< Required element.
/// Element customerAfterMoney of type xs:double.
    double                               customerAfterMoney             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfPayGameItem is a complexType.
class ns1__ArrayOfPayGameItem
{ public:
/// Size of array of ns1__PayGameItem* is 0..unbounded
   $int                                  __sizePayGameItem              0;
/// Pointer to array ns1__PayGameItem* of length 0..unbounded
    ns1__PayGameItem*                   *PayGameItem                    0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PayGameItem is a complexType.
class ns1__PayGameItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element addDateTime of type xs:dateTime.
    time_t                               addDateTime                    1;	///< Required element.
/// Element gameType of type xs:string.
    char*                                gameType                       0;	///< Optional element.
/// Element gameAccount of type xs:string.
    char*                                gameAccount                    0;	///< Optional element.
/// Element money of type xs:double.
    double                               money                          1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element workId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            workId                         1;	///< Required element.
/// Element work_name of type xs:string.
    char*                                work_USCOREname                0;	///< Optional element.
/// Element manager_name of type xs:string.
    char*                                manager_USCOREname             0;	///< Optional element.
/// Element moneyBefore of type xs:double.
    double                               moneyBefore                    1;	///< Required element.
/// Element moneyAfter of type xs:double.
    double                               moneyAfter                     1;	///< Required element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element returnMoney of type xs:double.
    double                               returnMoney                    1;	///< Required element.
/// Element customerName of type xs:string.
    char*                                customerName                   0;	///< Optional element.
/// Element customerBeforeMoney of type xs:double.
    double                               customerBeforeMoney            1;	///< Required element.
/// Element customerAfterMoney of type xs:double.
    double                               customerAfterMoney             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfPayPublicTelItem is a complexType.
class ns1__ArrayOfPayPublicTelItem
{ public:
/// Size of array of ns1__PayPublicTelItem* is 0..unbounded
   $int                                  __sizePayPublicTelItem         0;
/// Pointer to array ns1__PayPublicTelItem* of length 0..unbounded
    ns1__PayPublicTelItem*              *PayPublicTelItem               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PayPublicTelItem is a complexType.
class ns1__PayPublicTelItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element addDateTime of type xs:dateTime.
    time_t                               addDateTime                    1;	///< Required element.
/// Element telType of type xs:string.
    char*                                telType                        0;	///< Optional element.
/// Element telAccount of type xs:string.
    char*                                telAccount                     0;	///< Optional element.
/// Element money of type xs:double.
    double                               money                          1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element workId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            workId                         1;	///< Required element.
/// Element work_name of type xs:string.
    char*                                work_USCOREname                0;	///< Optional element.
/// Element manager_name of type xs:string.
    char*                                manager_USCOREname             0;	///< Optional element.
/// Element moneyBefore of type xs:double.
    double                               moneyBefore                    1;	///< Required element.
/// Element moneyAfter of type xs:double.
    double                               moneyAfter                     1;	///< Required element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element returnMoney of type xs:double.
    double                               returnMoney                    1;	///< Required element.
/// Element area of type xs:string.
    char*                                area                           0;	///< Optional element.
/// Element location of type xs:string.
    char*                                location                       0;	///< Optional element.
/// Element customerName of type xs:string.
    char*                                customerName                   0;	///< Optional element.
/// Element customerBeforeMoney of type xs:double.
    double                               customerBeforeMoney            1;	///< Required element.
/// Element customerAfterMoney of type xs:double.
    double                               customerAfterMoney             1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":User is a complexType.
class ns1__User
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element loggingName of type xs:string.
    char*                                loggingName                    0;	///< Optional element.
/// Element password of type xs:string.
    char*                                password                       0;	///< Optional element.
/// Element money of type xs:float.
    float                                money                          1;	///< Required element.
/// Element tel of type xs:string.
    char*                                tel                            0;	///< Optional element.
/// Element mac of type xs:string.
    char*                                mac                            0;	///< Optional element.
/// Element address of type xs:string.
    char*                                address                        0;	///< Optional element.
/// Element shopName of type xs:string.
    char*                                shopName                       0;	///< Optional element.
/// Element mobilePhone of type xs:string.
    char*                                mobilePhone                    0;	///< Optional element.
/// Element pingying of type xs:string.
    char*                                pingying                       0;	///< Optional element.
/// Element realName of type xs:string.
    char*                                realName                       0;	///< Optional element.
/// Element indentityNo of type xs:string.
    char*                                indentityNo                    0;	///< Optional element.
/// Element manager_id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            manager_USCOREid               1;	///< Required element.
/// Element managerName of type xs:string.
    char*                                managerName                    0;	///< Optional element.
/// Element moneyTail of type xs:string.
    char*                                moneyTail                      0;	///< Optional element.
/// Element level of type xs:string.
    char*                                level                          0;	///< Optional element.
/// Element registerDatetime of type xs:dateTime.
    time_t                               registerDatetime               1;	///< Required element.
/// Element isValidate of type xs:boolean.
    bool                                 isValidate                     1;	///< Required element.
/// Element btnList of type xs:string.
    char*                                btnList                        0;	///< Optional element.
/// Element userType of type xs:string.
    char*                                userType                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ReturnInfo is a complexType.
class ns1__ReturnInfo
{ public:
/// Element lastChargeTime of type xs:string.
    char*                                lastChargeTime                 0;	///< Optional element.
/// Element curMoney of type xs:double.
    double                               curMoney                       1;	///< Required element.
/// Element list of type "http://tempuri.org/":ArrayOfReturnInfoItem.
    ns1__ArrayOfReturnInfoItem*          list                           0;	///< Optional element.
/// Element total of type xs:int.
    int                                  total                          1;	///< Required element.
/// Element processTotalMoney of type xs:double.
    double                               processTotalMoney              1;	///< Required element.
/// Element returnTotalMoney of type xs:double.
    double                               returnTotalMoney               1;	///< Required element.
/// Element afterReturnTotalMoney of type xs:double.
    double                               afterReturnTotalMoney          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfReturnInfoItem is a complexType.
class ns1__ArrayOfReturnInfoItem
{ public:
/// Size of array of ns1__ReturnInfoItem* is 0..unbounded
   $int                                  __sizeReturnInfoItem           0;
/// Pointer to array ns1__ReturnInfoItem* of length 0..unbounded
    ns1__ReturnInfoItem*                *ReturnInfoItem                 0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ReturnInfoItem is a complexType.
class ns1__ReturnInfoItem
{ public:
/// Element type of type xs:string.
    char*                                type                           0;	///< Optional element.
/// Element totalMoney of type xs:double.
    double                               totalMoney                     1;	///< Required element.
/// Element returnMoney of type xs:double.
    double                               returnMoney                    1;	///< Required element.
/// Element count of type xs:int.
    int                                  count                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfWorker is a complexType.
class ns1__ArrayOfWorker
{ public:
/// Size of array of ns1__Worker* is 0..unbounded
   $int                                  __sizeWorker                   0;
/// Pointer to array ns1__Worker* of length 0..unbounded
    ns1__Worker*                        *Worker                         0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":Worker is a complexType.
class ns1__Worker
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element WorkerName of type xs:string.
    char*                                WorkerName                     0;	///< Optional element.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element MAC_Address of type xs:string.
    char*                                MAC_USCOREAddress              0;	///< Optional element.
/// Element CPU_Code of type xs:string.
    char*                                CPU_USCORECode                 0;	///< Optional element.
/// Element Telephone of type xs:string.
    char*                                Telephone                      0;	///< Optional element.
/// Element RealName of type xs:string.
    char*                                RealName                       0;	///< Optional element.
/// Element WorkerType of type xs:string.
    char*                                WorkerType                     0;	///< Optional element.
/// Element SessionId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            SessionId                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfSystemFunction is a complexType.
class ns1__ArrayOfSystemFunction
{ public:
/// Size of array of ns1__SystemFunction* is 0..unbounded
   $int                                  __sizeSystemFunction           0;
/// Pointer to array ns1__SystemFunction* of length 0..unbounded
    ns1__SystemFunction*                *SystemFunction                 0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":SystemFunction is a complexType.
class ns1__SystemFunction
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element FunctionName of type xs:string.
    char*                                FunctionName                   0;	///< Optional element.
/// Element FunctionPictureName of type xs:string.
    char*                                FunctionPictureName            0;	///< Optional element.
/// Element FunctionNamespace of type xs:string.
    char*                                FunctionNamespace              0;	///< Optional element.
/// Element FunctionScope of type xs:string.
    char*                                FunctionScope                  0;	///< Optional element.
/// Element Right of type xs:int.
    int                                  Right                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfReturnedItem is a complexType.
class ns1__ArrayOfReturnedItem
{ public:
/// Size of array of ns1__ReturnedItem* is 0..unbounded
   $int                                  __sizeReturnedItem             0;
/// Pointer to array ns1__ReturnedItem* of length 0..unbounded
    ns1__ReturnedItem*                  *ReturnedItem                   0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ReturnedItem is a complexType.
class ns1__ReturnedItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element datetime of type xs:dateTime.
    time_t                               datetime                       1;	///< Required element.
/// Element returnType of type xs:string.
    char*                                returnType                     0;	///< Optional element.
/// Element operationId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            operationId                    1;	///< Required element.
/// Element money of type xs:double.
    double                               money                          1;	///< Required element.
/// Element returnPoint of type xs:double.
    double                               returnPoint                    1;	///< Required element.
/// Element returnMoney of type xs:double.
    double                               returnMoney                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfAcountPaymentItem is a complexType.
class ns1__ArrayOfAcountPaymentItem
{ public:
/// Size of array of ns1__AcountPaymentItem* is 0..unbounded
   $int                                  __sizeAcountPaymentItem        0;
/// Pointer to array ns1__AcountPaymentItem* of length 0..unbounded
    ns1__AcountPaymentItem*             *AcountPaymentItem              0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":AcountPaymentItem is a complexType.
class ns1__AcountPaymentItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element acountName of type xs:string.
    char*                                acountName                     0;	///< Optional element.
/// Element payMoney of type xs:float.
    float                                payMoney                       1;	///< Required element.
/// Element payType of type xs:string.
    char*                                payType                        0;	///< Optional element.
/// Element bankName of type xs:string.
    char*                                bankName                       0;	///< Optional element.
/// Element subBankName of type xs:string.
    char*                                subBankName                    0;	///< Optional element.
/// Element payTime of type xs:dateTime.
    time_t                               payTime                        1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element isCheck of type xs:boolean.
    bool                                 isCheck                        1;	///< Required element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element workerId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            workerId                       1;	///< Required element.
/// Element workName of type xs:string.
    char*                                workName                       0;	///< Optional element.
/// Element userType of type xs:string.
    char*                                userType                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfDIC_Content is a complexType.
class ns1__ArrayOfDIC_USCOREContent
{ public:
/// Size of array of ns1__DIC_USCOREContent* is 0..unbounded
   $int                                  __sizeDIC_USCOREContent        0;
/// Pointer to array ns1__DIC_USCOREContent* of length 0..unbounded
    ns1__DIC_USCOREContent*             *DIC_USCOREContent              0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":DIC_Content is a complexType.
class ns1__DIC_USCOREContent
{ public:
/// Element Name of type xs:string.
    char*                                Name                           0;	///< Optional element.
/// Element Code of type xs:string.
    char*                                Code                           0;	///< Optional element.
/// Element Category of type xs:string.
    char*                                Category                       0;	///< Optional element.
/// Element Enabled of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element val1 of type xs:string.
    char*                                val1                           0;	///< Optional element.
/// Element val2 of type xs:string.
    char*                                val2                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfDIC_Category is a complexType.
class ns1__ArrayOfDIC_USCORECategory
{ public:
/// Size of array of ns1__DIC_USCORECategory* is 0..unbounded
   $int                                  __sizeDIC_USCORECategory       0;
/// Pointer to array ns1__DIC_USCORECategory* of length 0..unbounded
    ns1__DIC_USCORECategory*            *DIC_USCORECategory             0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":DIC_Category is a complexType.
class ns1__DIC_USCORECategory
{ public:
/// Element Category of type xs:string.
    char*                                Category                       0;	///< Optional element.
/// Element Editable of type xs:boolean.
    bool                                 Editable                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":TableStatistics is a complexType.
class ns1__TableStatistics
{ public:
/// Element total of type xs:int.
    int                                  total                          1;	///< Required element.
/// Element sum1 of type xs:double.
    double                               sum1                           1;	///< Required element.
/// Element sum2 of type xs:double.
    double                               sum2                           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":Notice is a complexType.
class ns1__Notice
{ public:
/// Element total of type xs:int.
    int                                  total                          1;	///< Required element.
/// Element totalPage of type xs:int.
    int                                  totalPage                      1;	///< Required element.
/// Element pageSize of type xs:int.
    int                                  pageSize                       1;	///< Required element.
/// Element currentPageIndex of type xs:int.
    int                                  currentPageIndex               1;	///< Required element.
/// Element listOfNotice of type "http://tempuri.org/":ArrayOfNoticeItem.
    ns1__ArrayOfNoticeItem*              listOfNotice                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfNoticeItem is a complexType.
class ns1__ArrayOfNoticeItem
{ public:
/// Size of array of ns1__NoticeItem* is 0..unbounded
   $int                                  __sizeNoticeItem               0;
/// Pointer to array ns1__NoticeItem* of length 0..unbounded
    ns1__NoticeItem*                    *NoticeItem                     0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":NoticeItem is a complexType.
class ns1__NoticeItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element title of type xs:string.
    char*                                title                          0;	///< Optional element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element publishDatetime of type xs:dateTime.
    time_t                               publishDatetime                1;	///< Required element.
/// Element type of type xs:string.
    char*                                type                           0;	///< Optional element.
/// Element publisher_id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            publisher_USCOREid             1;	///< Required element.
/// Element isEnable of type xs:boolean.
    bool                                 isEnable                       1;	///< Required element.
/// Element weight of type xs:int.
    int                                  weight                         1;	///< Required element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfReturnProportion is a complexType.
class ns1__ArrayOfReturnProportion
{ public:
/// Size of array of ns1__ReturnProportion* is 0..unbounded
   $int                                  __sizeReturnProportion         0;
/// Pointer to array ns1__ReturnProportion* of length 0..unbounded
    ns1__ReturnProportion*              *ReturnProportion               0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ReturnProportion is a complexType.
class ns1__ReturnProportion
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element ReturnClass of type xs:string.
    char*                                ReturnClass                    0;	///< Optional element.
/// Element ReturnName of type xs:string.
    char*                                ReturnName                     0;	///< Optional element.
/// Element area of type xs:string.
    char*                                area                           0;	///< Optional element.
/// Element level of type xs:string.
    char*                                level                          0;	///< Optional element.
/// Element returnPoint of type xs:double.
    double                               returnPoint                    1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfPhoneNumberBelong is a complexType.
class ns1__ArrayOfPhoneNumberBelong
{ public:
/// Size of array of ns1__PhoneNumberBelong* is 0..unbounded
   $int                                  __sizePhoneNumberBelong        0;
/// Pointer to array ns1__PhoneNumberBelong* of length 0..unbounded
    ns1__PhoneNumberBelong*             *PhoneNumberBelong              0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PhoneNumberBelong is a complexType.
class ns1__PhoneNumberBelong
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element HaoDuan of type xs:string.
    char*                                HaoDuan                        0;	///< Optional element.
/// Element QuHao of type xs:string.
    char*                                QuHao                          0;	///< Optional element.
/// Element ShengFen of type xs:string.
    char*                                ShengFen                       0;	///< Optional element.
/// Element City of type xs:string.
    char*                                City                           0;	///< Optional element.
/// Element Area of type xs:string.
    char*                                Area                           0;	///< Optional element.
/// Element AddTime of type xs:dateTime.
    time_t                               AddTime                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":CompanyInfo is a complexType.
class ns1__CompanyInfo
{ public:
/// Element name of type xs:string.
    char*                                name                           0;	///< Optional element.
/// Element address of type xs:string.
    char*                                address                        0;	///< Optional element.
/// Element manager of type xs:string.
    char*                                manager                        0;	///< Optional element.
/// Element QQ of type xs:string.
    char*                                QQ                             0;	///< Optional element.
/// Element tel_1 of type xs:string.
    char*                                tel_USCORE1                    0;	///< Optional element.
/// Element tel_2 of type xs:string.
    char*                                tel_USCORE2                    0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfCompanyAccount is a complexType.
class ns1__ArrayOfCompanyAccount
{ public:
/// Size of array of ns1__CompanyAccount* is 0..unbounded
   $int                                  __sizeCompanyAccount           0;
/// Pointer to array ns1__CompanyAccount* of length 0..unbounded
    ns1__CompanyAccount*                *CompanyAccount                 0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":CompanyAccount is a complexType.
class ns1__CompanyAccount
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element AccountNo of type xs:string.
    char*                                AccountNo                      0;	///< Optional element.
/// Element Bank of type xs:string.
    char*                                Bank                           0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":Result is a complexType.
class ns1__Result
{ public:
/// Element UserName of type xs:string.
    char*                                UserName                       0;	///< Optional element.
/// Element Balance of type xs:string.
    char*                                Balance                        0;	///< Optional element.
/// Element PhoneType of type xs:string.
    char*                                PhoneType                      0;	///< Optional element.
/// Element AccessNum of type xs:string.
    char*                                AccessNum                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PhoneNoList is a complexType.
class ns1__PhoneNoList
{ public:
/// Element total of type xs:int.
    int                                  total                          1;	///< Required element.
/// Element totalPage of type xs:int.
    int                                  totalPage                      1;	///< Required element.
/// Element pageSize of type xs:int.
    int                                  pageSize                       1;	///< Required element.
/// Element currentPageIndex of type xs:int.
    int                                  currentPageIndex               1;	///< Required element.
/// Element listOfPhoneNo of type "http://tempuri.org/":ArrayOfPhoneNoItem.
    ns1__ArrayOfPhoneNoItem*             listOfPhoneNo                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfPhoneNoItem is a complexType.
class ns1__ArrayOfPhoneNoItem
{ public:
/// Size of array of ns1__PhoneNoItem* is 0..unbounded
   $int                                  __sizePhoneNoItem              0;
/// Pointer to array ns1__PhoneNoItem* of length 0..unbounded
    ns1__PhoneNoItem*                   *PhoneNoItem                    0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PhoneNoItem is a complexType.
class ns1__PhoneNoItem
{ public:
/// Element id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            id                             1;	///< Required element.
/// Element No of type xs:string.
    char*                                No                             0;	///< Optional element.
/// Element NoSection of type xs:string.
    char*                                NoSection                      0;	///< Optional element.
/// Element inNetPolicy of type xs:string.
    char*                                inNetPolicy                    0;	///< Optional element.
/// Element NoPrice of type xs:double.
    double                               NoPrice                        1;	///< Required element.
/// Element area of type xs:string.
    char*                                area                           0;	///< Optional element.
/// Element weight of type xs:int.
    int                                  weight                         1;	///< Required element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element lockDateime of type xs:dateTime.
    time_t                               lockDateime                    1;	///< Required element.
/// Element getterId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            getterId                       1;	///< Required element.
/// Element getterName of type xs:string.
    char*                                getterName                     0;	///< Optional element.
/// Element getDateime of type xs:dateTime.
    time_t                               getDateime                     1;	///< Required element.
/// Element assignerId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            assignerId                     1;	///< Required element.
/// Element assignerName of type xs:string.
    char*                                assignerName                   0;	///< Optional element.
/// Element assignDateime of type xs:dateTime.
    time_t                               assignDateime                  1;	///< Required element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element usedDateime of type xs:dateTime.
    time_t                               usedDateime                    1;	///< Required element.
/// Element sp of type xs:string.
    char*                                sp                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfString is a complexType.
class ns1__ArrayOfString
{ public:
/// Size of array of char* is 0..unbounded
   $int                                  __sizestring                   0;
/// Pointer to array char* of length 0..unbounded
    char*                               *string                         0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfMiniCardItem is a complexType.
class ns1__ArrayOfMiniCardItem
{ public:
/// Size of array of ns1__MiniCardItem* is 0..unbounded
   $int                                  __sizeMiniCardItem             0;
/// Pointer to array ns1__MiniCardItem* of length 0..unbounded
    ns1__MiniCardItem*                  *MiniCardItem                   0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":MiniCardItem is a complexType.
class ns1__MiniCardItem
{ public:
/// Element id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            id                             1;	///< Required element.
/// Element cardNo of type xs:string.
    char*                                cardNo                         0;	///< Optional element.
/// Element noSection of type xs:string.
    char*                                noSection                      0;	///< Optional element.
/// Element SP of type xs:string.
    char*                                SP                             0;	///< Optional element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element getWorkerId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            getWorkerId                    1;	///< Required element.
/// Element getWorkerName of type xs:string.
    char*                                getWorkerName                  0;	///< Optional element.
/// Element workerId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            workerId                       1;	///< Required element.
/// Element workerName of type xs:string.
    char*                                workerName                     0;	///< Optional element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element getDate of type xs:dateTime.
    time_t                               getDate                        1;	///< Required element.
/// Element assignDate of type xs:dateTime.
    time_t                               assignDate                     1;	///< Required element.
/// Element sellDate of type xs:dateTime.
    time_t                               sellDate                       1;	///< Required element.
/// Element usedDate of type xs:dateTime.
    time_t                               usedDate                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfPayMiniCardItem is a complexType.
class ns1__ArrayOfPayMiniCardItem
{ public:
/// Size of array of ns1__PayMiniCardItem* is 0..unbounded
   $int                                  __sizePayMiniCardItem          0;
/// Pointer to array ns1__PayMiniCardItem* of length 0..unbounded
    ns1__PayMiniCardItem*               *PayMiniCardItem                0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":PayMiniCardItem is a complexType.
class ns1__PayMiniCardItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element addDateTime of type xs:dateTime.
    time_t                               addDateTime                    1;	///< Required element.
/// Element managerId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            managerId                      1;	///< Required element.
/// Element managerName of type xs:string.
    char*                                managerName                    0;	///< Optional element.
/// Element money of type xs:double.
    double                               money                          1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element workId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            workId                         1;	///< Required element.
/// Element work_name of type xs:string.
    char*                                work_USCOREname                0;	///< Optional element.
/// Element workType of type xs:string.
    char*                                workType                       0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element SP of type xs:string.
    char*                                SP                             0;	///< Optional element.
/// Element cardNum of type xs:int.
    int                                  cardNum                        1;	///< Required element.
/// Element moneyBefore of type xs:double.
    double                               moneyBefore                    1;	///< Required element.
/// Element moneyAfter of type xs:double.
    double                               moneyAfter                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfCardService is a complexType.
class ns1__ArrayOfCardService
{ public:
/// Size of array of ns1__CardService* is 0..unbounded
   $int                                  __sizeCardService              0;
/// Pointer to array ns1__CardService* of length 0..unbounded
    ns1__CardService*                   *CardService                    0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":CardService is a complexType.
class ns1__CardService
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element SP of type xs:string.
    char*                                SP                             0;	///< Optional element.
/// Element serviceName of type xs:string.
    char*                                serviceName                    0;	///< Optional element.
/// Element isFreq of type xs:boolean.
    bool                                 isFreq                         1;	///< Required element.
/// Element serviceSpec of type xs:string.
    char*                                serviceSpec                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfSellCardItem is a complexType.
class ns1__ArrayOfSellCardItem
{ public:
/// Size of array of ns1__SellCardItem* is 0..unbounded
   $int                                  __sizeSellCardItem             0;
/// Pointer to array ns1__SellCardItem* of length 0..unbounded
    ns1__SellCardItem*                  *SellCardItem                   0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":SellCardItem is a complexType.
class ns1__SellCardItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element telNo of type xs:string.
    char*                                telNo                          0;	///< Optional element.
/// Element miniNo of type xs:string.
    char*                                miniNo                         0;	///< Optional element.
/// Element sellTime of type xs:dateTime.
    time_t                               sellTime                       1;	///< Required element.
/// Element passwd of type xs:string.
    char*                                passwd                         0;	///< Optional element.
/// Element brand of type xs:string.
    char*                                brand                          0;	///< Optional element.
/// Element brandNo of type xs:string.
    char*                                brandNo                        0;	///< Optional element.
/// Element cardPrice of type xs:string.
    char*                                cardPrice                      0;	///< Optional element.
/// Element isOtherService of type xs:boolean.
    bool                                 isOtherService                 1;	///< Required element.
/// Element chargeMoney of type xs:double.
    double                               chargeMoney                    1;	///< Required element.
/// Element moneyBefore of type xs:double.
    double                               moneyBefore                    1;	///< Required element.
/// Element moneyAfter of type xs:double.
    double                               moneyAfter                     1;	///< Required element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element user_id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            user_USCOREid                  1;	///< Required element.
/// Element user_name of type xs:string.
    char*                                user_USCOREname                0;	///< Optional element.
/// Element work_id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            work_USCOREid                  1;	///< Required element.
/// Element work_name of type xs:string.
    char*                                work_USCOREname                0;	///< Optional element.
/// Element manager_id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            manager_USCOREid               1;	///< Required element.
/// Element manager_name of type xs:string.
    char*                                manager_USCOREname             0;	///< Optional element.
/// Element SP of type xs:string.
    char*                                SP                             0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element noSection of type xs:string.
    char*                                noSection                      0;	///< Optional element.
/// Element noPrice of type xs:double.
    double                               noPrice                        1;	///< Required element.
/// Element area of type xs:string.
    char*                                area                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfBusinessItem is a complexType.
class ns1__ArrayOfBusinessItem
{ public:
/// Size of array of ns1__BusinessItem* is 0..unbounded
   $int                                  __sizeBusinessItem             0;
/// Pointer to array ns1__BusinessItem* of length 0..unbounded
    ns1__BusinessItem*                  *BusinessItem                   0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":BusinessItem is a complexType.
class ns1__BusinessItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element businessName of type xs:string.
    char*                                businessName                   0;	///< Optional element.
/// Element businessSpec of type xs:string.
    char*                                businessSpec                   0;	///< Optional element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element sp of type xs:string.
    char*                                sp                             0;	///< Optional element.
/// Element no of type xs:string.
    char*                                no                             0;	///< Optional element.
/// Element passwd of type xs:string.
    char*                                passwd                         0;	///< Optional element.
/// Element datetime of type xs:dateTime.
    time_t                               datetime                       1;	///< Required element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element replay of type xs:string.
    char*                                replay                         0;	///< Optional element.
/// Element workerId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            workerId                       1;	///< Required element.
/// Element workerName of type xs:string.
    char*                                workerName                     0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element returnMoney of type xs:double.
    double                               returnMoney                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfSellOtherCardItem is a complexType.
class ns1__ArrayOfSellOtherCardItem
{ public:
/// Size of array of ns1__SellOtherCardItem* is 0..unbounded
   $int                                  __sizeSellOtherCardItem        0;
/// Pointer to array ns1__SellOtherCardItem* of length 0..unbounded
    ns1__SellOtherCardItem*             *SellOtherCardItem              0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":SellOtherCardItem is a complexType.
class ns1__SellOtherCardItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element datetime of type xs:dateTime.
    time_t                               datetime                       1;	///< Required element.
/// Element cardType of type xs:string.
    char*                                cardType                       0;	///< Optional element.
/// Element cardName of type xs:string.
    char*                                cardName                       0;	///< Optional element.
/// Element cardSeq of type xs:string.
    char*                                cardSeq                        0;	///< Optional element.
/// Element cardPsw of type xs:string.
    char*                                cardPsw                        0;	///< Optional element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// Element workerId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            workerId                       1;	///< Required element.
/// Element workerName of type xs:string.
    char*                                workerName                     0;	///< Optional element.
/// Element chargeMoney of type xs:double.
    double                               chargeMoney                    1;	///< Required element.
/// Element moneyBefore of type xs:double.
    double                               moneyBefore                    1;	///< Required element.
/// Element moneyAfter of type xs:double.
    double                               moneyAfter                     1;	///< Required element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfOtherCardItem is a complexType.
class ns1__ArrayOfOtherCardItem
{ public:
/// Size of array of ns1__OtherCardItem* is 0..unbounded
   $int                                  __sizeOtherCardItem            0;
/// Pointer to array ns1__OtherCardItem* of length 0..unbounded
    ns1__OtherCardItem*                 *OtherCardItem                  0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":OtherCardItem is a complexType.
class ns1__OtherCardItem
{ public:
/// Element cardType of type xs:string.
    char*                                cardType                       0;	///< Optional element.
/// Element cardName of type xs:string.
    char*                                cardName                       0;	///< Optional element.
/// Element cardPrice of type xs:double.
    double                               cardPrice                      1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":ArrayOfStockCardItem is a complexType.
class ns1__ArrayOfStockCardItem
{ public:
/// Size of array of ns1__StockCardItem* is 0..unbounded
   $int                                  __sizeStockCardItem            0;
/// Pointer to array ns1__StockCardItem* of length 0..unbounded
    ns1__StockCardItem*                 *StockCardItem                  0;	///< Nullable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://tempuri.org/":StockCardItem is a complexType.
class ns1__StockCardItem
{ public:
/// Element Id of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            Id                             1;	///< Required element.
/// Element cardType of type xs:string.
    char*                                cardType                       0;	///< Optional element.
/// Element cardName of type xs:string.
    char*                                cardName                       0;	///< Optional element.
/// Element cardSeq of type xs:string.
    char*                                cardSeq                        0;	///< Optional element.
/// Element cardPsw of type xs:string.
    char*                                cardPsw                        0;	///< Optional element.
/// Element getDate of type xs:dateTime.
    time_t                               getDate                        1;	///< Required element.
/// Element getterId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            getterId                       1;	///< Required element.
/// Element getterName of type xs:string.
    char*                                getterName                     0;	///< Optional element.
/// Element sellDate of type xs:dateTime.
    time_t                               sellDate                       1;	///< Required element.
/// Element userId of type "http://microsoft.com/wsdl/types/":guid.
    ns2__guid                            userId                         1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element state of type xs:string.
    char*                                state                          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetLocation

/// "http://tempuri.org/":GetLocation is a complexType.
class _ns1__GetLocation
{ public:
/// Element phoneNo of type xs:string.
    char*                                phoneNo                        0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetLocationResponse

/// "http://tempuri.org/":GetLocationResponse is a complexType.
class _ns1__GetLocationResponse
{ public:
/// Element GetLocationResult of type xs:string.
    char*                                GetLocationResult              0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayMoney

/// "http://tempuri.org/":PayMoney is a complexType.
class _ns1__PayMoney
{ public:
/// Element phoneNo of type xs:string.
    char*                                phoneNo                        0;	///< Optional element.
/// Element money of type xs:string.
    char*                                money                          0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// Element SP of type xs:string.
    char*                                SP                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayMoneyResponse

/// "http://tempuri.org/":PayMoneyResponse is a complexType.
class _ns1__PayMoneyResponse
{ public:
/// Element PayMoneyResult of type xs:string.
    char*                                PayMoneyResult                 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayMoneyWithList

/// "http://tempuri.org/":PayMoneyWithList is a complexType.
class _ns1__PayMoneyWithList
{ public:
/// Element data of type xs:string.
    char*                                data                           0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// Element SP of type xs:string.
    char*                                SP                             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayMoneyWithListResponse

/// "http://tempuri.org/":PayMoneyWithListResponse is a complexType.
class _ns1__PayMoneyWithListResponse
{ public:
/// Element PayMoneyWithListResult of type "http://tempuri.org/":PayWithListResult.
    ns1__PayWithListResult*              PayMoneyWithListResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":RequstRollback

/// "http://tempuri.org/":RequstRollback is a complexType.
class _ns1__RequstRollback
{ public:
/// Element paymentId of type xs:string.
    char*                                paymentId                      0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element type of type xs:string.
    char*                                type                           0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":RequstRollbackResponse

/// "http://tempuri.org/":RequstRollbackResponse is a complexType.
class _ns1__RequstRollbackResponse
{ public:
/// Element RequstRollbackResult of type xs:string.
    char*                                RequstRollbackResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayInternet

/// "http://tempuri.org/":PayInternet is a complexType.
class _ns1__PayInternet
{ public:
/// Element internetType of type xs:string.
    char*                                internetType                   0;	///< Optional element.
/// Element internetAccount of type xs:string.
    char*                                internetAccount                0;	///< Optional element.
/// Element money of type xs:string.
    char*                                money                          0;	///< Optional element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayInternetResponse

/// "http://tempuri.org/":PayInternetResponse is a complexType.
class _ns1__PayInternetResponse
{ public:
/// Element PayInternetResult of type xs:string.
    char*                                PayInternetResult              0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayInternetWithList

/// "http://tempuri.org/":PayInternetWithList is a complexType.
class _ns1__PayInternetWithList
{ public:
/// Element data of type xs:string.
    char*                                data                           0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayInternetWithListResponse

/// "http://tempuri.org/":PayInternetWithListResponse is a complexType.
class _ns1__PayInternetWithListResponse
{ public:
/// Element PayInternetWithListResult of type "http://tempuri.org/":PayWithListResult.
    ns1__PayWithListResult*              PayInternetWithListResult      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":RequstInternetRollback

/// "http://tempuri.org/":RequstInternetRollback is a complexType.
class _ns1__RequstInternetRollback
{ public:
/// Element paymentId of type xs:string.
    char*                                paymentId                      0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element type of type xs:string.
    char*                                type                           0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":RequstInternetRollbackResponse

/// "http://tempuri.org/":RequstInternetRollbackResponse is a complexType.
class _ns1__RequstInternetRollbackResponse
{ public:
/// Element RequstInternetRollbackResult of type xs:string.
    char*                                RequstInternetRollbackResult   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayGame

/// "http://tempuri.org/":PayGame is a complexType.
class _ns1__PayGame
{ public:
/// Element gameType of type xs:string.
    char*                                gameType                       0;	///< Optional element.
/// Element gameAccount of type xs:string.
    char*                                gameAccount                    0;	///< Optional element.
/// Element money of type xs:string.
    char*                                money                          0;	///< Optional element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayGameResponse

/// "http://tempuri.org/":PayGameResponse is a complexType.
class _ns1__PayGameResponse
{ public:
/// Element PayGameResult of type xs:string.
    char*                                PayGameResult                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayPublicTel

/// "http://tempuri.org/":PayPublicTel is a complexType.
class _ns1__PayPublicTel
{ public:
/// Element telType of type xs:string.
    char*                                telType                        0;	///< Optional element.
/// Element telAccount of type xs:string.
    char*                                telAccount                     0;	///< Optional element.
/// Element money of type xs:string.
    char*                                money                          0;	///< Optional element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element userName of type xs:string.
    char*                                userName                       0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":PayPublicTelResponse

/// "http://tempuri.org/":PayPublicTelResponse is a complexType.
class _ns1__PayPublicTelResponse
{ public:
/// Element PayPublicTelResult of type xs:string.
    char*                                PayPublicTelResult             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPaymentRecord

/// "http://tempuri.org/":GetPaymentRecord is a complexType.
class _ns1__GetPaymentRecord
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPaymentRecordResponse

/// "http://tempuri.org/":GetPaymentRecordResponse is a complexType.
class _ns1__GetPaymentRecordResponse
{ public:
/// Element GetPaymentRecordResult of type "http://tempuri.org/":ArrayOfPaymentItem.
    ns1__ArrayOfPaymentItem*             GetPaymentRecordResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPaymentItem

/// "http://tempuri.org/":GetPaymentItem is a complexType.
class _ns1__GetPaymentItem
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPaymentItemResponse

/// "http://tempuri.org/":GetPaymentItemResponse is a complexType.
class _ns1__GetPaymentItemResponse
{ public:
/// Element GetPaymentItemResult of type "http://tempuri.org/":PaymentItem.
    ns1__PaymentItem*                    GetPaymentItemResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetTransactionByCondition

/// "http://tempuri.org/":GetTransactionByCondition is a complexType.
class _ns1__GetTransactionByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetTransactionByConditionResponse

/// "http://tempuri.org/":GetTransactionByConditionResponse is a complexType.
class _ns1__GetTransactionByConditionResponse
{ public:
/// Element GetTransactionByConditionResult of type "http://tempuri.org/":ArrayOfTransaction.
    ns1__ArrayOfTransaction*             GetTransactionByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetTransactionStaticsByCondition

/// "http://tempuri.org/":GetTransactionStaticsByCondition is a complexType.
class _ns1__GetTransactionStaticsByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetTransactionStaticsByConditionResponse

/// "http://tempuri.org/":GetTransactionStaticsByConditionResponse is a complexType.
class _ns1__GetTransactionStaticsByConditionResponse
{ public:
/// Element GetTransactionStaticsByConditionResult of type "http://tempuri.org/":ArrayOfTransStaticsItem.
    ns1__ArrayOfTransStaticsItem*        GetTransactionStaticsByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPaymentOrPaymentHistoryByCondition

/// "http://tempuri.org/":GetPaymentOrPaymentHistoryByCondition is a complexType.
class _ns1__GetPaymentOrPaymentHistoryByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPaymentOrPaymentHistoryByConditionResponse

/// "http://tempuri.org/":GetPaymentOrPaymentHistoryByConditionResponse is a complexType.
class _ns1__GetPaymentOrPaymentHistoryByConditionResponse
{ public:
/// Element GetPaymentOrPaymentHistoryByConditionResult of type "http://tempuri.org/":ArrayOfPaymentItem.
    ns1__ArrayOfPaymentItem*             GetPaymentOrPaymentHistoryByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayInternetByCondition

/// "http://tempuri.org/":GetPayInternetByCondition is a complexType.
class _ns1__GetPayInternetByCondition
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayInternetByConditionResponse

/// "http://tempuri.org/":GetPayInternetByConditionResponse is a complexType.
class _ns1__GetPayInternetByConditionResponse
{ public:
/// Element GetPayInternetByConditionResult of type "http://tempuri.org/":ArrayOfPayInternetItem.
    ns1__ArrayOfPayInternetItem*         GetPayInternetByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayInternetHistoryByCondition

/// "http://tempuri.org/":GetPayInternetHistoryByCondition is a complexType.
class _ns1__GetPayInternetHistoryByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayInternetHistoryByConditionResponse

/// "http://tempuri.org/":GetPayInternetHistoryByConditionResponse is a complexType.
class _ns1__GetPayInternetHistoryByConditionResponse
{ public:
/// Element GetPayInternetHistoryByConditionResult of type "http://tempuri.org/":ArrayOfPayInternetItem.
    ns1__ArrayOfPayInternetItem*         GetPayInternetHistoryByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayGameByCondition

/// "http://tempuri.org/":GetPayGameByCondition is a complexType.
class _ns1__GetPayGameByCondition
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayGameByConditionResponse

/// "http://tempuri.org/":GetPayGameByConditionResponse is a complexType.
class _ns1__GetPayGameByConditionResponse
{ public:
/// Element GetPayGameByConditionResult of type "http://tempuri.org/":ArrayOfPayGameItem.
    ns1__ArrayOfPayGameItem*             GetPayGameByConditionResult    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayGameHistoryByCondition

/// "http://tempuri.org/":GetPayGameHistoryByCondition is a complexType.
class _ns1__GetPayGameHistoryByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayGameHistoryByConditionResponse

/// "http://tempuri.org/":GetPayGameHistoryByConditionResponse is a complexType.
class _ns1__GetPayGameHistoryByConditionResponse
{ public:
/// Element GetPayGameHistoryByConditionResult of type "http://tempuri.org/":ArrayOfPayGameItem.
    ns1__ArrayOfPayGameItem*             GetPayGameHistoryByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayPublicTelByCondition

/// "http://tempuri.org/":GetPayPublicTelByCondition is a complexType.
class _ns1__GetPayPublicTelByCondition
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayPublicTelByConditionResponse

/// "http://tempuri.org/":GetPayPublicTelByConditionResponse is a complexType.
class _ns1__GetPayPublicTelByConditionResponse
{ public:
/// Element GetPayPublicTelByConditionResult of type "http://tempuri.org/":ArrayOfPayPublicTelItem.
    ns1__ArrayOfPayPublicTelItem*        GetPayPublicTelByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayPublicTelHistoryByCondition

/// "http://tempuri.org/":GetPayPublicTelHistoryByCondition is a complexType.
class _ns1__GetPayPublicTelHistoryByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayPublicTelHistoryByConditionResponse

/// "http://tempuri.org/":GetPayPublicTelHistoryByConditionResponse is a complexType.
class _ns1__GetPayPublicTelHistoryByConditionResponse
{ public:
/// Element GetPayPublicTelHistoryByConditionResult of type "http://tempuri.org/":ArrayOfPayPublicTelItem.
    ns1__ArrayOfPayPublicTelItem*        GetPayPublicTelHistoryByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":HelloWorld

/// "http://tempuri.org/":HelloWorld is a complexType.
class _ns1__HelloWorld
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":HelloWorldResponse

/// "http://tempuri.org/":HelloWorldResponse is a complexType.
class _ns1__HelloWorldResponse
{ public:
/// Element HelloWorldResult of type xs:string.
    char*                                HelloWorldResult               0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":loggout

/// "http://tempuri.org/":loggout is a complexType.
class _ns1__loggout
{ public:
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":loggoutResponse

/// "http://tempuri.org/":loggoutResponse is a complexType.
class _ns1__loggoutResponse
{ public:
/// Element loggoutResult of type xs:string.
    char*                                loggoutResult                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":TestLogin

/// "http://tempuri.org/":TestLogin is a complexType.
class _ns1__TestLogin
{ public:
/// Element Username of type xs:string.
    char*                                Username                       0;	///< Optional element.
/// Element Password of type xs:string.
    char*                                Password                       0;	///< Optional element.
/// Element Mac of type xs:string.
    char*                                Mac                            0;	///< Optional element.
/// Element ip of type xs:string.
    char*                                ip                             0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":TestLoginResponse

/// "http://tempuri.org/":TestLoginResponse is a complexType.
class _ns1__TestLoginResponse
{ public:
/// Element TestLoginResult of type xs:string.
    char*                                TestLoginResult                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetUserInfo

/// "http://tempuri.org/":GetUserInfo is a complexType.
class _ns1__GetUserInfo
{ public:
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
/// Element password of type xs:string.
    char*                                password                       0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetUserInfoResponse

/// "http://tempuri.org/":GetUserInfoResponse is a complexType.
class _ns1__GetUserInfoResponse
{ public:
/// Element GetUserInfoResult of type "http://tempuri.org/":User.
    ns1__User*                           GetUserInfoResult              0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":RegisterUser

/// "http://tempuri.org/":RegisterUser is a complexType.
class _ns1__RegisterUser
{ public:
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
/// Element password of type xs:string.
    char*                                password                       0;	///< Optional element.
/// Element mac of type xs:string.
    char*                                mac                            0;	///< Optional element.
/// Element adrTel of type xs:string.
    char*                                adrTel                         0;	///< Optional element.
/// Element address of type xs:string.
    char*                                address                        0;	///< Optional element.
/// Element shopName of type xs:string.
    char*                                shopName                       0;	///< Optional element.
/// Element mobilePhone of type xs:string.
    char*                                mobilePhone                    0;	///< Optional element.
/// Element realName of type xs:string.
    char*                                realName                       0;	///< Optional element.
/// Element identifyNo of type xs:string.
    char*                                identifyNo                     0;	///< Optional element.
/// Element workerName of type xs:string.
    char*                                workerName                     0;	///< Optional element.
/// Element workerId of type xs:string.
    char*                                workerId                       0;	///< Optional element.
/// Element moneyTail of type xs:string.
    char*                                moneyTail                      0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":RegisterUserResponse

/// "http://tempuri.org/":RegisterUserResponse is a complexType.
class _ns1__RegisterUserResponse
{ public:
/// Element RegisterUserResult of type xs:string.
    char*                                RegisterUserResult             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AlterPsw

/// "http://tempuri.org/":AlterPsw is a complexType.
class _ns1__AlterPsw
{ public:
/// Element user_id of type xs:string.
    char*                                user_USCOREid                  0;	///< Optional element.
/// Element newPsw of type xs:string.
    char*                                newPsw                         0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AlterPswResponse

/// "http://tempuri.org/":AlterPswResponse is a complexType.
class _ns1__AlterPswResponse
{ public:
/// Element AlterPswResult of type xs:string.
    char*                                AlterPswResult                 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AlterUserInfo

/// "http://tempuri.org/":AlterUserInfo is a complexType.
class _ns1__AlterUserInfo
{ public:
/// Element user_id of type xs:string.
    char*                                user_USCOREid                  0;	///< Optional element.
/// Element adrTel of type xs:string.
    char*                                adrTel                         0;	///< Optional element.
/// Element address of type xs:string.
    char*                                address                        0;	///< Optional element.
/// Element shopName of type xs:string.
    char*                                shopName                       0;	///< Optional element.
/// Element mobilePhone of type xs:string.
    char*                                mobilePhone                    0;	///< Optional element.
/// Element realName of type xs:string.
    char*                                realName                       0;	///< Optional element.
/// Element identifyNo of type xs:string.
    char*                                identifyNo                     0;	///< Optional element.
/// Element workerName of type xs:string.
    char*                                workerName                     0;	///< Optional element.
/// Element moneyTail of type xs:string.
    char*                                moneyTail                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AlterUserInfoResponse

/// "http://tempuri.org/":AlterUserInfoResponse is a complexType.
class _ns1__AlterUserInfoResponse
{ public:
/// Element AlterUserInfoResult of type xs:string.
    char*                                AlterUserInfoResult            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddAcountPayment

/// "http://tempuri.org/":AddAcountPayment is a complexType.
class _ns1__AddAcountPayment
{ public:
/// Element username of type xs:string.
    char*                                username                       0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element money of type xs:float.
    float                                money                          1;	///< Required element.
/// Element payType of type xs:string.
    char*                                payType                        0;	///< Optional element.
/// Element bankName of type xs:string.
    char*                                bankName                       0;	///< Optional element.
/// Element subBankName of type xs:string.
    char*                                subBankName                    0;	///< Optional element.
/// Element payTime of type xs:long.
    LONG64                               payTime                        1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddAcountPaymentResponse

/// "http://tempuri.org/":AddAcountPaymentResponse is a complexType.
class _ns1__AddAcountPaymentResponse
{ public:
/// Element AddAcountPaymentResult of type xs:string.
    char*                                AddAcountPaymentResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetReturnInfo

/// "http://tempuri.org/":GetReturnInfo is a complexType.
class _ns1__GetReturnInfo
{ public:
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element clientLevel of type xs:string.
    char*                                clientLevel                    0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetReturnInfoResponse

/// "http://tempuri.org/":GetReturnInfoResponse is a complexType.
class _ns1__GetReturnInfoResponse
{ public:
/// Element GetReturnInfoResult of type "http://tempuri.org/":ReturnInfo.
    ns1__ReturnInfo*                     GetReturnInfoResult            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":CharegeReturnedMoney

/// "http://tempuri.org/":CharegeReturnedMoney is a complexType.
class _ns1__CharegeReturnedMoney
{ public:
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element clientLevel of type xs:string.
    char*                                clientLevel                    0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":CharegeReturnedMoneyResponse

/// "http://tempuri.org/":CharegeReturnedMoneyResponse is a complexType.
class _ns1__CharegeReturnedMoneyResponse
{ public:
/// Element CharegeReturnedMoneyResult of type xs:double.
    double                               CharegeReturnedMoneyResult     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetWorkNameList

/// "http://tempuri.org/":GetWorkNameList is a complexType.
class _ns1__GetWorkNameList
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetWorkNameListResponse

/// "http://tempuri.org/":GetWorkNameListResponse is a complexType.
class _ns1__GetWorkNameListResponse
{ public:
/// Element GetWorkNameListResult of type "http://tempuri.org/":ArrayOfWorker.
    ns1__ArrayOfWorker*                  GetWorkNameListResult          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetUserFunction

/// "http://tempuri.org/":GetUserFunction is a complexType.
class _ns1__GetUserFunction
{ public:
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetUserFunctionResponse

/// "http://tempuri.org/":GetUserFunctionResponse is a complexType.
class _ns1__GetUserFunctionResponse
{ public:
/// Element GetUserFunctionResult of type "http://tempuri.org/":ArrayOfSystemFunction.
    ns1__ArrayOfSystemFunction*          GetUserFunctionResult          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetReturnRecord

/// "http://tempuri.org/":GetReturnRecord is a complexType.
class _ns1__GetReturnRecord
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetReturnRecordResponse

/// "http://tempuri.org/":GetReturnRecordResponse is a complexType.
class _ns1__GetReturnRecordResponse
{ public:
/// Element GetReturnRecordResult of type "http://tempuri.org/":ArrayOfReturnedItem.
    ns1__ArrayOfReturnedItem*            GetReturnRecordResult          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetReturnRecordDeal

/// "http://tempuri.org/":GetReturnRecordDeal is a complexType.
class _ns1__GetReturnRecordDeal
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetReturnRecordDealResponse

/// "http://tempuri.org/":GetReturnRecordDealResponse is a complexType.
class _ns1__GetReturnRecordDealResponse
{ public:
/// Element GetReturnRecordDealResult of type "http://tempuri.org/":ArrayOfReturnedItem.
    ns1__ArrayOfReturnedItem*            GetReturnRecordDealResult      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetAcountPaymentRecord

/// "http://tempuri.org/":GetAcountPaymentRecord is a complexType.
class _ns1__GetAcountPaymentRecord
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetAcountPaymentRecordResponse

/// "http://tempuri.org/":GetAcountPaymentRecordResponse is a complexType.
class _ns1__GetAcountPaymentRecordResponse
{ public:
/// Element GetAcountPaymentRecordResult of type "http://tempuri.org/":ArrayOfAcountPaymentItem.
    ns1__ArrayOfAcountPaymentItem*       GetAcountPaymentRecordResult   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetDicContentByCondition

/// "http://tempuri.org/":GetDicContentByCondition is a complexType.
class _ns1__GetDicContentByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetDicContentByConditionResponse

/// "http://tempuri.org/":GetDicContentByConditionResponse is a complexType.
class _ns1__GetDicContentByConditionResponse
{ public:
/// Element GetDicContentByConditionResult of type "http://tempuri.org/":ArrayOfDIC_Content.
    ns1__ArrayOfDIC_USCOREContent*       GetDicContentByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetAllCategory

/// "http://tempuri.org/":GetAllCategory is a complexType.
class _ns1__GetAllCategory
{ public:
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetAllCategoryResponse

/// "http://tempuri.org/":GetAllCategoryResponse is a complexType.
class _ns1__GetAllCategoryResponse
{ public:
/// Element GetAllCategoryResult of type "http://tempuri.org/":ArrayOfDIC_Category.
    ns1__ArrayOfDIC_USCORECategory*      GetAllCategoryResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":InsertDicContent

/// "http://tempuri.org/":InsertDicContent is a complexType.
class _ns1__InsertDicContent
{ public:
/// Element category of type xs:string.
    char*                                category                       0;	///< Optional element.
/// Element name of type xs:string.
    char*                                name                           0;	///< Optional element.
/// Element code of type xs:string.
    char*                                code                           0;	///< Optional element.
/// Element enabled of type xs:boolean.
    bool                                 enabled                        1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element val1 of type xs:string.
    char*                                val1                           0;	///< Optional element.
/// Element val2 of type xs:string.
    char*                                val2                           0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":InsertDicContentResponse

/// "http://tempuri.org/":InsertDicContentResponse is a complexType.
class _ns1__InsertDicContentResponse
{ public:
/// Element InsertDicContentResult of type xs:string.
    char*                                InsertDicContentResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateDicContent

/// "http://tempuri.org/":UpdateDicContent is a complexType.
class _ns1__UpdateDicContent
{ public:
/// Element category of type xs:string.
    char*                                category                       0;	///< Optional element.
/// Element name of type xs:string.
    char*                                name                           0;	///< Optional element.
/// Element code of type xs:string.
    char*                                code                           0;	///< Optional element.
/// Element enabled of type xs:boolean.
    bool                                 enabled                        1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element val1 of type xs:string.
    char*                                val1                           0;	///< Optional element.
/// Element val2 of type xs:string.
    char*                                val2                           0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateDicContentResponse

/// "http://tempuri.org/":UpdateDicContentResponse is a complexType.
class _ns1__UpdateDicContentResponse
{ public:
/// Element UpdateDicContentResult of type xs:string.
    char*                                UpdateDicContentResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":DeleteDicContent

/// "http://tempuri.org/":DeleteDicContent is a complexType.
class _ns1__DeleteDicContent
{ public:
/// Element category of type xs:string.
    char*                                category                       0;	///< Optional element.
/// Element name of type xs:string.
    char*                                name                           0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":DeleteDicContentResponse

/// "http://tempuri.org/":DeleteDicContentResponse is a complexType.
class _ns1__DeleteDicContentResponse
{ public:
/// Element DeleteDicContentResult of type xs:string.
    char*                                DeleteDicContentResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateDicContentByCategory

/// "http://tempuri.org/":UpdateDicContentByCategory is a complexType.
class _ns1__UpdateDicContentByCategory
{ public:
/// Element category of type xs:string.
    char*                                category                       0;	///< Optional element.
/// Element contentList of type "http://tempuri.org/":ArrayOfDIC_Content.
    ns1__ArrayOfDIC_USCOREContent*       contentList                    0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateDicContentByCategoryResponse

/// "http://tempuri.org/":UpdateDicContentByCategoryResponse is a complexType.
class _ns1__UpdateDicContentByCategoryResponse
{ public:
/// Element UpdateDicContentByCategoryResult of type xs:string.
    char*                                UpdateDicContentByCategoryResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetFunctionList

/// "http://tempuri.org/":GetFunctionList is a complexType.
class _ns1__GetFunctionList
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetFunctionListResponse

/// "http://tempuri.org/":GetFunctionListResponse is a complexType.
class _ns1__GetFunctionListResponse
{ public:
/// Element GetFunctionListResult of type "http://tempuri.org/":ArrayOfSystemFunction.
    ns1__ArrayOfSystemFunction*          GetFunctionListResult          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateUserFunctionList

/// "http://tempuri.org/":UpdateUserFunctionList is a complexType.
class _ns1__UpdateUserFunctionList
{ public:
/// Element userIdOrWokerId of type xs:string.
    char*                                userIdOrWokerId                0;	///< Optional element.
/// Element operateId of type xs:string.
    char*                                operateId                      0;	///< Optional element.
/// Element functionList of type "http://tempuri.org/":ArrayOfSystemFunction.
    ns1__ArrayOfSystemFunction*          functionList                   0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateUserFunctionListResponse

/// "http://tempuri.org/":UpdateUserFunctionListResponse is a complexType.
class _ns1__UpdateUserFunctionListResponse
{ public:
/// Element UpdateUserFunctionListResult of type xs:string.
    char*                                UpdateUserFunctionListResult   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateFunctionRight

/// "http://tempuri.org/":UpdateFunctionRight is a complexType.
class _ns1__UpdateFunctionRight
{ public:
/// Element functionId of type xs:string.
    char*                                functionId                     0;	///< Optional element.
/// Element right of type xs:int.
    int                                  right                          1;	///< Required element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateFunctionRightResponse

/// "http://tempuri.org/":UpdateFunctionRightResponse is a complexType.
class _ns1__UpdateFunctionRightResponse
{ public:
/// Element UpdateFunctionRightResult of type xs:string.
    char*                                UpdateFunctionRightResult      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetTableStatistics

/// "http://tempuri.org/":GetTableStatistics is a complexType.
class _ns1__GetTableStatistics
{ public:
/// Element tableName of type xs:string.
    char*                                tableName                      0;	///< Optional element.
/// Element sumItem1 of type xs:string.
    char*                                sumItem1                       0;	///< Optional element.
/// Element sumItem2 of type xs:string.
    char*                                sumItem2                       0;	///< Optional element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetTableStatisticsResponse

/// "http://tempuri.org/":GetTableStatisticsResponse is a complexType.
class _ns1__GetTableStatisticsResponse
{ public:
/// Element GetTableStatisticsResult of type "http://tempuri.org/":TableStatistics.
    ns1__TableStatistics*                GetTableStatisticsResult       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetNoticeList

/// "http://tempuri.org/":GetNoticeList is a complexType.
class _ns1__GetNoticeList
{ public:
/// Element pageSize of type xs:int.
    int                                  pageSize                       1;	///< Required element.
/// Element pageIndex of type xs:int.
    int                                  pageIndex                      1;	///< Required element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetNoticeListResponse

/// "http://tempuri.org/":GetNoticeListResponse is a complexType.
class _ns1__GetNoticeListResponse
{ public:
/// Element GetNoticeListResult of type "http://tempuri.org/":Notice.
    ns1__Notice*                         GetNoticeListResult            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetNoticeListByCondition

/// "http://tempuri.org/":GetNoticeListByCondition is a complexType.
class _ns1__GetNoticeListByCondition
{ public:
/// Element pageSize of type xs:int.
    int                                  pageSize                       1;	///< Required element.
/// Element pageIndex of type xs:int.
    int                                  pageIndex                      1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetNoticeListByConditionResponse

/// "http://tempuri.org/":GetNoticeListByConditionResponse is a complexType.
class _ns1__GetNoticeListByConditionResponse
{ public:
/// Element GetNoticeListByConditionResult of type "http://tempuri.org/":Notice.
    ns1__Notice*                         GetNoticeListByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetNoticeItem

/// "http://tempuri.org/":GetNoticeItem is a complexType.
class _ns1__GetNoticeItem
{ public:
/// Element noticeId of type xs:string.
    char*                                noticeId                       0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetNoticeItemResponse

/// "http://tempuri.org/":GetNoticeItemResponse is a complexType.
class _ns1__GetNoticeItemResponse
{ public:
/// Element GetNoticeItemResult of type "http://tempuri.org/":NoticeItem.
    ns1__NoticeItem*                     GetNoticeItemResult            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetAlertNoticeList

/// "http://tempuri.org/":GetAlertNoticeList is a complexType.
class _ns1__GetAlertNoticeList
{ public:
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetAlertNoticeListResponse

/// "http://tempuri.org/":GetAlertNoticeListResponse is a complexType.
class _ns1__GetAlertNoticeListResponse
{ public:
/// Element GetAlertNoticeListResult of type "http://tempuri.org/":Notice.
    ns1__Notice*                         GetAlertNoticeListResult       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddNoticeItem

/// "http://tempuri.org/":AddNoticeItem is a complexType.
class _ns1__AddNoticeItem
{ public:
/// Element title of type xs:string.
    char*                                title                          0;	///< Optional element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element type of type xs:string.
    char*                                type                           0;	///< Optional element.
/// Element publisherId of type xs:string.
    char*                                publisherId                    0;	///< Optional element.
/// Element isShow of type xs:boolean.
    bool                                 isShow                         1;	///< Required element.
/// Element weight of type xs:int.
    int                                  weight                         1;	///< Required element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddNoticeItemResponse

/// "http://tempuri.org/":AddNoticeItemResponse is a complexType.
class _ns1__AddNoticeItemResponse
{ public:
/// Element AddNoticeItemResult of type xs:string.
    char*                                AddNoticeItemResult            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddNoticeItemToSomeone

/// "http://tempuri.org/":AddNoticeItemToSomeone is a complexType.
class _ns1__AddNoticeItemToSomeone
{ public:
/// Element title of type xs:string.
    char*                                title                          0;	///< Optional element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element type of type xs:string.
    char*                                type                           0;	///< Optional element.
/// Element publisherId of type xs:string.
    char*                                publisherId                    0;	///< Optional element.
/// Element isShow of type xs:boolean.
    bool                                 isShow                         1;	///< Required element.
/// Element weight of type xs:int.
    int                                  weight                         1;	///< Required element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddNoticeItemToSomeoneResponse

/// "http://tempuri.org/":AddNoticeItemToSomeoneResponse is a complexType.
class _ns1__AddNoticeItemToSomeoneResponse
{ public:
/// Element AddNoticeItemToSomeoneResult of type xs:string.
    char*                                AddNoticeItemToSomeoneResult   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateNoticeItem

/// "http://tempuri.org/":UpdateNoticeItem is a complexType.
class _ns1__UpdateNoticeItem
{ public:
/// Element Id of type xs:string.
    char*                                Id                             0;	///< Optional element.
/// Element title of type xs:string.
    char*                                title                          0;	///< Optional element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element type of type xs:string.
    char*                                type                           0;	///< Optional element.
/// Element isShow of type xs:boolean.
    bool                                 isShow                         1;	///< Required element.
/// Element weight of type xs:int.
    int                                  weight                         1;	///< Required element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateNoticeItemResponse

/// "http://tempuri.org/":UpdateNoticeItemResponse is a complexType.
class _ns1__UpdateNoticeItemResponse
{ public:
/// Element UpdateNoticeItemResult of type xs:string.
    char*                                UpdateNoticeItemResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":DeleteNoticeItem

/// "http://tempuri.org/":DeleteNoticeItem is a complexType.
class _ns1__DeleteNoticeItem
{ public:
/// Element Id of type xs:string.
    char*                                Id                             0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":DeleteNoticeItemResponse

/// "http://tempuri.org/":DeleteNoticeItemResponse is a complexType.
class _ns1__DeleteNoticeItemResponse
{ public:
/// Element DeleteNoticeItemResult of type xs:string.
    char*                                DeleteNoticeItemResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":InserNoticeToSomeOne

/// "http://tempuri.org/":InserNoticeToSomeOne is a complexType.
class _ns1__InserNoticeToSomeOne
{ public:
/// Element noticeId of type xs:string.
    char*                                noticeId                       0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":InserNoticeToSomeOneResponse

/// "http://tempuri.org/":InserNoticeToSomeOneResponse is a complexType.
class _ns1__InserNoticeToSomeOneResponse
{ public:
/// Element InserNoticeToSomeOneResult of type xs:boolean.
    bool                                 InserNoticeToSomeOneResult     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetReturnProportionRecord

/// "http://tempuri.org/":GetReturnProportionRecord is a complexType.
class _ns1__GetReturnProportionRecord
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetReturnProportionRecordResponse

/// "http://tempuri.org/":GetReturnProportionRecordResponse is a complexType.
class _ns1__GetReturnProportionRecordResponse
{ public:
/// Element GetReturnProportionRecordResult of type "http://tempuri.org/":ArrayOfReturnProportion.
    ns1__ArrayOfReturnProportion*        GetReturnProportionRecordResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddtReturnProportion

/// "http://tempuri.org/":AddtReturnProportion is a complexType.
class _ns1__AddtReturnProportion
{ public:
/// Element returnClass of type xs:string.
    char*                                returnClass                    0;	///< Optional element.
/// Element returnName of type xs:string.
    char*                                returnName                     0;	///< Optional element.
/// Element area of type xs:string.
    char*                                area                           0;	///< Optional element.
/// Element level of type xs:string.
    char*                                level                          0;	///< Optional element.
/// Element returnProportion of type xs:double.
    double                               returnProportion               1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddtReturnProportionResponse

/// "http://tempuri.org/":AddtReturnProportionResponse is a complexType.
class _ns1__AddtReturnProportionResponse
{ public:
/// Element AddtReturnProportionResult of type xs:string.
    char*                                AddtReturnProportionResult     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdatetReturnProportion

/// "http://tempuri.org/":UpdatetReturnProportion is a complexType.
class _ns1__UpdatetReturnProportion
{ public:
/// Element Id of type xs:string.
    char*                                Id                             0;	///< Optional element.
/// Element returnClass of type xs:string.
    char*                                returnClass                    0;	///< Optional element.
/// Element returnName of type xs:string.
    char*                                returnName                     0;	///< Optional element.
/// Element area of type xs:string.
    char*                                area                           0;	///< Optional element.
/// Element level of type xs:string.
    char*                                level                          0;	///< Optional element.
/// Element returnProportion of type xs:double.
    double                               returnProportion               1;	///< Required element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdatetReturnProportionResponse

/// "http://tempuri.org/":UpdatetReturnProportionResponse is a complexType.
class _ns1__UpdatetReturnProportionResponse
{ public:
/// Element UpdatetReturnProportionResult of type xs:string.
    char*                                UpdatetReturnProportionResult  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":DeletetReturnProportion

/// "http://tempuri.org/":DeletetReturnProportion is a complexType.
class _ns1__DeletetReturnProportion
{ public:
/// Element Id of type xs:string.
    char*                                Id                             0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":DeletetReturnProportionResponse

/// "http://tempuri.org/":DeletetReturnProportionResponse is a complexType.
class _ns1__DeletetReturnProportionResponse
{ public:
/// Element DeletetReturnProportionResult of type xs:string.
    char*                                DeletetReturnProportionResult  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPhoneNumberBelongByCondition

/// "http://tempuri.org/":GetPhoneNumberBelongByCondition is a complexType.
class _ns1__GetPhoneNumberBelongByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPhoneNumberBelongByConditionResponse

/// "http://tempuri.org/":GetPhoneNumberBelongByConditionResponse is a complexType.
class _ns1__GetPhoneNumberBelongByConditionResponse
{ public:
/// Element GetPhoneNumberBelongByConditionResult of type "http://tempuri.org/":ArrayOfPhoneNumberBelong.
    ns1__ArrayOfPhoneNumberBelong*       GetPhoneNumberBelongByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdatePhoneNumberBelong

/// "http://tempuri.org/":UpdatePhoneNumberBelong is a complexType.
class _ns1__UpdatePhoneNumberBelong
{ public:
/// Element belong of type "http://tempuri.org/":PhoneNumberBelong.
    ns1__PhoneNumberBelong*              belong                         0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdatePhoneNumberBelongResponse

/// "http://tempuri.org/":UpdatePhoneNumberBelongResponse is a complexType.
class _ns1__UpdatePhoneNumberBelongResponse
{ public:
/// Element UpdatePhoneNumberBelongResult of type xs:string.
    char*                                UpdatePhoneNumberBelongResult  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddPhoneNumberBelong

/// "http://tempuri.org/":AddPhoneNumberBelong is a complexType.
class _ns1__AddPhoneNumberBelong
{ public:
/// Element belong of type "http://tempuri.org/":PhoneNumberBelong.
    ns1__PhoneNumberBelong*              belong                         0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddPhoneNumberBelongResponse

/// "http://tempuri.org/":AddPhoneNumberBelongResponse is a complexType.
class _ns1__AddPhoneNumberBelongResponse
{ public:
/// Element AddPhoneNumberBelongResult of type xs:string.
    char*                                AddPhoneNumberBelongResult     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":DeletePhoneNumberBelong

/// "http://tempuri.org/":DeletePhoneNumberBelong is a complexType.
class _ns1__DeletePhoneNumberBelong
{ public:
/// Element belongId of type xs:string.
    char*                                belongId                       0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":DeletePhoneNumberBelongResponse

/// "http://tempuri.org/":DeletePhoneNumberBelongResponse is a complexType.
class _ns1__DeletePhoneNumberBelongResponse
{ public:
/// Element DeletePhoneNumberBelongResult of type xs:string.
    char*                                DeletePhoneNumberBelongResult  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetCompanyInfo

/// "http://tempuri.org/":GetCompanyInfo is a complexType.
class _ns1__GetCompanyInfo
{ public:
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetCompanyInfoResponse

/// "http://tempuri.org/":GetCompanyInfoResponse is a complexType.
class _ns1__GetCompanyInfoResponse
{ public:
/// Element GetCompanyInfoResult of type "http://tempuri.org/":CompanyInfo.
    ns1__CompanyInfo*                    GetCompanyInfoResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateCompanyInfo

/// "http://tempuri.org/":UpdateCompanyInfo is a complexType.
class _ns1__UpdateCompanyInfo
{ public:
/// Element info of type "http://tempuri.org/":CompanyInfo.
    ns1__CompanyInfo*                    info                           0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateCompanyInfoResponse

/// "http://tempuri.org/":UpdateCompanyInfoResponse is a complexType.
class _ns1__UpdateCompanyInfoResponse
{ public:
/// Element UpdateCompanyInfoResult of type xs:string.
    char*                                UpdateCompanyInfoResult        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetCompanyAccount

/// "http://tempuri.org/":GetCompanyAccount is a complexType.
class _ns1__GetCompanyAccount
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetCompanyAccountResponse

/// "http://tempuri.org/":GetCompanyAccountResponse is a complexType.
class _ns1__GetCompanyAccountResponse
{ public:
/// Element GetCompanyAccountResult of type "http://tempuri.org/":ArrayOfCompanyAccount.
    ns1__ArrayOfCompanyAccount*          GetCompanyAccountResult        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddCompanyAccount

/// "http://tempuri.org/":AddCompanyAccount is a complexType.
class _ns1__AddCompanyAccount
{ public:
/// Element account of type "http://tempuri.org/":CompanyAccount.
    ns1__CompanyAccount*                 account                        0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":AddCompanyAccountResponse

/// "http://tempuri.org/":AddCompanyAccountResponse is a complexType.
class _ns1__AddCompanyAccountResponse
{ public:
/// Element AddCompanyAccountResult of type xs:string.
    char*                                AddCompanyAccountResult        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateCompanyAccount

/// "http://tempuri.org/":UpdateCompanyAccount is a complexType.
class _ns1__UpdateCompanyAccount
{ public:
/// Element account of type "http://tempuri.org/":CompanyAccount.
    ns1__CompanyAccount*                 account                        0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UpdateCompanyAccountResponse

/// "http://tempuri.org/":UpdateCompanyAccountResponse is a complexType.
class _ns1__UpdateCompanyAccountResponse
{ public:
/// Element UpdateCompanyAccountResult of type xs:string.
    char*                                UpdateCompanyAccountResult     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":DeleteCompanyAccount

/// "http://tempuri.org/":DeleteCompanyAccount is a complexType.
class _ns1__DeleteCompanyAccount
{ public:
/// Element accountId of type xs:string.
    char*                                accountId                      0;	///< Optional element.
/// Element operatorId of type xs:string.
    char*                                operatorId                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":DeleteCompanyAccountResponse

/// "http://tempuri.org/":DeleteCompanyAccountResponse is a complexType.
class _ns1__DeleteCompanyAccountResponse
{ public:
/// Element DeleteCompanyAccountResult of type xs:string.
    char*                                DeleteCompanyAccountResult     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetClientVersion

/// "http://tempuri.org/":GetClientVersion is a complexType.
class _ns1__GetClientVersion
{ public:
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetClientVersionResponse

/// "http://tempuri.org/":GetClientVersionResponse is a complexType.
class _ns1__GetClientVersionResponse
{ public:
/// Element GetClientVersionResult of type xs:string.
    char*                                GetClientVersionResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":queryPhoneNOInfo

/// "http://tempuri.org/":queryPhoneNOInfo is a complexType.
class _ns1__queryPhoneNOInfo
{ public:
/// Element phoneNO of type xs:string.
    char*                                phoneNO                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":queryPhoneNOInfoResponse

/// "http://tempuri.org/":queryPhoneNOInfoResponse is a complexType.
class _ns1__queryPhoneNOInfoResponse
{ public:
/// Element queryPhoneNOInfoResult of type "http://tempuri.org/":Result.
    ns1__Result*                         queryPhoneNOInfoResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":BuyMiniCard

/// "http://tempuri.org/":BuyMiniCard is a complexType.
class _ns1__BuyMiniCard
{ public:
/// Element data of type xs:string.
    char*                                data                           0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element workerId of type xs:string.
    char*                                workerId                       0;	///< Optional element.
/// Element SP of type xs:string.
    char*                                SP                             0;	///< Optional element.
/// Element count of type xs:string.
    char*                                count                          0;	///< Optional element.
/// Element money of type xs:string.
    char*                                money                          0;	///< Optional element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":BuyMiniCardResponse

/// "http://tempuri.org/":BuyMiniCardResponse is a complexType.
class _ns1__BuyMiniCardResponse
{ public:
/// Element BuyMiniCardResult of type xs:string.
    char*                                BuyMiniCardResult              0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPhoneNoByCondition

/// "http://tempuri.org/":GetPhoneNoByCondition is a complexType.
class _ns1__GetPhoneNoByCondition
{ public:
/// Element pageSize of type xs:int.
    int                                  pageSize                       1;	///< Required element.
/// Element pageIndex of type xs:int.
    int                                  pageIndex                      1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPhoneNoByConditionResponse

/// "http://tempuri.org/":GetPhoneNoByConditionResponse is a complexType.
class _ns1__GetPhoneNoByConditionResponse
{ public:
/// Element GetPhoneNoByConditionResult of type "http://tempuri.org/":PhoneNoList.
    ns1__PhoneNoList*                    GetPhoneNoByConditionResult    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetMyNoSection

/// "http://tempuri.org/":GetMyNoSection is a complexType.
class _ns1__GetMyNoSection
{ public:
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetMyNoSectionResponse

/// "http://tempuri.org/":GetMyNoSectionResponse is a complexType.
class _ns1__GetMyNoSectionResponse
{ public:
/// Element GetMyNoSectionResult of type "http://tempuri.org/":ArrayOfString.
    ns1__ArrayOfString*                  GetMyNoSectionResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":LockNo

/// "http://tempuri.org/":LockNo is a complexType.
class _ns1__LockNo
{ public:
/// Element No of type xs:string.
    char*                                No                             0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":LockNoResponse

/// "http://tempuri.org/":LockNoResponse is a complexType.
class _ns1__LockNoResponse
{ public:
/// Element LockNoResult of type xs:string.
    char*                                LockNoResult                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UnlockNo

/// "http://tempuri.org/":UnlockNo is a complexType.
class _ns1__UnlockNo
{ public:
/// Element No of type xs:string.
    char*                                No                             0;	///< Optional element.
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":UnlockNoResponse

/// "http://tempuri.org/":UnlockNoResponse is a complexType.
class _ns1__UnlockNoResponse
{ public:
/// Element UnlockNoResult of type xs:string.
    char*                                UnlockNoResult                 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":SubmitBusiness

/// "http://tempuri.org/":SubmitBusiness is a complexType.
class _ns1__SubmitBusiness
{ public:
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element userLevel of type xs:string.
    char*                                userLevel                      0;	///< Optional element.
/// Element businessName of type xs:string.
    char*                                businessName                   0;	///< Optional element.
/// Element businessSpec of type xs:string.
    char*                                businessSpec                   0;	///< Optional element.
/// Element sp of type xs:string.
    char*                                sp                             0;	///< Optional element.
/// Element No of type xs:string.
    char*                                No                             0;	///< Optional element.
/// Element passwd of type xs:string.
    char*                                passwd                         0;	///< Optional element.
/// Element content of type xs:string.
    char*                                content                        0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":SubmitBusinessResponse

/// "http://tempuri.org/":SubmitBusinessResponse is a complexType.
class _ns1__SubmitBusinessResponse
{ public:
/// Element SubmitBusinessResult of type xs:string.
    char*                                SubmitBusinessResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":SellNo

/// "http://tempuri.org/":SellNo is a complexType.
class _ns1__SellNo
{ public:
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element No of type xs:string.
    char*                                No                             0;	///< Optional element.
/// Element miniCard of type xs:string.
    char*                                miniCard                       0;	///< Optional element.
/// Element serviceName of type xs:string.
    char*                                serviceName                    0;	///< Optional element.
/// Element value of type xs:string.
    char*                                value                          0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// Element business1 of type xs:string.
    char*                                business1                      0;	///< Optional element.
/// Element business2 of type xs:string.
    char*                                business2                      0;	///< Optional element.
/// Element business3 of type xs:string.
    char*                                business3                      0;	///< Optional element.
/// Element clientType of type xs:string.
    char*                                clientType                     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":SellNoResponse

/// "http://tempuri.org/":SellNoResponse is a complexType.
class _ns1__SellNoResponse
{ public:
/// Element SellNoResult of type xs:string.
    char*                                SellNoResult                   0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":SellOhterCard

/// "http://tempuri.org/":SellOhterCard is a complexType.
class _ns1__SellOhterCard
{ public:
/// Element userId of type xs:string.
    char*                                userId                         0;	///< Optional element.
/// Element cardType of type xs:string.
    char*                                cardType                       0;	///< Optional element.
/// Element cardName of type xs:string.
    char*                                cardName                       0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":SellOhterCardResponse

/// "http://tempuri.org/":SellOhterCardResponse is a complexType.
class _ns1__SellOhterCardResponse
{ public:
/// Element SellOhterCardResult of type xs:string.
    char*                                SellOhterCardResult            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetMiniCardRecord

/// "http://tempuri.org/":GetMiniCardRecord is a complexType.
class _ns1__GetMiniCardRecord
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetMiniCardRecordResponse

/// "http://tempuri.org/":GetMiniCardRecordResponse is a complexType.
class _ns1__GetMiniCardRecordResponse
{ public:
/// Element GetMiniCardRecordResult of type "http://tempuri.org/":ArrayOfMiniCardItem.
    ns1__ArrayOfMiniCardItem*            GetMiniCardRecordResult        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayMiniCardByCondition

/// "http://tempuri.org/":GetPayMiniCardByCondition is a complexType.
class _ns1__GetPayMiniCardByCondition
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayMiniCardByConditionResponse

/// "http://tempuri.org/":GetPayMiniCardByConditionResponse is a complexType.
class _ns1__GetPayMiniCardByConditionResponse
{ public:
/// Element GetPayMiniCardByConditionResult of type "http://tempuri.org/":ArrayOfPayMiniCardItem.
    ns1__ArrayOfPayMiniCardItem*         GetPayMiniCardByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayMiniCardHistoryByCondition

/// "http://tempuri.org/":GetPayMiniCardHistoryByCondition is a complexType.
class _ns1__GetPayMiniCardHistoryByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPayMiniCardHistoryByConditionResponse

/// "http://tempuri.org/":GetPayMiniCardHistoryByConditionResponse is a complexType.
class _ns1__GetPayMiniCardHistoryByConditionResponse
{ public:
/// Element GetPayMiniCardHistoryByConditionResult of type "http://tempuri.org/":ArrayOfPayMiniCardItem.
    ns1__ArrayOfPayMiniCardItem*         GetPayMiniCardHistoryByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPhoneNoItemByCondition

/// "http://tempuri.org/":GetPhoneNoItemByCondition is a complexType.
class _ns1__GetPhoneNoItemByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPhoneNoItemByConditionResponse

/// "http://tempuri.org/":GetPhoneNoItemByConditionResponse is a complexType.
class _ns1__GetPhoneNoItemByConditionResponse
{ public:
/// Element GetPhoneNoItemByConditionResult of type "http://tempuri.org/":ArrayOfPhoneNoItem.
    ns1__ArrayOfPhoneNoItem*             GetPhoneNoItemByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPhoneNoItemAndHistoryByCondition

/// "http://tempuri.org/":GetPhoneNoItemAndHistoryByCondition is a complexType.
class _ns1__GetPhoneNoItemAndHistoryByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetPhoneNoItemAndHistoryByConditionResponse

/// "http://tempuri.org/":GetPhoneNoItemAndHistoryByConditionResponse is a complexType.
class _ns1__GetPhoneNoItemAndHistoryByConditionResponse
{ public:
/// Element GetPhoneNoItemAndHistoryByConditionResult of type "http://tempuri.org/":ArrayOfPhoneNoItem.
    ns1__ArrayOfPhoneNoItem*             GetPhoneNoItemAndHistoryByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetCardService

/// "http://tempuri.org/":GetCardService is a complexType.
class _ns1__GetCardService
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetCardServiceResponse

/// "http://tempuri.org/":GetCardServiceResponse is a complexType.
class _ns1__GetCardServiceResponse
{ public:
/// Element GetCardServiceResult of type "http://tempuri.org/":ArrayOfCardService.
    ns1__ArrayOfCardService*             GetCardServiceResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetSellCardRecordByCondition

/// "http://tempuri.org/":GetSellCardRecordByCondition is a complexType.
class _ns1__GetSellCardRecordByCondition
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetSellCardRecordByConditionResponse

/// "http://tempuri.org/":GetSellCardRecordByConditionResponse is a complexType.
class _ns1__GetSellCardRecordByConditionResponse
{ public:
/// Element GetSellCardRecordByConditionResult of type "http://tempuri.org/":ArrayOfSellCardItem.
    ns1__ArrayOfSellCardItem*            GetSellCardRecordByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetSellCardRecordHistoryByCondition

/// "http://tempuri.org/":GetSellCardRecordHistoryByCondition is a complexType.
class _ns1__GetSellCardRecordHistoryByCondition
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetSellCardRecordHistoryByConditionResponse

/// "http://tempuri.org/":GetSellCardRecordHistoryByConditionResponse is a complexType.
class _ns1__GetSellCardRecordHistoryByConditionResponse
{ public:
/// Element GetSellCardRecordHistoryByConditionResult of type "http://tempuri.org/":ArrayOfSellCardItem.
    ns1__ArrayOfSellCardItem*            GetSellCardRecordHistoryByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetBusinessRecordByCondition

/// "http://tempuri.org/":GetBusinessRecordByCondition is a complexType.
class _ns1__GetBusinessRecordByCondition
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetBusinessRecordByConditionResponse

/// "http://tempuri.org/":GetBusinessRecordByConditionResponse is a complexType.
class _ns1__GetBusinessRecordByConditionResponse
{ public:
/// Element GetBusinessRecordByConditionResult of type "http://tempuri.org/":ArrayOfBusinessItem.
    ns1__ArrayOfBusinessItem*            GetBusinessRecordByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GettBusinessRecordHistoryByCondition

/// "http://tempuri.org/":GettBusinessRecordHistoryByCondition is a complexType.
class _ns1__GettBusinessRecordHistoryByCondition
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GettBusinessRecordHistoryByConditionResponse

/// "http://tempuri.org/":GettBusinessRecordHistoryByConditionResponse is a complexType.
class _ns1__GettBusinessRecordHistoryByConditionResponse
{ public:
/// Element GettBusinessRecordHistoryByConditionResult of type "http://tempuri.org/":ArrayOfBusinessItem.
    ns1__ArrayOfBusinessItem*            GettBusinessRecordHistoryByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetSellOtherCardRecordByCondition

/// "http://tempuri.org/":GetSellOtherCardRecordByCondition is a complexType.
class _ns1__GetSellOtherCardRecordByCondition
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetSellOtherCardRecordByConditionResponse

/// "http://tempuri.org/":GetSellOtherCardRecordByConditionResponse is a complexType.
class _ns1__GetSellOtherCardRecordByConditionResponse
{ public:
/// Element GetSellOtherCardRecordByConditionResult of type "http://tempuri.org/":ArrayOfSellOtherCardItem.
    ns1__ArrayOfSellOtherCardItem*       GetSellOtherCardRecordByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GettSellOtherCardRecordHistoryByCondition

/// "http://tempuri.org/":GettSellOtherCardRecordHistoryByCondition is a complexType.
class _ns1__GettSellOtherCardRecordHistoryByCondition
{ public:
/// Element top of type xs:int.
    int                                  top                            1;	///< Required element.
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GettSellOtherCardRecordHistoryByConditionResponse

/// "http://tempuri.org/":GettSellOtherCardRecordHistoryByConditionResponse is a complexType.
class _ns1__GettSellOtherCardRecordHistoryByConditionResponse
{ public:
/// Element GettSellOtherCardRecordHistoryByConditionResult of type "http://tempuri.org/":ArrayOfSellOtherCardItem.
    ns1__ArrayOfSellOtherCardItem*       GettSellOtherCardRecordHistoryByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetOtherCardList

/// "http://tempuri.org/":GetOtherCardList is a complexType.
class _ns1__GetOtherCardList
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetOtherCardListResponse

/// "http://tempuri.org/":GetOtherCardListResponse is a complexType.
class _ns1__GetOtherCardListResponse
{ public:
/// Element GetOtherCardListResult of type "http://tempuri.org/":ArrayOfOtherCardItem.
    ns1__ArrayOfOtherCardItem*           GetOtherCardListResult         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetStockCardItemByCondition

/// "http://tempuri.org/":GetStockCardItemByCondition is a complexType.
class _ns1__GetStockCardItemByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetStockCardItemByConditionResponse

/// "http://tempuri.org/":GetStockCardItemByConditionResponse is a complexType.
class _ns1__GetStockCardItemByConditionResponse
{ public:
/// Element GetStockCardItemByConditionResult of type "http://tempuri.org/":ArrayOfStockCardItem.
    ns1__ArrayOfStockCardItem*           GetStockCardItemByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetStockCardItemAndHistoryByCondition

/// "http://tempuri.org/":GetStockCardItemAndHistoryByCondition is a complexType.
class _ns1__GetStockCardItemAndHistoryByCondition
{ public:
/// Element condition of type xs:string.
    char*                                condition                      0;	///< Optional element.
/// Element sessionId of type xs:string.
    char*                                sessionId                      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":GetStockCardItemAndHistoryByConditionResponse

/// "http://tempuri.org/":GetStockCardItemAndHistoryByConditionResponse is a complexType.
class _ns1__GetStockCardItemAndHistoryByConditionResponse
{ public:
/// Element GetStockCardItemAndHistoryByConditionResult of type "http://tempuri.org/":ArrayOfStockCardItem.
    ns1__ArrayOfStockCardItem*           GetStockCardItemAndHistoryByConditionResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://microsoft.com/wsdl/types/                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://tempuri.org/":Result of type "http://tempuri.org/":Result.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://microsoft.com/wsdl/types/                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://microsoft.com/wsdl/types/                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns10 service name:	HttpServiceSoap12 
//gsoap ns10 service type:	HttpServiceSoap 
//gsoap ns10 service port:	http://220.165.8.124:2557/QueryService.asmx 
//gsoap ns10 service namespace:	http://tempuri.org/HttpServiceSoap12 
//gsoap ns10 service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns11 service name:	MobileWebServiceSoap 
//gsoap ns11 service type:	MobileWebServiceSoap 
//gsoap ns11 service port:	http://220.165.8.124:2556/HttpService.asmx 
//gsoap ns11 service namespace:	http://tempuri.org/MobileWebServiceSoap 
//gsoap ns11 service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns12 service name:	MobileWebServiceSoap12 
//gsoap ns12 service type:	MobileWebServiceSoap 
//gsoap ns12 service port:	http://220.165.8.124:2556/HttpService.asmx 
//gsoap ns12 service namespace:	http://tempuri.org/MobileWebServiceSoap12 
//gsoap ns12 service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns13 service name:	BusinessFunctionWebServiceSoap 
//gsoap ns13 service type:	BusinessFunctionWebServiceSoap 
//gsoap ns13 service port:	http://220.165.8.124:2655/BusinessFunctionWebService.asmx 
//gsoap ns13 service namespace:	http://tempuri.org/BusinessFunctionWebServiceSoap 
//gsoap ns13 service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns14 service name:	BusinessFunctionWebServiceSoap12 
//gsoap ns14 service type:	BusinessFunctionWebServiceSoap 
//gsoap ns14 service port:	http://220.165.8.124:2655/BusinessFunctionWebService.asmx 
//gsoap ns14 service namespace:	http://tempuri.org/BusinessFunctionWebServiceSoap12 
//gsoap ns14 service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns3  service name:	PaymentFunctionWebServiceSoap 
//gsoap ns3  service type:	PaymentFunctionWebServiceSoap 
//gsoap ns3  service port:	http://220.165.8.124:2655/PaymentFunctionWebService.asmx 
//gsoap ns3  service namespace:	http://tempuri.org/PaymentFunctionWebServiceSoap 
//gsoap ns3  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns4  service name:	PaymentFunctionWebServiceSoap12 
//gsoap ns4  service type:	PaymentFunctionWebServiceSoap 
//gsoap ns4  service port:	http://220.165.8.124:2655/PaymentFunctionWebService.asmx 
//gsoap ns4  service namespace:	http://tempuri.org/PaymentFunctionWebServiceSoap12 
//gsoap ns4  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns5  service name:	UserFunctionWebServiceSoap 
//gsoap ns5  service type:	UserFunctionWebServiceSoap 
//gsoap ns5  service port:	http://220.165.8.124:2655/UserFunctionWebService.asmx 
//gsoap ns5  service namespace:	http://tempuri.org/UserFunctionWebServiceSoap 
//gsoap ns5  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns6  service name:	UserFunctionWebServiceSoap12 
//gsoap ns6  service type:	UserFunctionWebServiceSoap 
//gsoap ns6  service port:	http://220.165.8.124:2655/UserFunctionWebService.asmx 
//gsoap ns6  service namespace:	http://tempuri.org/UserFunctionWebServiceSoap12 
//gsoap ns6  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns7  service name:	UtilFunctionWebServiceSoap 
//gsoap ns7  service type:	UtilFunctionWebServiceSoap 
//gsoap ns7  service port:	http://220.165.8.124:2655/UtilFunctionWebService.asmx 
//gsoap ns7  service namespace:	http://tempuri.org/UtilFunctionWebServiceSoap 
//gsoap ns7  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns8  service name:	UtilFunctionWebServiceSoap12 
//gsoap ns8  service type:	UtilFunctionWebServiceSoap 
//gsoap ns8  service port:	http://220.165.8.124:2655/UtilFunctionWebService.asmx 
//gsoap ns8  service namespace:	http://tempuri.org/UtilFunctionWebServiceSoap12 
//gsoap ns8  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns9  service name:	HttpServiceSoap 
//gsoap ns9  service type:	HttpServiceSoap 
//gsoap ns9  service port:	http://220.165.8.124:2557/QueryService.asmx 
//gsoap ns9  service namespace:	http://tempuri.org/HttpServiceSoap 
//gsoap ns9  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref HttpServiceSoap12

  - @ref MobileWebServiceSoap

  - @ref MobileWebServiceSoap12

  - @ref BusinessFunctionWebServiceSoap

  - @ref BusinessFunctionWebServiceSoap12

  - @ref PaymentFunctionWebServiceSoap

  - @ref PaymentFunctionWebServiceSoap12

  - @ref UserFunctionWebServiceSoap

  - @ref UserFunctionWebServiceSoap12

  - @ref UtilFunctionWebServiceSoap

  - @ref UtilFunctionWebServiceSoap12

  - @ref HttpServiceSoap

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page HttpServiceSoap12 Binding "HttpServiceSoap12"

@section HttpServiceSoap12_operations Operations of Binding  "HttpServiceSoap12"

  - @ref __ns10__queryPhoneNOInfo

@section HttpServiceSoap12_ports Endpoints of Binding  "HttpServiceSoap12"

  - http://220.165.8.124:2557/QueryService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page MobileWebServiceSoap Binding "MobileWebServiceSoap"

@section MobileWebServiceSoap_operations Operations of Binding  "MobileWebServiceSoap"

  - @ref __ns11__queryPhoneNOInfo

@section MobileWebServiceSoap_ports Endpoints of Binding  "MobileWebServiceSoap"

  - http://220.165.8.124:2556/HttpService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page MobileWebServiceSoap12 Binding "MobileWebServiceSoap12"

@section MobileWebServiceSoap12_operations Operations of Binding  "MobileWebServiceSoap12"

  - @ref __ns12__queryPhoneNOInfo

@section MobileWebServiceSoap12_ports Endpoints of Binding  "MobileWebServiceSoap12"

  - http://220.165.8.124:2556/HttpService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page BusinessFunctionWebServiceSoap Binding "BusinessFunctionWebServiceSoap"

@section BusinessFunctionWebServiceSoap_operations Operations of Binding  "BusinessFunctionWebServiceSoap"

  - @ref __ns13__BuyMiniCard

  - @ref __ns13__GetPhoneNoByCondition

  - @ref __ns13__GetMyNoSection

  - @ref __ns13__LockNo

  - @ref __ns13__UnlockNo

  - @ref __ns13__SubmitBusiness

  - @ref __ns13__SellNo

  - @ref __ns13__SellOhterCard

  - @ref __ns13__GetMiniCardRecord

  - @ref __ns13__GetPayMiniCardByCondition

  - @ref __ns13__GetPayMiniCardHistoryByCondition

  - @ref __ns13__GetPhoneNoItemByCondition

  - @ref __ns13__GetPhoneNoItemAndHistoryByCondition

  - @ref __ns13__GetCardService

  - @ref __ns13__GetSellCardRecordByCondition

  - @ref __ns13__GetSellCardRecordHistoryByCondition

  - @ref __ns13__GetBusinessRecordByCondition

  - @ref __ns13__GettBusinessRecordHistoryByCondition

  - @ref __ns13__GetSellOtherCardRecordByCondition

  - @ref __ns13__GettSellOtherCardRecordHistoryByCondition

  - @ref __ns13__GetOtherCardList

  - @ref __ns13__GetStockCardItemByCondition

  - @ref __ns13__GetStockCardItemAndHistoryByCondition

@section BusinessFunctionWebServiceSoap_ports Endpoints of Binding  "BusinessFunctionWebServiceSoap"

  - http://220.165.8.124:2655/BusinessFunctionWebService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page BusinessFunctionWebServiceSoap12 Binding "BusinessFunctionWebServiceSoap12"

@section BusinessFunctionWebServiceSoap12_operations Operations of Binding  "BusinessFunctionWebServiceSoap12"

  - @ref __ns14__BuyMiniCard

  - @ref __ns14__GetPhoneNoByCondition

  - @ref __ns14__GetMyNoSection

  - @ref __ns14__LockNo

  - @ref __ns14__UnlockNo

  - @ref __ns14__SubmitBusiness

  - @ref __ns14__SellNo

  - @ref __ns14__SellOhterCard

  - @ref __ns14__GetMiniCardRecord

  - @ref __ns14__GetPayMiniCardByCondition

  - @ref __ns14__GetPayMiniCardHistoryByCondition

  - @ref __ns14__GetPhoneNoItemByCondition

  - @ref __ns14__GetPhoneNoItemAndHistoryByCondition

  - @ref __ns14__GetCardService

  - @ref __ns14__GetSellCardRecordByCondition

  - @ref __ns14__GetSellCardRecordHistoryByCondition

  - @ref __ns14__GetBusinessRecordByCondition

  - @ref __ns14__GettBusinessRecordHistoryByCondition

  - @ref __ns14__GetSellOtherCardRecordByCondition

  - @ref __ns14__GettSellOtherCardRecordHistoryByCondition

  - @ref __ns14__GetOtherCardList

  - @ref __ns14__GetStockCardItemByCondition

  - @ref __ns14__GetStockCardItemAndHistoryByCondition

@section BusinessFunctionWebServiceSoap12_ports Endpoints of Binding  "BusinessFunctionWebServiceSoap12"

  - http://220.165.8.124:2655/BusinessFunctionWebService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page PaymentFunctionWebServiceSoap Binding "PaymentFunctionWebServiceSoap"

@section PaymentFunctionWebServiceSoap_operations Operations of Binding  "PaymentFunctionWebServiceSoap"

  - @ref __ns3__GetLocation

  - @ref __ns3__PayMoney

  - @ref __ns3__PayMoneyWithList

  - @ref __ns3__RequstRollback

  - @ref __ns3__PayInternet

  - @ref __ns3__PayInternetWithList

  - @ref __ns3__RequstInternetRollback

  - @ref __ns3__PayGame

  - @ref __ns3__PayPublicTel

  - @ref __ns3__GetPaymentRecord

  - @ref __ns3__GetPaymentItem

  - @ref __ns3__GetTransactionByCondition

  - @ref __ns3__GetTransactionStaticsByCondition

  - @ref __ns3__GetPaymentOrPaymentHistoryByCondition

  - @ref __ns3__GetPayInternetByCondition

  - @ref __ns3__GetPayInternetHistoryByCondition

  - @ref __ns3__GetPayGameByCondition

  - @ref __ns3__GetPayGameHistoryByCondition

  - @ref __ns3__GetPayPublicTelByCondition

  - @ref __ns3__GetPayPublicTelHistoryByCondition

@section PaymentFunctionWebServiceSoap_ports Endpoints of Binding  "PaymentFunctionWebServiceSoap"

  - http://220.165.8.124:2655/PaymentFunctionWebService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page PaymentFunctionWebServiceSoap12 Binding "PaymentFunctionWebServiceSoap12"

@section PaymentFunctionWebServiceSoap12_operations Operations of Binding  "PaymentFunctionWebServiceSoap12"

  - @ref __ns4__GetLocation

  - @ref __ns4__PayMoney

  - @ref __ns4__PayMoneyWithList

  - @ref __ns4__RequstRollback

  - @ref __ns4__PayInternet

  - @ref __ns4__PayInternetWithList

  - @ref __ns4__RequstInternetRollback

  - @ref __ns4__PayGame

  - @ref __ns4__PayPublicTel

  - @ref __ns4__GetPaymentRecord

  - @ref __ns4__GetPaymentItem

  - @ref __ns4__GetTransactionByCondition

  - @ref __ns4__GetTransactionStaticsByCondition

  - @ref __ns4__GetPaymentOrPaymentHistoryByCondition

  - @ref __ns4__GetPayInternetByCondition

  - @ref __ns4__GetPayInternetHistoryByCondition

  - @ref __ns4__GetPayGameByCondition

  - @ref __ns4__GetPayGameHistoryByCondition

  - @ref __ns4__GetPayPublicTelByCondition

  - @ref __ns4__GetPayPublicTelHistoryByCondition

@section PaymentFunctionWebServiceSoap12_ports Endpoints of Binding  "PaymentFunctionWebServiceSoap12"

  - http://220.165.8.124:2655/PaymentFunctionWebService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page UserFunctionWebServiceSoap Binding "UserFunctionWebServiceSoap"

@section UserFunctionWebServiceSoap_operations Operations of Binding  "UserFunctionWebServiceSoap"

  - @ref __ns5__HelloWorld

  - @ref __ns5__loggout

  - @ref __ns5__TestLogin

  - @ref __ns5__GetUserInfo

  - @ref __ns5__RegisterUser

  - @ref __ns5__AlterPsw

  - @ref __ns5__AlterUserInfo

  - @ref __ns5__AddAcountPayment

  - @ref __ns5__GetReturnInfo

  - @ref __ns5__CharegeReturnedMoney

  - @ref __ns5__GetWorkNameList

  - @ref __ns5__GetUserFunction

  - @ref __ns5__GetReturnRecord

  - @ref __ns5__GetReturnRecordDeal

  - @ref __ns5__GetAcountPaymentRecord

@section UserFunctionWebServiceSoap_ports Endpoints of Binding  "UserFunctionWebServiceSoap"

  - http://220.165.8.124:2655/UserFunctionWebService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page UserFunctionWebServiceSoap12 Binding "UserFunctionWebServiceSoap12"

@section UserFunctionWebServiceSoap12_operations Operations of Binding  "UserFunctionWebServiceSoap12"

  - @ref __ns6__HelloWorld

  - @ref __ns6__loggout

  - @ref __ns6__TestLogin

  - @ref __ns6__GetUserInfo

  - @ref __ns6__RegisterUser

  - @ref __ns6__AlterPsw

  - @ref __ns6__AlterUserInfo

  - @ref __ns6__AddAcountPayment

  - @ref __ns6__GetReturnInfo

  - @ref __ns6__CharegeReturnedMoney

  - @ref __ns6__GetWorkNameList

  - @ref __ns6__GetUserFunction

  - @ref __ns6__GetReturnRecord

  - @ref __ns6__GetReturnRecordDeal

  - @ref __ns6__GetAcountPaymentRecord

@section UserFunctionWebServiceSoap12_ports Endpoints of Binding  "UserFunctionWebServiceSoap12"

  - http://220.165.8.124:2655/UserFunctionWebService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page UtilFunctionWebServiceSoap Binding "UtilFunctionWebServiceSoap"

@section UtilFunctionWebServiceSoap_operations Operations of Binding  "UtilFunctionWebServiceSoap"

  - @ref __ns7__GetDicContentByCondition

  - @ref __ns7__GetAllCategory

  - @ref __ns7__InsertDicContent

  - @ref __ns7__UpdateDicContent

  - @ref __ns7__DeleteDicContent

  - @ref __ns7__UpdateDicContentByCategory

  - @ref __ns7__GetFunctionList

  - @ref __ns7__UpdateUserFunctionList

  - @ref __ns7__UpdateFunctionRight

  - @ref __ns7__GetTableStatistics

  - @ref __ns7__GetNoticeList

  - @ref __ns7__GetNoticeListByCondition

  - @ref __ns7__GetNoticeItem

  - @ref __ns7__GetAlertNoticeList

  - @ref __ns7__AddNoticeItem

  - @ref __ns7__AddNoticeItemToSomeone

  - @ref __ns7__UpdateNoticeItem

  - @ref __ns7__DeleteNoticeItem

  - @ref __ns7__InserNoticeToSomeOne

  - @ref __ns7__GetReturnProportionRecord

  - @ref __ns7__AddtReturnProportion

  - @ref __ns7__UpdatetReturnProportion

  - @ref __ns7__DeletetReturnProportion

  - @ref __ns7__GetPhoneNumberBelongByCondition

  - @ref __ns7__UpdatePhoneNumberBelong

  - @ref __ns7__AddPhoneNumberBelong

  - @ref __ns7__DeletePhoneNumberBelong

  - @ref __ns7__GetCompanyInfo

  - @ref __ns7__UpdateCompanyInfo

  - @ref __ns7__GetCompanyAccount

  - @ref __ns7__AddCompanyAccount

  - @ref __ns7__UpdateCompanyAccount

  - @ref __ns7__DeleteCompanyAccount

  - @ref __ns7__GetClientVersion

@section UtilFunctionWebServiceSoap_ports Endpoints of Binding  "UtilFunctionWebServiceSoap"

  - http://220.165.8.124:2655/UtilFunctionWebService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page UtilFunctionWebServiceSoap12 Binding "UtilFunctionWebServiceSoap12"

@section UtilFunctionWebServiceSoap12_operations Operations of Binding  "UtilFunctionWebServiceSoap12"

  - @ref __ns8__GetDicContentByCondition

  - @ref __ns8__GetAllCategory

  - @ref __ns8__InsertDicContent

  - @ref __ns8__UpdateDicContent

  - @ref __ns8__DeleteDicContent

  - @ref __ns8__UpdateDicContentByCategory

  - @ref __ns8__GetFunctionList

  - @ref __ns8__UpdateUserFunctionList

  - @ref __ns8__UpdateFunctionRight

  - @ref __ns8__GetTableStatistics

  - @ref __ns8__GetNoticeList

  - @ref __ns8__GetNoticeListByCondition

  - @ref __ns8__GetNoticeItem

  - @ref __ns8__GetAlertNoticeList

  - @ref __ns8__AddNoticeItem

  - @ref __ns8__AddNoticeItemToSomeone

  - @ref __ns8__UpdateNoticeItem

  - @ref __ns8__DeleteNoticeItem

  - @ref __ns8__InserNoticeToSomeOne

  - @ref __ns8__GetReturnProportionRecord

  - @ref __ns8__AddtReturnProportion

  - @ref __ns8__UpdatetReturnProportion

  - @ref __ns8__DeletetReturnProportion

  - @ref __ns8__GetPhoneNumberBelongByCondition

  - @ref __ns8__UpdatePhoneNumberBelong

  - @ref __ns8__AddPhoneNumberBelong

  - @ref __ns8__DeletePhoneNumberBelong

  - @ref __ns8__GetCompanyInfo

  - @ref __ns8__UpdateCompanyInfo

  - @ref __ns8__GetCompanyAccount

  - @ref __ns8__AddCompanyAccount

  - @ref __ns8__UpdateCompanyAccount

  - @ref __ns8__DeleteCompanyAccount

  - @ref __ns8__GetClientVersion

@section UtilFunctionWebServiceSoap12_ports Endpoints of Binding  "UtilFunctionWebServiceSoap12"

  - http://220.165.8.124:2655/UtilFunctionWebService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page HttpServiceSoap Binding "HttpServiceSoap"

@section HttpServiceSoap_operations Operations of Binding  "HttpServiceSoap"

  - @ref __ns9__queryPhoneNOInfo

@section HttpServiceSoap_ports Endpoints of Binding  "HttpServiceSoap"

  - http://220.165.8.124:2557/QueryService.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   HttpServiceSoap12                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns10__queryPhoneNOInfo                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns10__queryPhoneNOInfo" of service binding "HttpServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/queryPhoneNOInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns10__queryPhoneNOInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,
    // response parameters:
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns10__queryPhoneNOInfo(
    struct soap *soap,
    // request parameters:
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,
    // response parameters:
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse
  );
@endcode

C++ proxy class (defined in soapHttpServiceSoap12Proxy.h):
@code
  class HttpServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapHttpServiceSoap12Service.h):
@code
  class HttpServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns10 service method-style:	queryPhoneNOInfo document
//gsoap ns10 service method-encoding:	queryPhoneNOInfo literal
//gsoap ns10 service method-action:	queryPhoneNOInfo http://tempuri.org/queryPhoneNOInfo
int __ns10__queryPhoneNOInfo(
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,	///< Request parameter
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MobileWebServiceSoap                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns11__queryPhoneNOInfo                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns11__queryPhoneNOInfo" of service binding "MobileWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/queryPhoneNOInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns11__queryPhoneNOInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,
    // response parameters:
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns11__queryPhoneNOInfo(
    struct soap *soap,
    // request parameters:
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,
    // response parameters:
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse
  );
@endcode

C++ proxy class (defined in soapMobileWebServiceSoapProxy.h):
@code
  class MobileWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMobileWebServiceSoapService.h):
@code
  class MobileWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns11 service method-style:	queryPhoneNOInfo document
//gsoap ns11 service method-encoding:	queryPhoneNOInfo literal
//gsoap ns11 service method-action:	queryPhoneNOInfo http://tempuri.org/queryPhoneNOInfo
int __ns11__queryPhoneNOInfo(
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,	///< Request parameter
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   MobileWebServiceSoap12                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns12__queryPhoneNOInfo                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns12__queryPhoneNOInfo" of service binding "MobileWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/queryPhoneNOInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns12__queryPhoneNOInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,
    // response parameters:
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns12__queryPhoneNOInfo(
    struct soap *soap,
    // request parameters:
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,
    // response parameters:
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse
  );
@endcode

C++ proxy class (defined in soapMobileWebServiceSoap12Proxy.h):
@code
  class MobileWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapMobileWebServiceSoap12Service.h):
@code
  class MobileWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns12 service method-style:	queryPhoneNOInfo document
//gsoap ns12 service method-encoding:	queryPhoneNOInfo literal
//gsoap ns12 service method-action:	queryPhoneNOInfo http://tempuri.org/queryPhoneNOInfo
int __ns12__queryPhoneNOInfo(
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,	///< Request parameter
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   BusinessFunctionWebServiceSoap                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__BuyMiniCard                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__BuyMiniCard" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/BuyMiniCard"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__BuyMiniCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__BuyMiniCard*                  ns1__BuyMiniCard,
    // response parameters:
    _ns1__BuyMiniCardResponse*          ns1__BuyMiniCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__BuyMiniCard(
    struct soap *soap,
    // request parameters:
    _ns1__BuyMiniCard*                  ns1__BuyMiniCard,
    // response parameters:
    _ns1__BuyMiniCardResponse*          ns1__BuyMiniCardResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	BuyMiniCard document
//gsoap ns13 service method-encoding:	BuyMiniCard literal
//gsoap ns13 service method-action:	BuyMiniCard http://tempuri.org/BuyMiniCard
int __ns13__BuyMiniCard(
    _ns1__BuyMiniCard*                  ns1__BuyMiniCard,	///< Request parameter
    _ns1__BuyMiniCardResponse*          ns1__BuyMiniCardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetPhoneNoByCondition                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetPhoneNoByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPhoneNoByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetPhoneNoByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPhoneNoByCondition*        ns1__GetPhoneNoByCondition,
    // response parameters:
    _ns1__GetPhoneNoByConditionResponse* ns1__GetPhoneNoByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetPhoneNoByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPhoneNoByCondition*        ns1__GetPhoneNoByCondition,
    // response parameters:
    _ns1__GetPhoneNoByConditionResponse* ns1__GetPhoneNoByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetPhoneNoByCondition document
//gsoap ns13 service method-encoding:	GetPhoneNoByCondition literal
//gsoap ns13 service method-action:	GetPhoneNoByCondition http://tempuri.org/GetPhoneNoByCondition
int __ns13__GetPhoneNoByCondition(
    _ns1__GetPhoneNoByCondition*        ns1__GetPhoneNoByCondition,	///< Request parameter
    _ns1__GetPhoneNoByConditionResponse* ns1__GetPhoneNoByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetMyNoSection                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetMyNoSection" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetMyNoSection"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetMyNoSection(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetMyNoSection*               ns1__GetMyNoSection,
    // response parameters:
    _ns1__GetMyNoSectionResponse*       ns1__GetMyNoSectionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetMyNoSection(
    struct soap *soap,
    // request parameters:
    _ns1__GetMyNoSection*               ns1__GetMyNoSection,
    // response parameters:
    _ns1__GetMyNoSectionResponse*       ns1__GetMyNoSectionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetMyNoSection document
//gsoap ns13 service method-encoding:	GetMyNoSection literal
//gsoap ns13 service method-action:	GetMyNoSection http://tempuri.org/GetMyNoSection
int __ns13__GetMyNoSection(
    _ns1__GetMyNoSection*               ns1__GetMyNoSection,	///< Request parameter
    _ns1__GetMyNoSectionResponse*       ns1__GetMyNoSectionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__LockNo                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__LockNo" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/LockNo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__LockNo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__LockNo*                       ns1__LockNo,
    // response parameters:
    _ns1__LockNoResponse*               ns1__LockNoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__LockNo(
    struct soap *soap,
    // request parameters:
    _ns1__LockNo*                       ns1__LockNo,
    // response parameters:
    _ns1__LockNoResponse*               ns1__LockNoResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	LockNo document
//gsoap ns13 service method-encoding:	LockNo literal
//gsoap ns13 service method-action:	LockNo http://tempuri.org/LockNo
int __ns13__LockNo(
    _ns1__LockNo*                       ns1__LockNo,	///< Request parameter
    _ns1__LockNoResponse*               ns1__LockNoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__UnlockNo                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__UnlockNo" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UnlockNo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__UnlockNo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UnlockNo*                     ns1__UnlockNo,
    // response parameters:
    _ns1__UnlockNoResponse*             ns1__UnlockNoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__UnlockNo(
    struct soap *soap,
    // request parameters:
    _ns1__UnlockNo*                     ns1__UnlockNo,
    // response parameters:
    _ns1__UnlockNoResponse*             ns1__UnlockNoResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	UnlockNo document
//gsoap ns13 service method-encoding:	UnlockNo literal
//gsoap ns13 service method-action:	UnlockNo http://tempuri.org/UnlockNo
int __ns13__UnlockNo(
    _ns1__UnlockNo*                     ns1__UnlockNo,	///< Request parameter
    _ns1__UnlockNoResponse*             ns1__UnlockNoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__SubmitBusiness                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__SubmitBusiness" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/SubmitBusiness"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__SubmitBusiness(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__SubmitBusiness*               ns1__SubmitBusiness,
    // response parameters:
    _ns1__SubmitBusinessResponse*       ns1__SubmitBusinessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__SubmitBusiness(
    struct soap *soap,
    // request parameters:
    _ns1__SubmitBusiness*               ns1__SubmitBusiness,
    // response parameters:
    _ns1__SubmitBusinessResponse*       ns1__SubmitBusinessResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	SubmitBusiness document
//gsoap ns13 service method-encoding:	SubmitBusiness literal
//gsoap ns13 service method-action:	SubmitBusiness http://tempuri.org/SubmitBusiness
int __ns13__SubmitBusiness(
    _ns1__SubmitBusiness*               ns1__SubmitBusiness,	///< Request parameter
    _ns1__SubmitBusinessResponse*       ns1__SubmitBusinessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__SellNo                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__SellNo" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/SellNo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__SellNo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__SellNo*                       ns1__SellNo,
    // response parameters:
    _ns1__SellNoResponse*               ns1__SellNoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__SellNo(
    struct soap *soap,
    // request parameters:
    _ns1__SellNo*                       ns1__SellNo,
    // response parameters:
    _ns1__SellNoResponse*               ns1__SellNoResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	SellNo document
//gsoap ns13 service method-encoding:	SellNo literal
//gsoap ns13 service method-action:	SellNo http://tempuri.org/SellNo
int __ns13__SellNo(
    _ns1__SellNo*                       ns1__SellNo,	///< Request parameter
    _ns1__SellNoResponse*               ns1__SellNoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__SellOhterCard                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__SellOhterCard" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/SellOhterCard"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__SellOhterCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__SellOhterCard*                ns1__SellOhterCard,
    // response parameters:
    _ns1__SellOhterCardResponse*        ns1__SellOhterCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__SellOhterCard(
    struct soap *soap,
    // request parameters:
    _ns1__SellOhterCard*                ns1__SellOhterCard,
    // response parameters:
    _ns1__SellOhterCardResponse*        ns1__SellOhterCardResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	SellOhterCard document
//gsoap ns13 service method-encoding:	SellOhterCard literal
//gsoap ns13 service method-action:	SellOhterCard http://tempuri.org/SellOhterCard
int __ns13__SellOhterCard(
    _ns1__SellOhterCard*                ns1__SellOhterCard,	///< Request parameter
    _ns1__SellOhterCardResponse*        ns1__SellOhterCardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetMiniCardRecord                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetMiniCardRecord" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetMiniCardRecord"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetMiniCardRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetMiniCardRecord*            ns1__GetMiniCardRecord,
    // response parameters:
    _ns1__GetMiniCardRecordResponse*    ns1__GetMiniCardRecordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetMiniCardRecord(
    struct soap *soap,
    // request parameters:
    _ns1__GetMiniCardRecord*            ns1__GetMiniCardRecord,
    // response parameters:
    _ns1__GetMiniCardRecordResponse*    ns1__GetMiniCardRecordResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetMiniCardRecord document
//gsoap ns13 service method-encoding:	GetMiniCardRecord literal
//gsoap ns13 service method-action:	GetMiniCardRecord http://tempuri.org/GetMiniCardRecord
int __ns13__GetMiniCardRecord(
    _ns1__GetMiniCardRecord*            ns1__GetMiniCardRecord,	///< Request parameter
    _ns1__GetMiniCardRecordResponse*    ns1__GetMiniCardRecordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetPayMiniCardByCondition                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetPayMiniCardByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayMiniCardByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetPayMiniCardByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayMiniCardByCondition*    ns1__GetPayMiniCardByCondition,
    // response parameters:
    _ns1__GetPayMiniCardByConditionResponse* ns1__GetPayMiniCardByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetPayMiniCardByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayMiniCardByCondition*    ns1__GetPayMiniCardByCondition,
    // response parameters:
    _ns1__GetPayMiniCardByConditionResponse* ns1__GetPayMiniCardByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetPayMiniCardByCondition document
//gsoap ns13 service method-encoding:	GetPayMiniCardByCondition literal
//gsoap ns13 service method-action:	GetPayMiniCardByCondition http://tempuri.org/GetPayMiniCardByCondition
int __ns13__GetPayMiniCardByCondition(
    _ns1__GetPayMiniCardByCondition*    ns1__GetPayMiniCardByCondition,	///< Request parameter
    _ns1__GetPayMiniCardByConditionResponse* ns1__GetPayMiniCardByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetPayMiniCardHistoryByCondition                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetPayMiniCardHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayMiniCardHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetPayMiniCardHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayMiniCardHistoryByCondition* ns1__GetPayMiniCardHistoryByCondition,
    // response parameters:
    _ns1__GetPayMiniCardHistoryByConditionResponse* ns1__GetPayMiniCardHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetPayMiniCardHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayMiniCardHistoryByCondition* ns1__GetPayMiniCardHistoryByCondition,
    // response parameters:
    _ns1__GetPayMiniCardHistoryByConditionResponse* ns1__GetPayMiniCardHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetPayMiniCardHistoryByCondition document
//gsoap ns13 service method-encoding:	GetPayMiniCardHistoryByCondition literal
//gsoap ns13 service method-action:	GetPayMiniCardHistoryByCondition http://tempuri.org/GetPayMiniCardHistoryByCondition
int __ns13__GetPayMiniCardHistoryByCondition(
    _ns1__GetPayMiniCardHistoryByCondition* ns1__GetPayMiniCardHistoryByCondition,	///< Request parameter
    _ns1__GetPayMiniCardHistoryByConditionResponse* ns1__GetPayMiniCardHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetPhoneNoItemByCondition                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetPhoneNoItemByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPhoneNoItemByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetPhoneNoItemByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPhoneNoItemByCondition*    ns1__GetPhoneNoItemByCondition,
    // response parameters:
    _ns1__GetPhoneNoItemByConditionResponse* ns1__GetPhoneNoItemByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetPhoneNoItemByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPhoneNoItemByCondition*    ns1__GetPhoneNoItemByCondition,
    // response parameters:
    _ns1__GetPhoneNoItemByConditionResponse* ns1__GetPhoneNoItemByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetPhoneNoItemByCondition document
//gsoap ns13 service method-encoding:	GetPhoneNoItemByCondition literal
//gsoap ns13 service method-action:	GetPhoneNoItemByCondition http://tempuri.org/GetPhoneNoItemByCondition
int __ns13__GetPhoneNoItemByCondition(
    _ns1__GetPhoneNoItemByCondition*    ns1__GetPhoneNoItemByCondition,	///< Request parameter
    _ns1__GetPhoneNoItemByConditionResponse* ns1__GetPhoneNoItemByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetPhoneNoItemAndHistoryByCondition                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetPhoneNoItemAndHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPhoneNoItemAndHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetPhoneNoItemAndHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPhoneNoItemAndHistoryByCondition* ns1__GetPhoneNoItemAndHistoryByCondition,
    // response parameters:
    _ns1__GetPhoneNoItemAndHistoryByConditionResponse* ns1__GetPhoneNoItemAndHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetPhoneNoItemAndHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPhoneNoItemAndHistoryByCondition* ns1__GetPhoneNoItemAndHistoryByCondition,
    // response parameters:
    _ns1__GetPhoneNoItemAndHistoryByConditionResponse* ns1__GetPhoneNoItemAndHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetPhoneNoItemAndHistoryByCondition document
//gsoap ns13 service method-encoding:	GetPhoneNoItemAndHistoryByCondition literal
//gsoap ns13 service method-action:	GetPhoneNoItemAndHistoryByCondition http://tempuri.org/GetPhoneNoItemAndHistoryByCondition
int __ns13__GetPhoneNoItemAndHistoryByCondition(
    _ns1__GetPhoneNoItemAndHistoryByCondition* ns1__GetPhoneNoItemAndHistoryByCondition,	///< Request parameter
    _ns1__GetPhoneNoItemAndHistoryByConditionResponse* ns1__GetPhoneNoItemAndHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetCardService                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetCardService" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetCardService"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetCardService(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetCardService*               ns1__GetCardService,
    // response parameters:
    _ns1__GetCardServiceResponse*       ns1__GetCardServiceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetCardService(
    struct soap *soap,
    // request parameters:
    _ns1__GetCardService*               ns1__GetCardService,
    // response parameters:
    _ns1__GetCardServiceResponse*       ns1__GetCardServiceResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetCardService document
//gsoap ns13 service method-encoding:	GetCardService literal
//gsoap ns13 service method-action:	GetCardService http://tempuri.org/GetCardService
int __ns13__GetCardService(
    _ns1__GetCardService*               ns1__GetCardService,	///< Request parameter
    _ns1__GetCardServiceResponse*       ns1__GetCardServiceResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetSellCardRecordByCondition                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetSellCardRecordByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetSellCardRecordByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetSellCardRecordByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetSellCardRecordByCondition* ns1__GetSellCardRecordByCondition,
    // response parameters:
    _ns1__GetSellCardRecordByConditionResponse* ns1__GetSellCardRecordByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetSellCardRecordByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetSellCardRecordByCondition* ns1__GetSellCardRecordByCondition,
    // response parameters:
    _ns1__GetSellCardRecordByConditionResponse* ns1__GetSellCardRecordByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetSellCardRecordByCondition document
//gsoap ns13 service method-encoding:	GetSellCardRecordByCondition literal
//gsoap ns13 service method-action:	GetSellCardRecordByCondition http://tempuri.org/GetSellCardRecordByCondition
int __ns13__GetSellCardRecordByCondition(
    _ns1__GetSellCardRecordByCondition* ns1__GetSellCardRecordByCondition,	///< Request parameter
    _ns1__GetSellCardRecordByConditionResponse* ns1__GetSellCardRecordByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetSellCardRecordHistoryByCondition                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetSellCardRecordHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetSellCardRecordHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetSellCardRecordHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetSellCardRecordHistoryByCondition* ns1__GetSellCardRecordHistoryByCondition,
    // response parameters:
    _ns1__GetSellCardRecordHistoryByConditionResponse* ns1__GetSellCardRecordHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetSellCardRecordHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetSellCardRecordHistoryByCondition* ns1__GetSellCardRecordHistoryByCondition,
    // response parameters:
    _ns1__GetSellCardRecordHistoryByConditionResponse* ns1__GetSellCardRecordHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetSellCardRecordHistoryByCondition document
//gsoap ns13 service method-encoding:	GetSellCardRecordHistoryByCondition literal
//gsoap ns13 service method-action:	GetSellCardRecordHistoryByCondition http://tempuri.org/GetSellCardRecordHistoryByCondition
int __ns13__GetSellCardRecordHistoryByCondition(
    _ns1__GetSellCardRecordHistoryByCondition* ns1__GetSellCardRecordHistoryByCondition,	///< Request parameter
    _ns1__GetSellCardRecordHistoryByConditionResponse* ns1__GetSellCardRecordHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetBusinessRecordByCondition                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetBusinessRecordByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetBusinessRecordByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetBusinessRecordByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetBusinessRecordByCondition* ns1__GetBusinessRecordByCondition,
    // response parameters:
    _ns1__GetBusinessRecordByConditionResponse* ns1__GetBusinessRecordByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetBusinessRecordByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetBusinessRecordByCondition* ns1__GetBusinessRecordByCondition,
    // response parameters:
    _ns1__GetBusinessRecordByConditionResponse* ns1__GetBusinessRecordByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetBusinessRecordByCondition document
//gsoap ns13 service method-encoding:	GetBusinessRecordByCondition literal
//gsoap ns13 service method-action:	GetBusinessRecordByCondition http://tempuri.org/GetBusinessRecordByCondition
int __ns13__GetBusinessRecordByCondition(
    _ns1__GetBusinessRecordByCondition* ns1__GetBusinessRecordByCondition,	///< Request parameter
    _ns1__GetBusinessRecordByConditionResponse* ns1__GetBusinessRecordByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GettBusinessRecordHistoryByCondition                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GettBusinessRecordHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GettBusinessRecordHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GettBusinessRecordHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GettBusinessRecordHistoryByCondition* ns1__GettBusinessRecordHistoryByCondition,
    // response parameters:
    _ns1__GettBusinessRecordHistoryByConditionResponse* ns1__GettBusinessRecordHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GettBusinessRecordHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GettBusinessRecordHistoryByCondition* ns1__GettBusinessRecordHistoryByCondition,
    // response parameters:
    _ns1__GettBusinessRecordHistoryByConditionResponse* ns1__GettBusinessRecordHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GettBusinessRecordHistoryByCondition document
//gsoap ns13 service method-encoding:	GettBusinessRecordHistoryByCondition literal
//gsoap ns13 service method-action:	GettBusinessRecordHistoryByCondition http://tempuri.org/GettBusinessRecordHistoryByCondition
int __ns13__GettBusinessRecordHistoryByCondition(
    _ns1__GettBusinessRecordHistoryByCondition* ns1__GettBusinessRecordHistoryByCondition,	///< Request parameter
    _ns1__GettBusinessRecordHistoryByConditionResponse* ns1__GettBusinessRecordHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetSellOtherCardRecordByCondition                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetSellOtherCardRecordByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetSellOtherCardRecordByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetSellOtherCardRecordByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetSellOtherCardRecordByCondition* ns1__GetSellOtherCardRecordByCondition,
    // response parameters:
    _ns1__GetSellOtherCardRecordByConditionResponse* ns1__GetSellOtherCardRecordByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetSellOtherCardRecordByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetSellOtherCardRecordByCondition* ns1__GetSellOtherCardRecordByCondition,
    // response parameters:
    _ns1__GetSellOtherCardRecordByConditionResponse* ns1__GetSellOtherCardRecordByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetSellOtherCardRecordByCondition document
//gsoap ns13 service method-encoding:	GetSellOtherCardRecordByCondition literal
//gsoap ns13 service method-action:	GetSellOtherCardRecordByCondition http://tempuri.org/GetSellOtherCardRecordByCondition
int __ns13__GetSellOtherCardRecordByCondition(
    _ns1__GetSellOtherCardRecordByCondition* ns1__GetSellOtherCardRecordByCondition,	///< Request parameter
    _ns1__GetSellOtherCardRecordByConditionResponse* ns1__GetSellOtherCardRecordByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GettSellOtherCardRecordHistoryByCondition                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GettSellOtherCardRecordHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GettSellOtherCardRecordHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GettSellOtherCardRecordHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GettSellOtherCardRecordHistoryByCondition* ns1__GettSellOtherCardRecordHistoryByCondition,
    // response parameters:
    _ns1__GettSellOtherCardRecordHistoryByConditionResponse* ns1__GettSellOtherCardRecordHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GettSellOtherCardRecordHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GettSellOtherCardRecordHistoryByCondition* ns1__GettSellOtherCardRecordHistoryByCondition,
    // response parameters:
    _ns1__GettSellOtherCardRecordHistoryByConditionResponse* ns1__GettSellOtherCardRecordHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GettSellOtherCardRecordHistoryByCondition document
//gsoap ns13 service method-encoding:	GettSellOtherCardRecordHistoryByCondition literal
//gsoap ns13 service method-action:	GettSellOtherCardRecordHistoryByCondition http://tempuri.org/GettSellOtherCardRecordHistoryByCondition
int __ns13__GettSellOtherCardRecordHistoryByCondition(
    _ns1__GettSellOtherCardRecordHistoryByCondition* ns1__GettSellOtherCardRecordHistoryByCondition,	///< Request parameter
    _ns1__GettSellOtherCardRecordHistoryByConditionResponse* ns1__GettSellOtherCardRecordHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetOtherCardList                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetOtherCardList" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetOtherCardList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetOtherCardList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetOtherCardList*             ns1__GetOtherCardList,
    // response parameters:
    _ns1__GetOtherCardListResponse*     ns1__GetOtherCardListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetOtherCardList(
    struct soap *soap,
    // request parameters:
    _ns1__GetOtherCardList*             ns1__GetOtherCardList,
    // response parameters:
    _ns1__GetOtherCardListResponse*     ns1__GetOtherCardListResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetOtherCardList document
//gsoap ns13 service method-encoding:	GetOtherCardList literal
//gsoap ns13 service method-action:	GetOtherCardList http://tempuri.org/GetOtherCardList
int __ns13__GetOtherCardList(
    _ns1__GetOtherCardList*             ns1__GetOtherCardList,	///< Request parameter
    _ns1__GetOtherCardListResponse*     ns1__GetOtherCardListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetStockCardItemByCondition                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetStockCardItemByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetStockCardItemByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetStockCardItemByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetStockCardItemByCondition*  ns1__GetStockCardItemByCondition,
    // response parameters:
    _ns1__GetStockCardItemByConditionResponse* ns1__GetStockCardItemByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetStockCardItemByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetStockCardItemByCondition*  ns1__GetStockCardItemByCondition,
    // response parameters:
    _ns1__GetStockCardItemByConditionResponse* ns1__GetStockCardItemByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetStockCardItemByCondition document
//gsoap ns13 service method-encoding:	GetStockCardItemByCondition literal
//gsoap ns13 service method-action:	GetStockCardItemByCondition http://tempuri.org/GetStockCardItemByCondition
int __ns13__GetStockCardItemByCondition(
    _ns1__GetStockCardItemByCondition*  ns1__GetStockCardItemByCondition,	///< Request parameter
    _ns1__GetStockCardItemByConditionResponse* ns1__GetStockCardItemByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns13__GetStockCardItemAndHistoryByCondition                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns13__GetStockCardItemAndHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetStockCardItemAndHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns13__GetStockCardItemAndHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetStockCardItemAndHistoryByCondition* ns1__GetStockCardItemAndHistoryByCondition,
    // response parameters:
    _ns1__GetStockCardItemAndHistoryByConditionResponse* ns1__GetStockCardItemAndHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns13__GetStockCardItemAndHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetStockCardItemAndHistoryByCondition* ns1__GetStockCardItemAndHistoryByCondition,
    // response parameters:
    _ns1__GetStockCardItemAndHistoryByConditionResponse* ns1__GetStockCardItemAndHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoapProxy.h):
@code
  class BusinessFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoapService.h):
@code
  class BusinessFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns13 service method-style:	GetStockCardItemAndHistoryByCondition document
//gsoap ns13 service method-encoding:	GetStockCardItemAndHistoryByCondition literal
//gsoap ns13 service method-action:	GetStockCardItemAndHistoryByCondition http://tempuri.org/GetStockCardItemAndHistoryByCondition
int __ns13__GetStockCardItemAndHistoryByCondition(
    _ns1__GetStockCardItemAndHistoryByCondition* ns1__GetStockCardItemAndHistoryByCondition,	///< Request parameter
    _ns1__GetStockCardItemAndHistoryByConditionResponse* ns1__GetStockCardItemAndHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   BusinessFunctionWebServiceSoap12                                         *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__BuyMiniCard                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__BuyMiniCard" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/BuyMiniCard"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__BuyMiniCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__BuyMiniCard*                  ns1__BuyMiniCard,
    // response parameters:
    _ns1__BuyMiniCardResponse*          ns1__BuyMiniCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__BuyMiniCard(
    struct soap *soap,
    // request parameters:
    _ns1__BuyMiniCard*                  ns1__BuyMiniCard,
    // response parameters:
    _ns1__BuyMiniCardResponse*          ns1__BuyMiniCardResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	BuyMiniCard document
//gsoap ns14 service method-encoding:	BuyMiniCard literal
//gsoap ns14 service method-action:	BuyMiniCard http://tempuri.org/BuyMiniCard
int __ns14__BuyMiniCard(
    _ns1__BuyMiniCard*                  ns1__BuyMiniCard,	///< Request parameter
    _ns1__BuyMiniCardResponse*          ns1__BuyMiniCardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetPhoneNoByCondition                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetPhoneNoByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPhoneNoByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetPhoneNoByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPhoneNoByCondition*        ns1__GetPhoneNoByCondition,
    // response parameters:
    _ns1__GetPhoneNoByConditionResponse* ns1__GetPhoneNoByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetPhoneNoByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPhoneNoByCondition*        ns1__GetPhoneNoByCondition,
    // response parameters:
    _ns1__GetPhoneNoByConditionResponse* ns1__GetPhoneNoByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetPhoneNoByCondition document
//gsoap ns14 service method-encoding:	GetPhoneNoByCondition literal
//gsoap ns14 service method-action:	GetPhoneNoByCondition http://tempuri.org/GetPhoneNoByCondition
int __ns14__GetPhoneNoByCondition(
    _ns1__GetPhoneNoByCondition*        ns1__GetPhoneNoByCondition,	///< Request parameter
    _ns1__GetPhoneNoByConditionResponse* ns1__GetPhoneNoByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetMyNoSection                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetMyNoSection" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetMyNoSection"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetMyNoSection(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetMyNoSection*               ns1__GetMyNoSection,
    // response parameters:
    _ns1__GetMyNoSectionResponse*       ns1__GetMyNoSectionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetMyNoSection(
    struct soap *soap,
    // request parameters:
    _ns1__GetMyNoSection*               ns1__GetMyNoSection,
    // response parameters:
    _ns1__GetMyNoSectionResponse*       ns1__GetMyNoSectionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetMyNoSection document
//gsoap ns14 service method-encoding:	GetMyNoSection literal
//gsoap ns14 service method-action:	GetMyNoSection http://tempuri.org/GetMyNoSection
int __ns14__GetMyNoSection(
    _ns1__GetMyNoSection*               ns1__GetMyNoSection,	///< Request parameter
    _ns1__GetMyNoSectionResponse*       ns1__GetMyNoSectionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__LockNo                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__LockNo" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/LockNo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__LockNo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__LockNo*                       ns1__LockNo,
    // response parameters:
    _ns1__LockNoResponse*               ns1__LockNoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__LockNo(
    struct soap *soap,
    // request parameters:
    _ns1__LockNo*                       ns1__LockNo,
    // response parameters:
    _ns1__LockNoResponse*               ns1__LockNoResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	LockNo document
//gsoap ns14 service method-encoding:	LockNo literal
//gsoap ns14 service method-action:	LockNo http://tempuri.org/LockNo
int __ns14__LockNo(
    _ns1__LockNo*                       ns1__LockNo,	///< Request parameter
    _ns1__LockNoResponse*               ns1__LockNoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__UnlockNo                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__UnlockNo" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UnlockNo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__UnlockNo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UnlockNo*                     ns1__UnlockNo,
    // response parameters:
    _ns1__UnlockNoResponse*             ns1__UnlockNoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__UnlockNo(
    struct soap *soap,
    // request parameters:
    _ns1__UnlockNo*                     ns1__UnlockNo,
    // response parameters:
    _ns1__UnlockNoResponse*             ns1__UnlockNoResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	UnlockNo document
//gsoap ns14 service method-encoding:	UnlockNo literal
//gsoap ns14 service method-action:	UnlockNo http://tempuri.org/UnlockNo
int __ns14__UnlockNo(
    _ns1__UnlockNo*                     ns1__UnlockNo,	///< Request parameter
    _ns1__UnlockNoResponse*             ns1__UnlockNoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__SubmitBusiness                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__SubmitBusiness" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/SubmitBusiness"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__SubmitBusiness(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__SubmitBusiness*               ns1__SubmitBusiness,
    // response parameters:
    _ns1__SubmitBusinessResponse*       ns1__SubmitBusinessResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__SubmitBusiness(
    struct soap *soap,
    // request parameters:
    _ns1__SubmitBusiness*               ns1__SubmitBusiness,
    // response parameters:
    _ns1__SubmitBusinessResponse*       ns1__SubmitBusinessResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	SubmitBusiness document
//gsoap ns14 service method-encoding:	SubmitBusiness literal
//gsoap ns14 service method-action:	SubmitBusiness http://tempuri.org/SubmitBusiness
int __ns14__SubmitBusiness(
    _ns1__SubmitBusiness*               ns1__SubmitBusiness,	///< Request parameter
    _ns1__SubmitBusinessResponse*       ns1__SubmitBusinessResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__SellNo                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__SellNo" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/SellNo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__SellNo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__SellNo*                       ns1__SellNo,
    // response parameters:
    _ns1__SellNoResponse*               ns1__SellNoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__SellNo(
    struct soap *soap,
    // request parameters:
    _ns1__SellNo*                       ns1__SellNo,
    // response parameters:
    _ns1__SellNoResponse*               ns1__SellNoResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	SellNo document
//gsoap ns14 service method-encoding:	SellNo literal
//gsoap ns14 service method-action:	SellNo http://tempuri.org/SellNo
int __ns14__SellNo(
    _ns1__SellNo*                       ns1__SellNo,	///< Request parameter
    _ns1__SellNoResponse*               ns1__SellNoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__SellOhterCard                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__SellOhterCard" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/SellOhterCard"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__SellOhterCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__SellOhterCard*                ns1__SellOhterCard,
    // response parameters:
    _ns1__SellOhterCardResponse*        ns1__SellOhterCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__SellOhterCard(
    struct soap *soap,
    // request parameters:
    _ns1__SellOhterCard*                ns1__SellOhterCard,
    // response parameters:
    _ns1__SellOhterCardResponse*        ns1__SellOhterCardResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	SellOhterCard document
//gsoap ns14 service method-encoding:	SellOhterCard literal
//gsoap ns14 service method-action:	SellOhterCard http://tempuri.org/SellOhterCard
int __ns14__SellOhterCard(
    _ns1__SellOhterCard*                ns1__SellOhterCard,	///< Request parameter
    _ns1__SellOhterCardResponse*        ns1__SellOhterCardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetMiniCardRecord                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetMiniCardRecord" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetMiniCardRecord"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetMiniCardRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetMiniCardRecord*            ns1__GetMiniCardRecord,
    // response parameters:
    _ns1__GetMiniCardRecordResponse*    ns1__GetMiniCardRecordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetMiniCardRecord(
    struct soap *soap,
    // request parameters:
    _ns1__GetMiniCardRecord*            ns1__GetMiniCardRecord,
    // response parameters:
    _ns1__GetMiniCardRecordResponse*    ns1__GetMiniCardRecordResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetMiniCardRecord document
//gsoap ns14 service method-encoding:	GetMiniCardRecord literal
//gsoap ns14 service method-action:	GetMiniCardRecord http://tempuri.org/GetMiniCardRecord
int __ns14__GetMiniCardRecord(
    _ns1__GetMiniCardRecord*            ns1__GetMiniCardRecord,	///< Request parameter
    _ns1__GetMiniCardRecordResponse*    ns1__GetMiniCardRecordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetPayMiniCardByCondition                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetPayMiniCardByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayMiniCardByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetPayMiniCardByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayMiniCardByCondition*    ns1__GetPayMiniCardByCondition,
    // response parameters:
    _ns1__GetPayMiniCardByConditionResponse* ns1__GetPayMiniCardByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetPayMiniCardByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayMiniCardByCondition*    ns1__GetPayMiniCardByCondition,
    // response parameters:
    _ns1__GetPayMiniCardByConditionResponse* ns1__GetPayMiniCardByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetPayMiniCardByCondition document
//gsoap ns14 service method-encoding:	GetPayMiniCardByCondition literal
//gsoap ns14 service method-action:	GetPayMiniCardByCondition http://tempuri.org/GetPayMiniCardByCondition
int __ns14__GetPayMiniCardByCondition(
    _ns1__GetPayMiniCardByCondition*    ns1__GetPayMiniCardByCondition,	///< Request parameter
    _ns1__GetPayMiniCardByConditionResponse* ns1__GetPayMiniCardByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetPayMiniCardHistoryByCondition                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetPayMiniCardHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayMiniCardHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetPayMiniCardHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayMiniCardHistoryByCondition* ns1__GetPayMiniCardHistoryByCondition,
    // response parameters:
    _ns1__GetPayMiniCardHistoryByConditionResponse* ns1__GetPayMiniCardHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetPayMiniCardHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayMiniCardHistoryByCondition* ns1__GetPayMiniCardHistoryByCondition,
    // response parameters:
    _ns1__GetPayMiniCardHistoryByConditionResponse* ns1__GetPayMiniCardHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetPayMiniCardHistoryByCondition document
//gsoap ns14 service method-encoding:	GetPayMiniCardHistoryByCondition literal
//gsoap ns14 service method-action:	GetPayMiniCardHistoryByCondition http://tempuri.org/GetPayMiniCardHistoryByCondition
int __ns14__GetPayMiniCardHistoryByCondition(
    _ns1__GetPayMiniCardHistoryByCondition* ns1__GetPayMiniCardHistoryByCondition,	///< Request parameter
    _ns1__GetPayMiniCardHistoryByConditionResponse* ns1__GetPayMiniCardHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetPhoneNoItemByCondition                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetPhoneNoItemByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPhoneNoItemByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetPhoneNoItemByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPhoneNoItemByCondition*    ns1__GetPhoneNoItemByCondition,
    // response parameters:
    _ns1__GetPhoneNoItemByConditionResponse* ns1__GetPhoneNoItemByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetPhoneNoItemByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPhoneNoItemByCondition*    ns1__GetPhoneNoItemByCondition,
    // response parameters:
    _ns1__GetPhoneNoItemByConditionResponse* ns1__GetPhoneNoItemByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetPhoneNoItemByCondition document
//gsoap ns14 service method-encoding:	GetPhoneNoItemByCondition literal
//gsoap ns14 service method-action:	GetPhoneNoItemByCondition http://tempuri.org/GetPhoneNoItemByCondition
int __ns14__GetPhoneNoItemByCondition(
    _ns1__GetPhoneNoItemByCondition*    ns1__GetPhoneNoItemByCondition,	///< Request parameter
    _ns1__GetPhoneNoItemByConditionResponse* ns1__GetPhoneNoItemByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetPhoneNoItemAndHistoryByCondition                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetPhoneNoItemAndHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPhoneNoItemAndHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetPhoneNoItemAndHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPhoneNoItemAndHistoryByCondition* ns1__GetPhoneNoItemAndHistoryByCondition,
    // response parameters:
    _ns1__GetPhoneNoItemAndHistoryByConditionResponse* ns1__GetPhoneNoItemAndHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetPhoneNoItemAndHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPhoneNoItemAndHistoryByCondition* ns1__GetPhoneNoItemAndHistoryByCondition,
    // response parameters:
    _ns1__GetPhoneNoItemAndHistoryByConditionResponse* ns1__GetPhoneNoItemAndHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetPhoneNoItemAndHistoryByCondition document
//gsoap ns14 service method-encoding:	GetPhoneNoItemAndHistoryByCondition literal
//gsoap ns14 service method-action:	GetPhoneNoItemAndHistoryByCondition http://tempuri.org/GetPhoneNoItemAndHistoryByCondition
int __ns14__GetPhoneNoItemAndHistoryByCondition(
    _ns1__GetPhoneNoItemAndHistoryByCondition* ns1__GetPhoneNoItemAndHistoryByCondition,	///< Request parameter
    _ns1__GetPhoneNoItemAndHistoryByConditionResponse* ns1__GetPhoneNoItemAndHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetCardService                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetCardService" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetCardService"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetCardService(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetCardService*               ns1__GetCardService,
    // response parameters:
    _ns1__GetCardServiceResponse*       ns1__GetCardServiceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetCardService(
    struct soap *soap,
    // request parameters:
    _ns1__GetCardService*               ns1__GetCardService,
    // response parameters:
    _ns1__GetCardServiceResponse*       ns1__GetCardServiceResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetCardService document
//gsoap ns14 service method-encoding:	GetCardService literal
//gsoap ns14 service method-action:	GetCardService http://tempuri.org/GetCardService
int __ns14__GetCardService(
    _ns1__GetCardService*               ns1__GetCardService,	///< Request parameter
    _ns1__GetCardServiceResponse*       ns1__GetCardServiceResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetSellCardRecordByCondition                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetSellCardRecordByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetSellCardRecordByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetSellCardRecordByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetSellCardRecordByCondition* ns1__GetSellCardRecordByCondition,
    // response parameters:
    _ns1__GetSellCardRecordByConditionResponse* ns1__GetSellCardRecordByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetSellCardRecordByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetSellCardRecordByCondition* ns1__GetSellCardRecordByCondition,
    // response parameters:
    _ns1__GetSellCardRecordByConditionResponse* ns1__GetSellCardRecordByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetSellCardRecordByCondition document
//gsoap ns14 service method-encoding:	GetSellCardRecordByCondition literal
//gsoap ns14 service method-action:	GetSellCardRecordByCondition http://tempuri.org/GetSellCardRecordByCondition
int __ns14__GetSellCardRecordByCondition(
    _ns1__GetSellCardRecordByCondition* ns1__GetSellCardRecordByCondition,	///< Request parameter
    _ns1__GetSellCardRecordByConditionResponse* ns1__GetSellCardRecordByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetSellCardRecordHistoryByCondition                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetSellCardRecordHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetSellCardRecordHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetSellCardRecordHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetSellCardRecordHistoryByCondition* ns1__GetSellCardRecordHistoryByCondition,
    // response parameters:
    _ns1__GetSellCardRecordHistoryByConditionResponse* ns1__GetSellCardRecordHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetSellCardRecordHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetSellCardRecordHistoryByCondition* ns1__GetSellCardRecordHistoryByCondition,
    // response parameters:
    _ns1__GetSellCardRecordHistoryByConditionResponse* ns1__GetSellCardRecordHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetSellCardRecordHistoryByCondition document
//gsoap ns14 service method-encoding:	GetSellCardRecordHistoryByCondition literal
//gsoap ns14 service method-action:	GetSellCardRecordHistoryByCondition http://tempuri.org/GetSellCardRecordHistoryByCondition
int __ns14__GetSellCardRecordHistoryByCondition(
    _ns1__GetSellCardRecordHistoryByCondition* ns1__GetSellCardRecordHistoryByCondition,	///< Request parameter
    _ns1__GetSellCardRecordHistoryByConditionResponse* ns1__GetSellCardRecordHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetBusinessRecordByCondition                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetBusinessRecordByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetBusinessRecordByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetBusinessRecordByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetBusinessRecordByCondition* ns1__GetBusinessRecordByCondition,
    // response parameters:
    _ns1__GetBusinessRecordByConditionResponse* ns1__GetBusinessRecordByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetBusinessRecordByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetBusinessRecordByCondition* ns1__GetBusinessRecordByCondition,
    // response parameters:
    _ns1__GetBusinessRecordByConditionResponse* ns1__GetBusinessRecordByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetBusinessRecordByCondition document
//gsoap ns14 service method-encoding:	GetBusinessRecordByCondition literal
//gsoap ns14 service method-action:	GetBusinessRecordByCondition http://tempuri.org/GetBusinessRecordByCondition
int __ns14__GetBusinessRecordByCondition(
    _ns1__GetBusinessRecordByCondition* ns1__GetBusinessRecordByCondition,	///< Request parameter
    _ns1__GetBusinessRecordByConditionResponse* ns1__GetBusinessRecordByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GettBusinessRecordHistoryByCondition                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GettBusinessRecordHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GettBusinessRecordHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GettBusinessRecordHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GettBusinessRecordHistoryByCondition* ns1__GettBusinessRecordHistoryByCondition,
    // response parameters:
    _ns1__GettBusinessRecordHistoryByConditionResponse* ns1__GettBusinessRecordHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GettBusinessRecordHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GettBusinessRecordHistoryByCondition* ns1__GettBusinessRecordHistoryByCondition,
    // response parameters:
    _ns1__GettBusinessRecordHistoryByConditionResponse* ns1__GettBusinessRecordHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GettBusinessRecordHistoryByCondition document
//gsoap ns14 service method-encoding:	GettBusinessRecordHistoryByCondition literal
//gsoap ns14 service method-action:	GettBusinessRecordHistoryByCondition http://tempuri.org/GettBusinessRecordHistoryByCondition
int __ns14__GettBusinessRecordHistoryByCondition(
    _ns1__GettBusinessRecordHistoryByCondition* ns1__GettBusinessRecordHistoryByCondition,	///< Request parameter
    _ns1__GettBusinessRecordHistoryByConditionResponse* ns1__GettBusinessRecordHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetSellOtherCardRecordByCondition                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetSellOtherCardRecordByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetSellOtherCardRecordByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetSellOtherCardRecordByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetSellOtherCardRecordByCondition* ns1__GetSellOtherCardRecordByCondition,
    // response parameters:
    _ns1__GetSellOtherCardRecordByConditionResponse* ns1__GetSellOtherCardRecordByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetSellOtherCardRecordByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetSellOtherCardRecordByCondition* ns1__GetSellOtherCardRecordByCondition,
    // response parameters:
    _ns1__GetSellOtherCardRecordByConditionResponse* ns1__GetSellOtherCardRecordByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetSellOtherCardRecordByCondition document
//gsoap ns14 service method-encoding:	GetSellOtherCardRecordByCondition literal
//gsoap ns14 service method-action:	GetSellOtherCardRecordByCondition http://tempuri.org/GetSellOtherCardRecordByCondition
int __ns14__GetSellOtherCardRecordByCondition(
    _ns1__GetSellOtherCardRecordByCondition* ns1__GetSellOtherCardRecordByCondition,	///< Request parameter
    _ns1__GetSellOtherCardRecordByConditionResponse* ns1__GetSellOtherCardRecordByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GettSellOtherCardRecordHistoryByCondition                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GettSellOtherCardRecordHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GettSellOtherCardRecordHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GettSellOtherCardRecordHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GettSellOtherCardRecordHistoryByCondition* ns1__GettSellOtherCardRecordHistoryByCondition,
    // response parameters:
    _ns1__GettSellOtherCardRecordHistoryByConditionResponse* ns1__GettSellOtherCardRecordHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GettSellOtherCardRecordHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GettSellOtherCardRecordHistoryByCondition* ns1__GettSellOtherCardRecordHistoryByCondition,
    // response parameters:
    _ns1__GettSellOtherCardRecordHistoryByConditionResponse* ns1__GettSellOtherCardRecordHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GettSellOtherCardRecordHistoryByCondition document
//gsoap ns14 service method-encoding:	GettSellOtherCardRecordHistoryByCondition literal
//gsoap ns14 service method-action:	GettSellOtherCardRecordHistoryByCondition http://tempuri.org/GettSellOtherCardRecordHistoryByCondition
int __ns14__GettSellOtherCardRecordHistoryByCondition(
    _ns1__GettSellOtherCardRecordHistoryByCondition* ns1__GettSellOtherCardRecordHistoryByCondition,	///< Request parameter
    _ns1__GettSellOtherCardRecordHistoryByConditionResponse* ns1__GettSellOtherCardRecordHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetOtherCardList                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetOtherCardList" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetOtherCardList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetOtherCardList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetOtherCardList*             ns1__GetOtherCardList,
    // response parameters:
    _ns1__GetOtherCardListResponse*     ns1__GetOtherCardListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetOtherCardList(
    struct soap *soap,
    // request parameters:
    _ns1__GetOtherCardList*             ns1__GetOtherCardList,
    // response parameters:
    _ns1__GetOtherCardListResponse*     ns1__GetOtherCardListResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetOtherCardList document
//gsoap ns14 service method-encoding:	GetOtherCardList literal
//gsoap ns14 service method-action:	GetOtherCardList http://tempuri.org/GetOtherCardList
int __ns14__GetOtherCardList(
    _ns1__GetOtherCardList*             ns1__GetOtherCardList,	///< Request parameter
    _ns1__GetOtherCardListResponse*     ns1__GetOtherCardListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetStockCardItemByCondition                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetStockCardItemByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetStockCardItemByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetStockCardItemByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetStockCardItemByCondition*  ns1__GetStockCardItemByCondition,
    // response parameters:
    _ns1__GetStockCardItemByConditionResponse* ns1__GetStockCardItemByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetStockCardItemByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetStockCardItemByCondition*  ns1__GetStockCardItemByCondition,
    // response parameters:
    _ns1__GetStockCardItemByConditionResponse* ns1__GetStockCardItemByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetStockCardItemByCondition document
//gsoap ns14 service method-encoding:	GetStockCardItemByCondition literal
//gsoap ns14 service method-action:	GetStockCardItemByCondition http://tempuri.org/GetStockCardItemByCondition
int __ns14__GetStockCardItemByCondition(
    _ns1__GetStockCardItemByCondition*  ns1__GetStockCardItemByCondition,	///< Request parameter
    _ns1__GetStockCardItemByConditionResponse* ns1__GetStockCardItemByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns14__GetStockCardItemAndHistoryByCondition                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns14__GetStockCardItemAndHistoryByCondition" of service binding "BusinessFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetStockCardItemAndHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns14__GetStockCardItemAndHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetStockCardItemAndHistoryByCondition* ns1__GetStockCardItemAndHistoryByCondition,
    // response parameters:
    _ns1__GetStockCardItemAndHistoryByConditionResponse* ns1__GetStockCardItemAndHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns14__GetStockCardItemAndHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetStockCardItemAndHistoryByCondition* ns1__GetStockCardItemAndHistoryByCondition,
    // response parameters:
    _ns1__GetStockCardItemAndHistoryByConditionResponse* ns1__GetStockCardItemAndHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapBusinessFunctionWebServiceSoap12Proxy.h):
@code
  class BusinessFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBusinessFunctionWebServiceSoap12Service.h):
@code
  class BusinessFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns14 service method-style:	GetStockCardItemAndHistoryByCondition document
//gsoap ns14 service method-encoding:	GetStockCardItemAndHistoryByCondition literal
//gsoap ns14 service method-action:	GetStockCardItemAndHistoryByCondition http://tempuri.org/GetStockCardItemAndHistoryByCondition
int __ns14__GetStockCardItemAndHistoryByCondition(
    _ns1__GetStockCardItemAndHistoryByCondition* ns1__GetStockCardItemAndHistoryByCondition,	///< Request parameter
    _ns1__GetStockCardItemAndHistoryByConditionResponse* ns1__GetStockCardItemAndHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PaymentFunctionWebServiceSoap                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetLocation                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetLocation" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetLocation"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetLocation*                  ns1__GetLocation,
    // response parameters:
    _ns1__GetLocationResponse*          ns1__GetLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetLocation(
    struct soap *soap,
    // request parameters:
    _ns1__GetLocation*                  ns1__GetLocation,
    // response parameters:
    _ns1__GetLocationResponse*          ns1__GetLocationResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetLocation document
//gsoap ns3  service method-encoding:	GetLocation literal
//gsoap ns3  service method-action:	GetLocation http://tempuri.org/GetLocation
int __ns3__GetLocation(
    _ns1__GetLocation*                  ns1__GetLocation,	///< Request parameter
    _ns1__GetLocationResponse*          ns1__GetLocationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__PayMoney                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__PayMoney" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayMoney"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__PayMoney(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayMoney*                     ns1__PayMoney,
    // response parameters:
    _ns1__PayMoneyResponse*             ns1__PayMoneyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__PayMoney(
    struct soap *soap,
    // request parameters:
    _ns1__PayMoney*                     ns1__PayMoney,
    // response parameters:
    _ns1__PayMoneyResponse*             ns1__PayMoneyResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	PayMoney document
//gsoap ns3  service method-encoding:	PayMoney literal
//gsoap ns3  service method-action:	PayMoney http://tempuri.org/PayMoney
int __ns3__PayMoney(
    _ns1__PayMoney*                     ns1__PayMoney,	///< Request parameter
    _ns1__PayMoneyResponse*             ns1__PayMoneyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__PayMoneyWithList                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__PayMoneyWithList" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayMoneyWithList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__PayMoneyWithList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayMoneyWithList*             ns1__PayMoneyWithList,
    // response parameters:
    _ns1__PayMoneyWithListResponse*     ns1__PayMoneyWithListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__PayMoneyWithList(
    struct soap *soap,
    // request parameters:
    _ns1__PayMoneyWithList*             ns1__PayMoneyWithList,
    // response parameters:
    _ns1__PayMoneyWithListResponse*     ns1__PayMoneyWithListResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	PayMoneyWithList document
//gsoap ns3  service method-encoding:	PayMoneyWithList literal
//gsoap ns3  service method-action:	PayMoneyWithList http://tempuri.org/PayMoneyWithList
int __ns3__PayMoneyWithList(
    _ns1__PayMoneyWithList*             ns1__PayMoneyWithList,	///< Request parameter
    _ns1__PayMoneyWithListResponse*     ns1__PayMoneyWithListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__RequstRollback                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__RequstRollback" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/RequstRollback"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__RequstRollback(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__RequstRollback*               ns1__RequstRollback,
    // response parameters:
    _ns1__RequstRollbackResponse*       ns1__RequstRollbackResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__RequstRollback(
    struct soap *soap,
    // request parameters:
    _ns1__RequstRollback*               ns1__RequstRollback,
    // response parameters:
    _ns1__RequstRollbackResponse*       ns1__RequstRollbackResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	RequstRollback document
//gsoap ns3  service method-encoding:	RequstRollback literal
//gsoap ns3  service method-action:	RequstRollback http://tempuri.org/RequstRollback
int __ns3__RequstRollback(
    _ns1__RequstRollback*               ns1__RequstRollback,	///< Request parameter
    _ns1__RequstRollbackResponse*       ns1__RequstRollbackResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__PayInternet                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__PayInternet" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayInternet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__PayInternet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayInternet*                  ns1__PayInternet,
    // response parameters:
    _ns1__PayInternetResponse*          ns1__PayInternetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__PayInternet(
    struct soap *soap,
    // request parameters:
    _ns1__PayInternet*                  ns1__PayInternet,
    // response parameters:
    _ns1__PayInternetResponse*          ns1__PayInternetResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	PayInternet document
//gsoap ns3  service method-encoding:	PayInternet literal
//gsoap ns3  service method-action:	PayInternet http://tempuri.org/PayInternet
int __ns3__PayInternet(
    _ns1__PayInternet*                  ns1__PayInternet,	///< Request parameter
    _ns1__PayInternetResponse*          ns1__PayInternetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__PayInternetWithList                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__PayInternetWithList" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayInternetWithList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__PayInternetWithList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayInternetWithList*          ns1__PayInternetWithList,
    // response parameters:
    _ns1__PayInternetWithListResponse*  ns1__PayInternetWithListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__PayInternetWithList(
    struct soap *soap,
    // request parameters:
    _ns1__PayInternetWithList*          ns1__PayInternetWithList,
    // response parameters:
    _ns1__PayInternetWithListResponse*  ns1__PayInternetWithListResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	PayInternetWithList document
//gsoap ns3  service method-encoding:	PayInternetWithList literal
//gsoap ns3  service method-action:	PayInternetWithList http://tempuri.org/PayInternetWithList
int __ns3__PayInternetWithList(
    _ns1__PayInternetWithList*          ns1__PayInternetWithList,	///< Request parameter
    _ns1__PayInternetWithListResponse*  ns1__PayInternetWithListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__RequstInternetRollback                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__RequstInternetRollback" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/RequstInternetRollback"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__RequstInternetRollback(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__RequstInternetRollback*       ns1__RequstInternetRollback,
    // response parameters:
    _ns1__RequstInternetRollbackResponse* ns1__RequstInternetRollbackResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__RequstInternetRollback(
    struct soap *soap,
    // request parameters:
    _ns1__RequstInternetRollback*       ns1__RequstInternetRollback,
    // response parameters:
    _ns1__RequstInternetRollbackResponse* ns1__RequstInternetRollbackResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	RequstInternetRollback document
//gsoap ns3  service method-encoding:	RequstInternetRollback literal
//gsoap ns3  service method-action:	RequstInternetRollback http://tempuri.org/RequstInternetRollback
int __ns3__RequstInternetRollback(
    _ns1__RequstInternetRollback*       ns1__RequstInternetRollback,	///< Request parameter
    _ns1__RequstInternetRollbackResponse* ns1__RequstInternetRollbackResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__PayGame                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__PayGame" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayGame"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__PayGame(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayGame*                      ns1__PayGame,
    // response parameters:
    _ns1__PayGameResponse*              ns1__PayGameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__PayGame(
    struct soap *soap,
    // request parameters:
    _ns1__PayGame*                      ns1__PayGame,
    // response parameters:
    _ns1__PayGameResponse*              ns1__PayGameResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	PayGame document
//gsoap ns3  service method-encoding:	PayGame literal
//gsoap ns3  service method-action:	PayGame http://tempuri.org/PayGame
int __ns3__PayGame(
    _ns1__PayGame*                      ns1__PayGame,	///< Request parameter
    _ns1__PayGameResponse*              ns1__PayGameResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__PayPublicTel                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__PayPublicTel" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayPublicTel"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__PayPublicTel(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayPublicTel*                 ns1__PayPublicTel,
    // response parameters:
    _ns1__PayPublicTelResponse*         ns1__PayPublicTelResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__PayPublicTel(
    struct soap *soap,
    // request parameters:
    _ns1__PayPublicTel*                 ns1__PayPublicTel,
    // response parameters:
    _ns1__PayPublicTelResponse*         ns1__PayPublicTelResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	PayPublicTel document
//gsoap ns3  service method-encoding:	PayPublicTel literal
//gsoap ns3  service method-action:	PayPublicTel http://tempuri.org/PayPublicTel
int __ns3__PayPublicTel(
    _ns1__PayPublicTel*                 ns1__PayPublicTel,	///< Request parameter
    _ns1__PayPublicTelResponse*         ns1__PayPublicTelResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetPaymentRecord                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetPaymentRecord" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPaymentRecord"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetPaymentRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPaymentRecord*             ns1__GetPaymentRecord,
    // response parameters:
    _ns1__GetPaymentRecordResponse*     ns1__GetPaymentRecordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetPaymentRecord(
    struct soap *soap,
    // request parameters:
    _ns1__GetPaymentRecord*             ns1__GetPaymentRecord,
    // response parameters:
    _ns1__GetPaymentRecordResponse*     ns1__GetPaymentRecordResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetPaymentRecord document
//gsoap ns3  service method-encoding:	GetPaymentRecord literal
//gsoap ns3  service method-action:	GetPaymentRecord http://tempuri.org/GetPaymentRecord
int __ns3__GetPaymentRecord(
    _ns1__GetPaymentRecord*             ns1__GetPaymentRecord,	///< Request parameter
    _ns1__GetPaymentRecordResponse*     ns1__GetPaymentRecordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetPaymentItem                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetPaymentItem" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPaymentItem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetPaymentItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPaymentItem*               ns1__GetPaymentItem,
    // response parameters:
    _ns1__GetPaymentItemResponse*       ns1__GetPaymentItemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetPaymentItem(
    struct soap *soap,
    // request parameters:
    _ns1__GetPaymentItem*               ns1__GetPaymentItem,
    // response parameters:
    _ns1__GetPaymentItemResponse*       ns1__GetPaymentItemResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetPaymentItem document
//gsoap ns3  service method-encoding:	GetPaymentItem literal
//gsoap ns3  service method-action:	GetPaymentItem http://tempuri.org/GetPaymentItem
int __ns3__GetPaymentItem(
    _ns1__GetPaymentItem*               ns1__GetPaymentItem,	///< Request parameter
    _ns1__GetPaymentItemResponse*       ns1__GetPaymentItemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetTransactionByCondition                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetTransactionByCondition" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetTransactionByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetTransactionByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetTransactionByCondition*    ns1__GetTransactionByCondition,
    // response parameters:
    _ns1__GetTransactionByConditionResponse* ns1__GetTransactionByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetTransactionByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetTransactionByCondition*    ns1__GetTransactionByCondition,
    // response parameters:
    _ns1__GetTransactionByConditionResponse* ns1__GetTransactionByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetTransactionByCondition document
//gsoap ns3  service method-encoding:	GetTransactionByCondition literal
//gsoap ns3  service method-action:	GetTransactionByCondition http://tempuri.org/GetTransactionByCondition
int __ns3__GetTransactionByCondition(
    _ns1__GetTransactionByCondition*    ns1__GetTransactionByCondition,	///< Request parameter
    _ns1__GetTransactionByConditionResponse* ns1__GetTransactionByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetTransactionStaticsByCondition                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetTransactionStaticsByCondition" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetTransactionStaticsByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetTransactionStaticsByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetTransactionStaticsByCondition* ns1__GetTransactionStaticsByCondition,
    // response parameters:
    _ns1__GetTransactionStaticsByConditionResponse* ns1__GetTransactionStaticsByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetTransactionStaticsByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetTransactionStaticsByCondition* ns1__GetTransactionStaticsByCondition,
    // response parameters:
    _ns1__GetTransactionStaticsByConditionResponse* ns1__GetTransactionStaticsByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetTransactionStaticsByCondition document
//gsoap ns3  service method-encoding:	GetTransactionStaticsByCondition literal
//gsoap ns3  service method-action:	GetTransactionStaticsByCondition http://tempuri.org/GetTransactionStaticsByCondition
int __ns3__GetTransactionStaticsByCondition(
    _ns1__GetTransactionStaticsByCondition* ns1__GetTransactionStaticsByCondition,	///< Request parameter
    _ns1__GetTransactionStaticsByConditionResponse* ns1__GetTransactionStaticsByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetPaymentOrPaymentHistoryByCondition                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetPaymentOrPaymentHistoryByCondition" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPaymentOrPaymentHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetPaymentOrPaymentHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPaymentOrPaymentHistoryByCondition* ns1__GetPaymentOrPaymentHistoryByCondition,
    // response parameters:
    _ns1__GetPaymentOrPaymentHistoryByConditionResponse* ns1__GetPaymentOrPaymentHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetPaymentOrPaymentHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPaymentOrPaymentHistoryByCondition* ns1__GetPaymentOrPaymentHistoryByCondition,
    // response parameters:
    _ns1__GetPaymentOrPaymentHistoryByConditionResponse* ns1__GetPaymentOrPaymentHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetPaymentOrPaymentHistoryByCondition document
//gsoap ns3  service method-encoding:	GetPaymentOrPaymentHistoryByCondition literal
//gsoap ns3  service method-action:	GetPaymentOrPaymentHistoryByCondition http://tempuri.org/GetPaymentOrPaymentHistoryByCondition
int __ns3__GetPaymentOrPaymentHistoryByCondition(
    _ns1__GetPaymentOrPaymentHistoryByCondition* ns1__GetPaymentOrPaymentHistoryByCondition,	///< Request parameter
    _ns1__GetPaymentOrPaymentHistoryByConditionResponse* ns1__GetPaymentOrPaymentHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetPayInternetByCondition                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetPayInternetByCondition" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayInternetByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetPayInternetByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayInternetByCondition*    ns1__GetPayInternetByCondition,
    // response parameters:
    _ns1__GetPayInternetByConditionResponse* ns1__GetPayInternetByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetPayInternetByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayInternetByCondition*    ns1__GetPayInternetByCondition,
    // response parameters:
    _ns1__GetPayInternetByConditionResponse* ns1__GetPayInternetByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetPayInternetByCondition document
//gsoap ns3  service method-encoding:	GetPayInternetByCondition literal
//gsoap ns3  service method-action:	GetPayInternetByCondition http://tempuri.org/GetPayInternetByCondition
int __ns3__GetPayInternetByCondition(
    _ns1__GetPayInternetByCondition*    ns1__GetPayInternetByCondition,	///< Request parameter
    _ns1__GetPayInternetByConditionResponse* ns1__GetPayInternetByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetPayInternetHistoryByCondition                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetPayInternetHistoryByCondition" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayInternetHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetPayInternetHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayInternetHistoryByCondition* ns1__GetPayInternetHistoryByCondition,
    // response parameters:
    _ns1__GetPayInternetHistoryByConditionResponse* ns1__GetPayInternetHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetPayInternetHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayInternetHistoryByCondition* ns1__GetPayInternetHistoryByCondition,
    // response parameters:
    _ns1__GetPayInternetHistoryByConditionResponse* ns1__GetPayInternetHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetPayInternetHistoryByCondition document
//gsoap ns3  service method-encoding:	GetPayInternetHistoryByCondition literal
//gsoap ns3  service method-action:	GetPayInternetHistoryByCondition http://tempuri.org/GetPayInternetHistoryByCondition
int __ns3__GetPayInternetHistoryByCondition(
    _ns1__GetPayInternetHistoryByCondition* ns1__GetPayInternetHistoryByCondition,	///< Request parameter
    _ns1__GetPayInternetHistoryByConditionResponse* ns1__GetPayInternetHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetPayGameByCondition                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetPayGameByCondition" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayGameByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetPayGameByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayGameByCondition*        ns1__GetPayGameByCondition,
    // response parameters:
    _ns1__GetPayGameByConditionResponse* ns1__GetPayGameByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetPayGameByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayGameByCondition*        ns1__GetPayGameByCondition,
    // response parameters:
    _ns1__GetPayGameByConditionResponse* ns1__GetPayGameByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetPayGameByCondition document
//gsoap ns3  service method-encoding:	GetPayGameByCondition literal
//gsoap ns3  service method-action:	GetPayGameByCondition http://tempuri.org/GetPayGameByCondition
int __ns3__GetPayGameByCondition(
    _ns1__GetPayGameByCondition*        ns1__GetPayGameByCondition,	///< Request parameter
    _ns1__GetPayGameByConditionResponse* ns1__GetPayGameByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetPayGameHistoryByCondition                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetPayGameHistoryByCondition" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayGameHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetPayGameHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayGameHistoryByCondition* ns1__GetPayGameHistoryByCondition,
    // response parameters:
    _ns1__GetPayGameHistoryByConditionResponse* ns1__GetPayGameHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetPayGameHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayGameHistoryByCondition* ns1__GetPayGameHistoryByCondition,
    // response parameters:
    _ns1__GetPayGameHistoryByConditionResponse* ns1__GetPayGameHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetPayGameHistoryByCondition document
//gsoap ns3  service method-encoding:	GetPayGameHistoryByCondition literal
//gsoap ns3  service method-action:	GetPayGameHistoryByCondition http://tempuri.org/GetPayGameHistoryByCondition
int __ns3__GetPayGameHistoryByCondition(
    _ns1__GetPayGameHistoryByCondition* ns1__GetPayGameHistoryByCondition,	///< Request parameter
    _ns1__GetPayGameHistoryByConditionResponse* ns1__GetPayGameHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetPayPublicTelByCondition                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetPayPublicTelByCondition" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayPublicTelByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetPayPublicTelByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayPublicTelByCondition*   ns1__GetPayPublicTelByCondition,
    // response parameters:
    _ns1__GetPayPublicTelByConditionResponse* ns1__GetPayPublicTelByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetPayPublicTelByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayPublicTelByCondition*   ns1__GetPayPublicTelByCondition,
    // response parameters:
    _ns1__GetPayPublicTelByConditionResponse* ns1__GetPayPublicTelByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetPayPublicTelByCondition document
//gsoap ns3  service method-encoding:	GetPayPublicTelByCondition literal
//gsoap ns3  service method-action:	GetPayPublicTelByCondition http://tempuri.org/GetPayPublicTelByCondition
int __ns3__GetPayPublicTelByCondition(
    _ns1__GetPayPublicTelByCondition*   ns1__GetPayPublicTelByCondition,	///< Request parameter
    _ns1__GetPayPublicTelByConditionResponse* ns1__GetPayPublicTelByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns3__GetPayPublicTelHistoryByCondition                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetPayPublicTelHistoryByCondition" of service binding "PaymentFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayPublicTelHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetPayPublicTelHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayPublicTelHistoryByCondition* ns1__GetPayPublicTelHistoryByCondition,
    // response parameters:
    _ns1__GetPayPublicTelHistoryByConditionResponse* ns1__GetPayPublicTelHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetPayPublicTelHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayPublicTelHistoryByCondition* ns1__GetPayPublicTelHistoryByCondition,
    // response parameters:
    _ns1__GetPayPublicTelHistoryByConditionResponse* ns1__GetPayPublicTelHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoapProxy.h):
@code
  class PaymentFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoapService.h):
@code
  class PaymentFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns3  service method-style:	GetPayPublicTelHistoryByCondition document
//gsoap ns3  service method-encoding:	GetPayPublicTelHistoryByCondition literal
//gsoap ns3  service method-action:	GetPayPublicTelHistoryByCondition http://tempuri.org/GetPayPublicTelHistoryByCondition
int __ns3__GetPayPublicTelHistoryByCondition(
    _ns1__GetPayPublicTelHistoryByCondition* ns1__GetPayPublicTelHistoryByCondition,	///< Request parameter
    _ns1__GetPayPublicTelHistoryByConditionResponse* ns1__GetPayPublicTelHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PaymentFunctionWebServiceSoap12                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetLocation                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetLocation" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetLocation"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetLocation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetLocation*                  ns1__GetLocation,
    // response parameters:
    _ns1__GetLocationResponse*          ns1__GetLocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetLocation(
    struct soap *soap,
    // request parameters:
    _ns1__GetLocation*                  ns1__GetLocation,
    // response parameters:
    _ns1__GetLocationResponse*          ns1__GetLocationResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetLocation document
//gsoap ns4  service method-encoding:	GetLocation literal
//gsoap ns4  service method-action:	GetLocation http://tempuri.org/GetLocation
int __ns4__GetLocation(
    _ns1__GetLocation*                  ns1__GetLocation,	///< Request parameter
    _ns1__GetLocationResponse*          ns1__GetLocationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__PayMoney                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__PayMoney" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayMoney"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__PayMoney(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayMoney*                     ns1__PayMoney,
    // response parameters:
    _ns1__PayMoneyResponse*             ns1__PayMoneyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__PayMoney(
    struct soap *soap,
    // request parameters:
    _ns1__PayMoney*                     ns1__PayMoney,
    // response parameters:
    _ns1__PayMoneyResponse*             ns1__PayMoneyResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	PayMoney document
//gsoap ns4  service method-encoding:	PayMoney literal
//gsoap ns4  service method-action:	PayMoney http://tempuri.org/PayMoney
int __ns4__PayMoney(
    _ns1__PayMoney*                     ns1__PayMoney,	///< Request parameter
    _ns1__PayMoneyResponse*             ns1__PayMoneyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__PayMoneyWithList                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__PayMoneyWithList" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayMoneyWithList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__PayMoneyWithList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayMoneyWithList*             ns1__PayMoneyWithList,
    // response parameters:
    _ns1__PayMoneyWithListResponse*     ns1__PayMoneyWithListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__PayMoneyWithList(
    struct soap *soap,
    // request parameters:
    _ns1__PayMoneyWithList*             ns1__PayMoneyWithList,
    // response parameters:
    _ns1__PayMoneyWithListResponse*     ns1__PayMoneyWithListResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	PayMoneyWithList document
//gsoap ns4  service method-encoding:	PayMoneyWithList literal
//gsoap ns4  service method-action:	PayMoneyWithList http://tempuri.org/PayMoneyWithList
int __ns4__PayMoneyWithList(
    _ns1__PayMoneyWithList*             ns1__PayMoneyWithList,	///< Request parameter
    _ns1__PayMoneyWithListResponse*     ns1__PayMoneyWithListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__RequstRollback                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__RequstRollback" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/RequstRollback"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__RequstRollback(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__RequstRollback*               ns1__RequstRollback,
    // response parameters:
    _ns1__RequstRollbackResponse*       ns1__RequstRollbackResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__RequstRollback(
    struct soap *soap,
    // request parameters:
    _ns1__RequstRollback*               ns1__RequstRollback,
    // response parameters:
    _ns1__RequstRollbackResponse*       ns1__RequstRollbackResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	RequstRollback document
//gsoap ns4  service method-encoding:	RequstRollback literal
//gsoap ns4  service method-action:	RequstRollback http://tempuri.org/RequstRollback
int __ns4__RequstRollback(
    _ns1__RequstRollback*               ns1__RequstRollback,	///< Request parameter
    _ns1__RequstRollbackResponse*       ns1__RequstRollbackResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__PayInternet                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__PayInternet" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayInternet"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__PayInternet(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayInternet*                  ns1__PayInternet,
    // response parameters:
    _ns1__PayInternetResponse*          ns1__PayInternetResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__PayInternet(
    struct soap *soap,
    // request parameters:
    _ns1__PayInternet*                  ns1__PayInternet,
    // response parameters:
    _ns1__PayInternetResponse*          ns1__PayInternetResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	PayInternet document
//gsoap ns4  service method-encoding:	PayInternet literal
//gsoap ns4  service method-action:	PayInternet http://tempuri.org/PayInternet
int __ns4__PayInternet(
    _ns1__PayInternet*                  ns1__PayInternet,	///< Request parameter
    _ns1__PayInternetResponse*          ns1__PayInternetResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__PayInternetWithList                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__PayInternetWithList" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayInternetWithList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__PayInternetWithList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayInternetWithList*          ns1__PayInternetWithList,
    // response parameters:
    _ns1__PayInternetWithListResponse*  ns1__PayInternetWithListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__PayInternetWithList(
    struct soap *soap,
    // request parameters:
    _ns1__PayInternetWithList*          ns1__PayInternetWithList,
    // response parameters:
    _ns1__PayInternetWithListResponse*  ns1__PayInternetWithListResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	PayInternetWithList document
//gsoap ns4  service method-encoding:	PayInternetWithList literal
//gsoap ns4  service method-action:	PayInternetWithList http://tempuri.org/PayInternetWithList
int __ns4__PayInternetWithList(
    _ns1__PayInternetWithList*          ns1__PayInternetWithList,	///< Request parameter
    _ns1__PayInternetWithListResponse*  ns1__PayInternetWithListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__RequstInternetRollback                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__RequstInternetRollback" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/RequstInternetRollback"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__RequstInternetRollback(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__RequstInternetRollback*       ns1__RequstInternetRollback,
    // response parameters:
    _ns1__RequstInternetRollbackResponse* ns1__RequstInternetRollbackResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__RequstInternetRollback(
    struct soap *soap,
    // request parameters:
    _ns1__RequstInternetRollback*       ns1__RequstInternetRollback,
    // response parameters:
    _ns1__RequstInternetRollbackResponse* ns1__RequstInternetRollbackResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	RequstInternetRollback document
//gsoap ns4  service method-encoding:	RequstInternetRollback literal
//gsoap ns4  service method-action:	RequstInternetRollback http://tempuri.org/RequstInternetRollback
int __ns4__RequstInternetRollback(
    _ns1__RequstInternetRollback*       ns1__RequstInternetRollback,	///< Request parameter
    _ns1__RequstInternetRollbackResponse* ns1__RequstInternetRollbackResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__PayGame                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__PayGame" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayGame"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__PayGame(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayGame*                      ns1__PayGame,
    // response parameters:
    _ns1__PayGameResponse*              ns1__PayGameResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__PayGame(
    struct soap *soap,
    // request parameters:
    _ns1__PayGame*                      ns1__PayGame,
    // response parameters:
    _ns1__PayGameResponse*              ns1__PayGameResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	PayGame document
//gsoap ns4  service method-encoding:	PayGame literal
//gsoap ns4  service method-action:	PayGame http://tempuri.org/PayGame
int __ns4__PayGame(
    _ns1__PayGame*                      ns1__PayGame,	///< Request parameter
    _ns1__PayGameResponse*              ns1__PayGameResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__PayPublicTel                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__PayPublicTel" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/PayPublicTel"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__PayPublicTel(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__PayPublicTel*                 ns1__PayPublicTel,
    // response parameters:
    _ns1__PayPublicTelResponse*         ns1__PayPublicTelResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__PayPublicTel(
    struct soap *soap,
    // request parameters:
    _ns1__PayPublicTel*                 ns1__PayPublicTel,
    // response parameters:
    _ns1__PayPublicTelResponse*         ns1__PayPublicTelResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	PayPublicTel document
//gsoap ns4  service method-encoding:	PayPublicTel literal
//gsoap ns4  service method-action:	PayPublicTel http://tempuri.org/PayPublicTel
int __ns4__PayPublicTel(
    _ns1__PayPublicTel*                 ns1__PayPublicTel,	///< Request parameter
    _ns1__PayPublicTelResponse*         ns1__PayPublicTelResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetPaymentRecord                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetPaymentRecord" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPaymentRecord"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetPaymentRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPaymentRecord*             ns1__GetPaymentRecord,
    // response parameters:
    _ns1__GetPaymentRecordResponse*     ns1__GetPaymentRecordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetPaymentRecord(
    struct soap *soap,
    // request parameters:
    _ns1__GetPaymentRecord*             ns1__GetPaymentRecord,
    // response parameters:
    _ns1__GetPaymentRecordResponse*     ns1__GetPaymentRecordResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetPaymentRecord document
//gsoap ns4  service method-encoding:	GetPaymentRecord literal
//gsoap ns4  service method-action:	GetPaymentRecord http://tempuri.org/GetPaymentRecord
int __ns4__GetPaymentRecord(
    _ns1__GetPaymentRecord*             ns1__GetPaymentRecord,	///< Request parameter
    _ns1__GetPaymentRecordResponse*     ns1__GetPaymentRecordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetPaymentItem                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetPaymentItem" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPaymentItem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetPaymentItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPaymentItem*               ns1__GetPaymentItem,
    // response parameters:
    _ns1__GetPaymentItemResponse*       ns1__GetPaymentItemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetPaymentItem(
    struct soap *soap,
    // request parameters:
    _ns1__GetPaymentItem*               ns1__GetPaymentItem,
    // response parameters:
    _ns1__GetPaymentItemResponse*       ns1__GetPaymentItemResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetPaymentItem document
//gsoap ns4  service method-encoding:	GetPaymentItem literal
//gsoap ns4  service method-action:	GetPaymentItem http://tempuri.org/GetPaymentItem
int __ns4__GetPaymentItem(
    _ns1__GetPaymentItem*               ns1__GetPaymentItem,	///< Request parameter
    _ns1__GetPaymentItemResponse*       ns1__GetPaymentItemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetTransactionByCondition                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetTransactionByCondition" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetTransactionByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetTransactionByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetTransactionByCondition*    ns1__GetTransactionByCondition,
    // response parameters:
    _ns1__GetTransactionByConditionResponse* ns1__GetTransactionByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetTransactionByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetTransactionByCondition*    ns1__GetTransactionByCondition,
    // response parameters:
    _ns1__GetTransactionByConditionResponse* ns1__GetTransactionByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetTransactionByCondition document
//gsoap ns4  service method-encoding:	GetTransactionByCondition literal
//gsoap ns4  service method-action:	GetTransactionByCondition http://tempuri.org/GetTransactionByCondition
int __ns4__GetTransactionByCondition(
    _ns1__GetTransactionByCondition*    ns1__GetTransactionByCondition,	///< Request parameter
    _ns1__GetTransactionByConditionResponse* ns1__GetTransactionByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetTransactionStaticsByCondition                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetTransactionStaticsByCondition" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetTransactionStaticsByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetTransactionStaticsByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetTransactionStaticsByCondition* ns1__GetTransactionStaticsByCondition,
    // response parameters:
    _ns1__GetTransactionStaticsByConditionResponse* ns1__GetTransactionStaticsByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetTransactionStaticsByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetTransactionStaticsByCondition* ns1__GetTransactionStaticsByCondition,
    // response parameters:
    _ns1__GetTransactionStaticsByConditionResponse* ns1__GetTransactionStaticsByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetTransactionStaticsByCondition document
//gsoap ns4  service method-encoding:	GetTransactionStaticsByCondition literal
//gsoap ns4  service method-action:	GetTransactionStaticsByCondition http://tempuri.org/GetTransactionStaticsByCondition
int __ns4__GetTransactionStaticsByCondition(
    _ns1__GetTransactionStaticsByCondition* ns1__GetTransactionStaticsByCondition,	///< Request parameter
    _ns1__GetTransactionStaticsByConditionResponse* ns1__GetTransactionStaticsByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetPaymentOrPaymentHistoryByCondition                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetPaymentOrPaymentHistoryByCondition" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPaymentOrPaymentHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetPaymentOrPaymentHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPaymentOrPaymentHistoryByCondition* ns1__GetPaymentOrPaymentHistoryByCondition,
    // response parameters:
    _ns1__GetPaymentOrPaymentHistoryByConditionResponse* ns1__GetPaymentOrPaymentHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetPaymentOrPaymentHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPaymentOrPaymentHistoryByCondition* ns1__GetPaymentOrPaymentHistoryByCondition,
    // response parameters:
    _ns1__GetPaymentOrPaymentHistoryByConditionResponse* ns1__GetPaymentOrPaymentHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetPaymentOrPaymentHistoryByCondition document
//gsoap ns4  service method-encoding:	GetPaymentOrPaymentHistoryByCondition literal
//gsoap ns4  service method-action:	GetPaymentOrPaymentHistoryByCondition http://tempuri.org/GetPaymentOrPaymentHistoryByCondition
int __ns4__GetPaymentOrPaymentHistoryByCondition(
    _ns1__GetPaymentOrPaymentHistoryByCondition* ns1__GetPaymentOrPaymentHistoryByCondition,	///< Request parameter
    _ns1__GetPaymentOrPaymentHistoryByConditionResponse* ns1__GetPaymentOrPaymentHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetPayInternetByCondition                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetPayInternetByCondition" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayInternetByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetPayInternetByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayInternetByCondition*    ns1__GetPayInternetByCondition,
    // response parameters:
    _ns1__GetPayInternetByConditionResponse* ns1__GetPayInternetByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetPayInternetByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayInternetByCondition*    ns1__GetPayInternetByCondition,
    // response parameters:
    _ns1__GetPayInternetByConditionResponse* ns1__GetPayInternetByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetPayInternetByCondition document
//gsoap ns4  service method-encoding:	GetPayInternetByCondition literal
//gsoap ns4  service method-action:	GetPayInternetByCondition http://tempuri.org/GetPayInternetByCondition
int __ns4__GetPayInternetByCondition(
    _ns1__GetPayInternetByCondition*    ns1__GetPayInternetByCondition,	///< Request parameter
    _ns1__GetPayInternetByConditionResponse* ns1__GetPayInternetByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetPayInternetHistoryByCondition                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetPayInternetHistoryByCondition" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayInternetHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetPayInternetHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayInternetHistoryByCondition* ns1__GetPayInternetHistoryByCondition,
    // response parameters:
    _ns1__GetPayInternetHistoryByConditionResponse* ns1__GetPayInternetHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetPayInternetHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayInternetHistoryByCondition* ns1__GetPayInternetHistoryByCondition,
    // response parameters:
    _ns1__GetPayInternetHistoryByConditionResponse* ns1__GetPayInternetHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetPayInternetHistoryByCondition document
//gsoap ns4  service method-encoding:	GetPayInternetHistoryByCondition literal
//gsoap ns4  service method-action:	GetPayInternetHistoryByCondition http://tempuri.org/GetPayInternetHistoryByCondition
int __ns4__GetPayInternetHistoryByCondition(
    _ns1__GetPayInternetHistoryByCondition* ns1__GetPayInternetHistoryByCondition,	///< Request parameter
    _ns1__GetPayInternetHistoryByConditionResponse* ns1__GetPayInternetHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetPayGameByCondition                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetPayGameByCondition" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayGameByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetPayGameByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayGameByCondition*        ns1__GetPayGameByCondition,
    // response parameters:
    _ns1__GetPayGameByConditionResponse* ns1__GetPayGameByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetPayGameByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayGameByCondition*        ns1__GetPayGameByCondition,
    // response parameters:
    _ns1__GetPayGameByConditionResponse* ns1__GetPayGameByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetPayGameByCondition document
//gsoap ns4  service method-encoding:	GetPayGameByCondition literal
//gsoap ns4  service method-action:	GetPayGameByCondition http://tempuri.org/GetPayGameByCondition
int __ns4__GetPayGameByCondition(
    _ns1__GetPayGameByCondition*        ns1__GetPayGameByCondition,	///< Request parameter
    _ns1__GetPayGameByConditionResponse* ns1__GetPayGameByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetPayGameHistoryByCondition                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetPayGameHistoryByCondition" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayGameHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetPayGameHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayGameHistoryByCondition* ns1__GetPayGameHistoryByCondition,
    // response parameters:
    _ns1__GetPayGameHistoryByConditionResponse* ns1__GetPayGameHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetPayGameHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayGameHistoryByCondition* ns1__GetPayGameHistoryByCondition,
    // response parameters:
    _ns1__GetPayGameHistoryByConditionResponse* ns1__GetPayGameHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetPayGameHistoryByCondition document
//gsoap ns4  service method-encoding:	GetPayGameHistoryByCondition literal
//gsoap ns4  service method-action:	GetPayGameHistoryByCondition http://tempuri.org/GetPayGameHistoryByCondition
int __ns4__GetPayGameHistoryByCondition(
    _ns1__GetPayGameHistoryByCondition* ns1__GetPayGameHistoryByCondition,	///< Request parameter
    _ns1__GetPayGameHistoryByConditionResponse* ns1__GetPayGameHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetPayPublicTelByCondition                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetPayPublicTelByCondition" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayPublicTelByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetPayPublicTelByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayPublicTelByCondition*   ns1__GetPayPublicTelByCondition,
    // response parameters:
    _ns1__GetPayPublicTelByConditionResponse* ns1__GetPayPublicTelByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetPayPublicTelByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayPublicTelByCondition*   ns1__GetPayPublicTelByCondition,
    // response parameters:
    _ns1__GetPayPublicTelByConditionResponse* ns1__GetPayPublicTelByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetPayPublicTelByCondition document
//gsoap ns4  service method-encoding:	GetPayPublicTelByCondition literal
//gsoap ns4  service method-action:	GetPayPublicTelByCondition http://tempuri.org/GetPayPublicTelByCondition
int __ns4__GetPayPublicTelByCondition(
    _ns1__GetPayPublicTelByCondition*   ns1__GetPayPublicTelByCondition,	///< Request parameter
    _ns1__GetPayPublicTelByConditionResponse* ns1__GetPayPublicTelByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns4__GetPayPublicTelHistoryByCondition                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns4__GetPayPublicTelHistoryByCondition" of service binding "PaymentFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPayPublicTelHistoryByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns4__GetPayPublicTelHistoryByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPayPublicTelHistoryByCondition* ns1__GetPayPublicTelHistoryByCondition,
    // response parameters:
    _ns1__GetPayPublicTelHistoryByConditionResponse* ns1__GetPayPublicTelHistoryByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns4__GetPayPublicTelHistoryByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPayPublicTelHistoryByCondition* ns1__GetPayPublicTelHistoryByCondition,
    // response parameters:
    _ns1__GetPayPublicTelHistoryByConditionResponse* ns1__GetPayPublicTelHistoryByConditionResponse
  );
@endcode

C++ proxy class (defined in soapPaymentFunctionWebServiceSoap12Proxy.h):
@code
  class PaymentFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapPaymentFunctionWebServiceSoap12Service.h):
@code
  class PaymentFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns4  service method-style:	GetPayPublicTelHistoryByCondition document
//gsoap ns4  service method-encoding:	GetPayPublicTelHistoryByCondition literal
//gsoap ns4  service method-action:	GetPayPublicTelHistoryByCondition http://tempuri.org/GetPayPublicTelHistoryByCondition
int __ns4__GetPayPublicTelHistoryByCondition(
    _ns1__GetPayPublicTelHistoryByCondition* ns1__GetPayPublicTelHistoryByCondition,	///< Request parameter
    _ns1__GetPayPublicTelHistoryByConditionResponse* ns1__GetPayPublicTelHistoryByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   UserFunctionWebServiceSoap                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__HelloWorld                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__HelloWorld" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/HelloWorld"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__HelloWorld(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__HelloWorld*                   ns1__HelloWorld,
    // response parameters:
    _ns1__HelloWorldResponse*           ns1__HelloWorldResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__HelloWorld(
    struct soap *soap,
    // request parameters:
    _ns1__HelloWorld*                   ns1__HelloWorld,
    // response parameters:
    _ns1__HelloWorldResponse*           ns1__HelloWorldResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	HelloWorld document
//gsoap ns5  service method-encoding:	HelloWorld literal
//gsoap ns5  service method-action:	HelloWorld http://tempuri.org/HelloWorld
int __ns5__HelloWorld(
    _ns1__HelloWorld*                   ns1__HelloWorld,	///< Request parameter
    _ns1__HelloWorldResponse*           ns1__HelloWorldResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__loggout                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__loggout" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/loggout"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__loggout(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__loggout*                      ns1__loggout,
    // response parameters:
    _ns1__loggoutResponse*              ns1__loggoutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__loggout(
    struct soap *soap,
    // request parameters:
    _ns1__loggout*                      ns1__loggout,
    // response parameters:
    _ns1__loggoutResponse*              ns1__loggoutResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	loggout document
//gsoap ns5  service method-encoding:	loggout literal
//gsoap ns5  service method-action:	loggout http://tempuri.org/loggout
int __ns5__loggout(
    _ns1__loggout*                      ns1__loggout,	///< Request parameter
    _ns1__loggoutResponse*              ns1__loggoutResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__TestLogin                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__TestLogin" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/TestLogin"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__TestLogin(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__TestLogin*                    ns1__TestLogin,
    // response parameters:
    _ns1__TestLoginResponse*            ns1__TestLoginResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__TestLogin(
    struct soap *soap,
    // request parameters:
    _ns1__TestLogin*                    ns1__TestLogin,
    // response parameters:
    _ns1__TestLoginResponse*            ns1__TestLoginResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	TestLogin document
//gsoap ns5  service method-encoding:	TestLogin literal
//gsoap ns5  service method-action:	TestLogin http://tempuri.org/TestLogin
int __ns5__TestLogin(
    _ns1__TestLogin*                    ns1__TestLogin,	///< Request parameter
    _ns1__TestLoginResponse*            ns1__TestLoginResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetUserInfo                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__GetUserInfo" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetUserInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetUserInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetUserInfo*                  ns1__GetUserInfo,
    // response parameters:
    _ns1__GetUserInfoResponse*          ns1__GetUserInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetUserInfo(
    struct soap *soap,
    // request parameters:
    _ns1__GetUserInfo*                  ns1__GetUserInfo,
    // response parameters:
    _ns1__GetUserInfoResponse*          ns1__GetUserInfoResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	GetUserInfo document
//gsoap ns5  service method-encoding:	GetUserInfo literal
//gsoap ns5  service method-action:	GetUserInfo http://tempuri.org/GetUserInfo
int __ns5__GetUserInfo(
    _ns1__GetUserInfo*                  ns1__GetUserInfo,	///< Request parameter
    _ns1__GetUserInfoResponse*          ns1__GetUserInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__RegisterUser                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__RegisterUser" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/RegisterUser"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__RegisterUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__RegisterUser*                 ns1__RegisterUser,
    // response parameters:
    _ns1__RegisterUserResponse*         ns1__RegisterUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__RegisterUser(
    struct soap *soap,
    // request parameters:
    _ns1__RegisterUser*                 ns1__RegisterUser,
    // response parameters:
    _ns1__RegisterUserResponse*         ns1__RegisterUserResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	RegisterUser document
//gsoap ns5  service method-encoding:	RegisterUser literal
//gsoap ns5  service method-action:	RegisterUser http://tempuri.org/RegisterUser
int __ns5__RegisterUser(
    _ns1__RegisterUser*                 ns1__RegisterUser,	///< Request parameter
    _ns1__RegisterUserResponse*         ns1__RegisterUserResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__AlterPsw                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__AlterPsw" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AlterPsw"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__AlterPsw(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AlterPsw*                     ns1__AlterPsw,
    // response parameters:
    _ns1__AlterPswResponse*             ns1__AlterPswResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__AlterPsw(
    struct soap *soap,
    // request parameters:
    _ns1__AlterPsw*                     ns1__AlterPsw,
    // response parameters:
    _ns1__AlterPswResponse*             ns1__AlterPswResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	AlterPsw document
//gsoap ns5  service method-encoding:	AlterPsw literal
//gsoap ns5  service method-action:	AlterPsw http://tempuri.org/AlterPsw
int __ns5__AlterPsw(
    _ns1__AlterPsw*                     ns1__AlterPsw,	///< Request parameter
    _ns1__AlterPswResponse*             ns1__AlterPswResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__AlterUserInfo                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__AlterUserInfo" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AlterUserInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__AlterUserInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AlterUserInfo*                ns1__AlterUserInfo,
    // response parameters:
    _ns1__AlterUserInfoResponse*        ns1__AlterUserInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__AlterUserInfo(
    struct soap *soap,
    // request parameters:
    _ns1__AlterUserInfo*                ns1__AlterUserInfo,
    // response parameters:
    _ns1__AlterUserInfoResponse*        ns1__AlterUserInfoResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	AlterUserInfo document
//gsoap ns5  service method-encoding:	AlterUserInfo literal
//gsoap ns5  service method-action:	AlterUserInfo http://tempuri.org/AlterUserInfo
int __ns5__AlterUserInfo(
    _ns1__AlterUserInfo*                ns1__AlterUserInfo,	///< Request parameter
    _ns1__AlterUserInfoResponse*        ns1__AlterUserInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__AddAcountPayment                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__AddAcountPayment" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddAcountPayment"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__AddAcountPayment(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddAcountPayment*             ns1__AddAcountPayment,
    // response parameters:
    _ns1__AddAcountPaymentResponse*     ns1__AddAcountPaymentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__AddAcountPayment(
    struct soap *soap,
    // request parameters:
    _ns1__AddAcountPayment*             ns1__AddAcountPayment,
    // response parameters:
    _ns1__AddAcountPaymentResponse*     ns1__AddAcountPaymentResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	AddAcountPayment document
//gsoap ns5  service method-encoding:	AddAcountPayment literal
//gsoap ns5  service method-action:	AddAcountPayment http://tempuri.org/AddAcountPayment
int __ns5__AddAcountPayment(
    _ns1__AddAcountPayment*             ns1__AddAcountPayment,	///< Request parameter
    _ns1__AddAcountPaymentResponse*     ns1__AddAcountPaymentResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetReturnInfo                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__GetReturnInfo" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetReturnInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetReturnInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetReturnInfo*                ns1__GetReturnInfo,
    // response parameters:
    _ns1__GetReturnInfoResponse*        ns1__GetReturnInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetReturnInfo(
    struct soap *soap,
    // request parameters:
    _ns1__GetReturnInfo*                ns1__GetReturnInfo,
    // response parameters:
    _ns1__GetReturnInfoResponse*        ns1__GetReturnInfoResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	GetReturnInfo document
//gsoap ns5  service method-encoding:	GetReturnInfo literal
//gsoap ns5  service method-action:	GetReturnInfo http://tempuri.org/GetReturnInfo
int __ns5__GetReturnInfo(
    _ns1__GetReturnInfo*                ns1__GetReturnInfo,	///< Request parameter
    _ns1__GetReturnInfoResponse*        ns1__GetReturnInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__CharegeReturnedMoney                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__CharegeReturnedMoney" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/CharegeReturnedMoney"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__CharegeReturnedMoney(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CharegeReturnedMoney*         ns1__CharegeReturnedMoney,
    // response parameters:
    _ns1__CharegeReturnedMoneyResponse* ns1__CharegeReturnedMoneyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__CharegeReturnedMoney(
    struct soap *soap,
    // request parameters:
    _ns1__CharegeReturnedMoney*         ns1__CharegeReturnedMoney,
    // response parameters:
    _ns1__CharegeReturnedMoneyResponse* ns1__CharegeReturnedMoneyResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	CharegeReturnedMoney document
//gsoap ns5  service method-encoding:	CharegeReturnedMoney literal
//gsoap ns5  service method-action:	CharegeReturnedMoney http://tempuri.org/CharegeReturnedMoney
int __ns5__CharegeReturnedMoney(
    _ns1__CharegeReturnedMoney*         ns1__CharegeReturnedMoney,	///< Request parameter
    _ns1__CharegeReturnedMoneyResponse* ns1__CharegeReturnedMoneyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetWorkNameList                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__GetWorkNameList" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetWorkNameList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetWorkNameList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetWorkNameList*              ns1__GetWorkNameList,
    // response parameters:
    _ns1__GetWorkNameListResponse*      ns1__GetWorkNameListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetWorkNameList(
    struct soap *soap,
    // request parameters:
    _ns1__GetWorkNameList*              ns1__GetWorkNameList,
    // response parameters:
    _ns1__GetWorkNameListResponse*      ns1__GetWorkNameListResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	GetWorkNameList document
//gsoap ns5  service method-encoding:	GetWorkNameList literal
//gsoap ns5  service method-action:	GetWorkNameList http://tempuri.org/GetWorkNameList
int __ns5__GetWorkNameList(
    _ns1__GetWorkNameList*              ns1__GetWorkNameList,	///< Request parameter
    _ns1__GetWorkNameListResponse*      ns1__GetWorkNameListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetUserFunction                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__GetUserFunction" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetUserFunction"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetUserFunction(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetUserFunction*              ns1__GetUserFunction,
    // response parameters:
    _ns1__GetUserFunctionResponse*      ns1__GetUserFunctionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetUserFunction(
    struct soap *soap,
    // request parameters:
    _ns1__GetUserFunction*              ns1__GetUserFunction,
    // response parameters:
    _ns1__GetUserFunctionResponse*      ns1__GetUserFunctionResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	GetUserFunction document
//gsoap ns5  service method-encoding:	GetUserFunction literal
//gsoap ns5  service method-action:	GetUserFunction http://tempuri.org/GetUserFunction
int __ns5__GetUserFunction(
    _ns1__GetUserFunction*              ns1__GetUserFunction,	///< Request parameter
    _ns1__GetUserFunctionResponse*      ns1__GetUserFunctionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetReturnRecord                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__GetReturnRecord" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetReturnRecord"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetReturnRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetReturnRecord*              ns1__GetReturnRecord,
    // response parameters:
    _ns1__GetReturnRecordResponse*      ns1__GetReturnRecordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetReturnRecord(
    struct soap *soap,
    // request parameters:
    _ns1__GetReturnRecord*              ns1__GetReturnRecord,
    // response parameters:
    _ns1__GetReturnRecordResponse*      ns1__GetReturnRecordResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	GetReturnRecord document
//gsoap ns5  service method-encoding:	GetReturnRecord literal
//gsoap ns5  service method-action:	GetReturnRecord http://tempuri.org/GetReturnRecord
int __ns5__GetReturnRecord(
    _ns1__GetReturnRecord*              ns1__GetReturnRecord,	///< Request parameter
    _ns1__GetReturnRecordResponse*      ns1__GetReturnRecordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetReturnRecordDeal                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__GetReturnRecordDeal" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetReturnRecordDeal"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetReturnRecordDeal(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetReturnRecordDeal*          ns1__GetReturnRecordDeal,
    // response parameters:
    _ns1__GetReturnRecordDealResponse*  ns1__GetReturnRecordDealResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetReturnRecordDeal(
    struct soap *soap,
    // request parameters:
    _ns1__GetReturnRecordDeal*          ns1__GetReturnRecordDeal,
    // response parameters:
    _ns1__GetReturnRecordDealResponse*  ns1__GetReturnRecordDealResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	GetReturnRecordDeal document
//gsoap ns5  service method-encoding:	GetReturnRecordDeal literal
//gsoap ns5  service method-action:	GetReturnRecordDeal http://tempuri.org/GetReturnRecordDeal
int __ns5__GetReturnRecordDeal(
    _ns1__GetReturnRecordDeal*          ns1__GetReturnRecordDeal,	///< Request parameter
    _ns1__GetReturnRecordDealResponse*  ns1__GetReturnRecordDealResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns5__GetAcountPaymentRecord                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns5__GetAcountPaymentRecord" of service binding "UserFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetAcountPaymentRecord"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns5__GetAcountPaymentRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetAcountPaymentRecord*       ns1__GetAcountPaymentRecord,
    // response parameters:
    _ns1__GetAcountPaymentRecordResponse* ns1__GetAcountPaymentRecordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns5__GetAcountPaymentRecord(
    struct soap *soap,
    // request parameters:
    _ns1__GetAcountPaymentRecord*       ns1__GetAcountPaymentRecord,
    // response parameters:
    _ns1__GetAcountPaymentRecordResponse* ns1__GetAcountPaymentRecordResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoapProxy.h):
@code
  class UserFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoapService.h):
@code
  class UserFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns5  service method-style:	GetAcountPaymentRecord document
//gsoap ns5  service method-encoding:	GetAcountPaymentRecord literal
//gsoap ns5  service method-action:	GetAcountPaymentRecord http://tempuri.org/GetAcountPaymentRecord
int __ns5__GetAcountPaymentRecord(
    _ns1__GetAcountPaymentRecord*       ns1__GetAcountPaymentRecord,	///< Request parameter
    _ns1__GetAcountPaymentRecordResponse* ns1__GetAcountPaymentRecordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   UserFunctionWebServiceSoap12                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__HelloWorld                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__HelloWorld" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/HelloWorld"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__HelloWorld(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__HelloWorld*                   ns1__HelloWorld,
    // response parameters:
    _ns1__HelloWorldResponse*           ns1__HelloWorldResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__HelloWorld(
    struct soap *soap,
    // request parameters:
    _ns1__HelloWorld*                   ns1__HelloWorld,
    // response parameters:
    _ns1__HelloWorldResponse*           ns1__HelloWorldResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	HelloWorld document
//gsoap ns6  service method-encoding:	HelloWorld literal
//gsoap ns6  service method-action:	HelloWorld http://tempuri.org/HelloWorld
int __ns6__HelloWorld(
    _ns1__HelloWorld*                   ns1__HelloWorld,	///< Request parameter
    _ns1__HelloWorldResponse*           ns1__HelloWorldResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__loggout                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__loggout" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/loggout"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__loggout(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__loggout*                      ns1__loggout,
    // response parameters:
    _ns1__loggoutResponse*              ns1__loggoutResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__loggout(
    struct soap *soap,
    // request parameters:
    _ns1__loggout*                      ns1__loggout,
    // response parameters:
    _ns1__loggoutResponse*              ns1__loggoutResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	loggout document
//gsoap ns6  service method-encoding:	loggout literal
//gsoap ns6  service method-action:	loggout http://tempuri.org/loggout
int __ns6__loggout(
    _ns1__loggout*                      ns1__loggout,	///< Request parameter
    _ns1__loggoutResponse*              ns1__loggoutResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__TestLogin                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__TestLogin" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/TestLogin"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__TestLogin(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__TestLogin*                    ns1__TestLogin,
    // response parameters:
    _ns1__TestLoginResponse*            ns1__TestLoginResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__TestLogin(
    struct soap *soap,
    // request parameters:
    _ns1__TestLogin*                    ns1__TestLogin,
    // response parameters:
    _ns1__TestLoginResponse*            ns1__TestLoginResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	TestLogin document
//gsoap ns6  service method-encoding:	TestLogin literal
//gsoap ns6  service method-action:	TestLogin http://tempuri.org/TestLogin
int __ns6__TestLogin(
    _ns1__TestLogin*                    ns1__TestLogin,	///< Request parameter
    _ns1__TestLoginResponse*            ns1__TestLoginResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetUserInfo                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__GetUserInfo" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetUserInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetUserInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetUserInfo*                  ns1__GetUserInfo,
    // response parameters:
    _ns1__GetUserInfoResponse*          ns1__GetUserInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetUserInfo(
    struct soap *soap,
    // request parameters:
    _ns1__GetUserInfo*                  ns1__GetUserInfo,
    // response parameters:
    _ns1__GetUserInfoResponse*          ns1__GetUserInfoResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	GetUserInfo document
//gsoap ns6  service method-encoding:	GetUserInfo literal
//gsoap ns6  service method-action:	GetUserInfo http://tempuri.org/GetUserInfo
int __ns6__GetUserInfo(
    _ns1__GetUserInfo*                  ns1__GetUserInfo,	///< Request parameter
    _ns1__GetUserInfoResponse*          ns1__GetUserInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__RegisterUser                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__RegisterUser" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/RegisterUser"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__RegisterUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__RegisterUser*                 ns1__RegisterUser,
    // response parameters:
    _ns1__RegisterUserResponse*         ns1__RegisterUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__RegisterUser(
    struct soap *soap,
    // request parameters:
    _ns1__RegisterUser*                 ns1__RegisterUser,
    // response parameters:
    _ns1__RegisterUserResponse*         ns1__RegisterUserResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	RegisterUser document
//gsoap ns6  service method-encoding:	RegisterUser literal
//gsoap ns6  service method-action:	RegisterUser http://tempuri.org/RegisterUser
int __ns6__RegisterUser(
    _ns1__RegisterUser*                 ns1__RegisterUser,	///< Request parameter
    _ns1__RegisterUserResponse*         ns1__RegisterUserResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__AlterPsw                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__AlterPsw" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AlterPsw"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__AlterPsw(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AlterPsw*                     ns1__AlterPsw,
    // response parameters:
    _ns1__AlterPswResponse*             ns1__AlterPswResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__AlterPsw(
    struct soap *soap,
    // request parameters:
    _ns1__AlterPsw*                     ns1__AlterPsw,
    // response parameters:
    _ns1__AlterPswResponse*             ns1__AlterPswResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	AlterPsw document
//gsoap ns6  service method-encoding:	AlterPsw literal
//gsoap ns6  service method-action:	AlterPsw http://tempuri.org/AlterPsw
int __ns6__AlterPsw(
    _ns1__AlterPsw*                     ns1__AlterPsw,	///< Request parameter
    _ns1__AlterPswResponse*             ns1__AlterPswResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__AlterUserInfo                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__AlterUserInfo" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AlterUserInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__AlterUserInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AlterUserInfo*                ns1__AlterUserInfo,
    // response parameters:
    _ns1__AlterUserInfoResponse*        ns1__AlterUserInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__AlterUserInfo(
    struct soap *soap,
    // request parameters:
    _ns1__AlterUserInfo*                ns1__AlterUserInfo,
    // response parameters:
    _ns1__AlterUserInfoResponse*        ns1__AlterUserInfoResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	AlterUserInfo document
//gsoap ns6  service method-encoding:	AlterUserInfo literal
//gsoap ns6  service method-action:	AlterUserInfo http://tempuri.org/AlterUserInfo
int __ns6__AlterUserInfo(
    _ns1__AlterUserInfo*                ns1__AlterUserInfo,	///< Request parameter
    _ns1__AlterUserInfoResponse*        ns1__AlterUserInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__AddAcountPayment                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__AddAcountPayment" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddAcountPayment"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__AddAcountPayment(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddAcountPayment*             ns1__AddAcountPayment,
    // response parameters:
    _ns1__AddAcountPaymentResponse*     ns1__AddAcountPaymentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__AddAcountPayment(
    struct soap *soap,
    // request parameters:
    _ns1__AddAcountPayment*             ns1__AddAcountPayment,
    // response parameters:
    _ns1__AddAcountPaymentResponse*     ns1__AddAcountPaymentResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	AddAcountPayment document
//gsoap ns6  service method-encoding:	AddAcountPayment literal
//gsoap ns6  service method-action:	AddAcountPayment http://tempuri.org/AddAcountPayment
int __ns6__AddAcountPayment(
    _ns1__AddAcountPayment*             ns1__AddAcountPayment,	///< Request parameter
    _ns1__AddAcountPaymentResponse*     ns1__AddAcountPaymentResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetReturnInfo                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__GetReturnInfo" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetReturnInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetReturnInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetReturnInfo*                ns1__GetReturnInfo,
    // response parameters:
    _ns1__GetReturnInfoResponse*        ns1__GetReturnInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetReturnInfo(
    struct soap *soap,
    // request parameters:
    _ns1__GetReturnInfo*                ns1__GetReturnInfo,
    // response parameters:
    _ns1__GetReturnInfoResponse*        ns1__GetReturnInfoResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	GetReturnInfo document
//gsoap ns6  service method-encoding:	GetReturnInfo literal
//gsoap ns6  service method-action:	GetReturnInfo http://tempuri.org/GetReturnInfo
int __ns6__GetReturnInfo(
    _ns1__GetReturnInfo*                ns1__GetReturnInfo,	///< Request parameter
    _ns1__GetReturnInfoResponse*        ns1__GetReturnInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__CharegeReturnedMoney                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__CharegeReturnedMoney" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/CharegeReturnedMoney"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__CharegeReturnedMoney(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__CharegeReturnedMoney*         ns1__CharegeReturnedMoney,
    // response parameters:
    _ns1__CharegeReturnedMoneyResponse* ns1__CharegeReturnedMoneyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__CharegeReturnedMoney(
    struct soap *soap,
    // request parameters:
    _ns1__CharegeReturnedMoney*         ns1__CharegeReturnedMoney,
    // response parameters:
    _ns1__CharegeReturnedMoneyResponse* ns1__CharegeReturnedMoneyResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	CharegeReturnedMoney document
//gsoap ns6  service method-encoding:	CharegeReturnedMoney literal
//gsoap ns6  service method-action:	CharegeReturnedMoney http://tempuri.org/CharegeReturnedMoney
int __ns6__CharegeReturnedMoney(
    _ns1__CharegeReturnedMoney*         ns1__CharegeReturnedMoney,	///< Request parameter
    _ns1__CharegeReturnedMoneyResponse* ns1__CharegeReturnedMoneyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetWorkNameList                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__GetWorkNameList" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetWorkNameList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetWorkNameList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetWorkNameList*              ns1__GetWorkNameList,
    // response parameters:
    _ns1__GetWorkNameListResponse*      ns1__GetWorkNameListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetWorkNameList(
    struct soap *soap,
    // request parameters:
    _ns1__GetWorkNameList*              ns1__GetWorkNameList,
    // response parameters:
    _ns1__GetWorkNameListResponse*      ns1__GetWorkNameListResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	GetWorkNameList document
//gsoap ns6  service method-encoding:	GetWorkNameList literal
//gsoap ns6  service method-action:	GetWorkNameList http://tempuri.org/GetWorkNameList
int __ns6__GetWorkNameList(
    _ns1__GetWorkNameList*              ns1__GetWorkNameList,	///< Request parameter
    _ns1__GetWorkNameListResponse*      ns1__GetWorkNameListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetUserFunction                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__GetUserFunction" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetUserFunction"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetUserFunction(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetUserFunction*              ns1__GetUserFunction,
    // response parameters:
    _ns1__GetUserFunctionResponse*      ns1__GetUserFunctionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetUserFunction(
    struct soap *soap,
    // request parameters:
    _ns1__GetUserFunction*              ns1__GetUserFunction,
    // response parameters:
    _ns1__GetUserFunctionResponse*      ns1__GetUserFunctionResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	GetUserFunction document
//gsoap ns6  service method-encoding:	GetUserFunction literal
//gsoap ns6  service method-action:	GetUserFunction http://tempuri.org/GetUserFunction
int __ns6__GetUserFunction(
    _ns1__GetUserFunction*              ns1__GetUserFunction,	///< Request parameter
    _ns1__GetUserFunctionResponse*      ns1__GetUserFunctionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetReturnRecord                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__GetReturnRecord" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetReturnRecord"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetReturnRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetReturnRecord*              ns1__GetReturnRecord,
    // response parameters:
    _ns1__GetReturnRecordResponse*      ns1__GetReturnRecordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetReturnRecord(
    struct soap *soap,
    // request parameters:
    _ns1__GetReturnRecord*              ns1__GetReturnRecord,
    // response parameters:
    _ns1__GetReturnRecordResponse*      ns1__GetReturnRecordResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	GetReturnRecord document
//gsoap ns6  service method-encoding:	GetReturnRecord literal
//gsoap ns6  service method-action:	GetReturnRecord http://tempuri.org/GetReturnRecord
int __ns6__GetReturnRecord(
    _ns1__GetReturnRecord*              ns1__GetReturnRecord,	///< Request parameter
    _ns1__GetReturnRecordResponse*      ns1__GetReturnRecordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetReturnRecordDeal                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__GetReturnRecordDeal" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetReturnRecordDeal"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetReturnRecordDeal(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetReturnRecordDeal*          ns1__GetReturnRecordDeal,
    // response parameters:
    _ns1__GetReturnRecordDealResponse*  ns1__GetReturnRecordDealResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetReturnRecordDeal(
    struct soap *soap,
    // request parameters:
    _ns1__GetReturnRecordDeal*          ns1__GetReturnRecordDeal,
    // response parameters:
    _ns1__GetReturnRecordDealResponse*  ns1__GetReturnRecordDealResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	GetReturnRecordDeal document
//gsoap ns6  service method-encoding:	GetReturnRecordDeal literal
//gsoap ns6  service method-action:	GetReturnRecordDeal http://tempuri.org/GetReturnRecordDeal
int __ns6__GetReturnRecordDeal(
    _ns1__GetReturnRecordDeal*          ns1__GetReturnRecordDeal,	///< Request parameter
    _ns1__GetReturnRecordDealResponse*  ns1__GetReturnRecordDealResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns6__GetAcountPaymentRecord                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns6__GetAcountPaymentRecord" of service binding "UserFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetAcountPaymentRecord"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns6__GetAcountPaymentRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetAcountPaymentRecord*       ns1__GetAcountPaymentRecord,
    // response parameters:
    _ns1__GetAcountPaymentRecordResponse* ns1__GetAcountPaymentRecordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns6__GetAcountPaymentRecord(
    struct soap *soap,
    // request parameters:
    _ns1__GetAcountPaymentRecord*       ns1__GetAcountPaymentRecord,
    // response parameters:
    _ns1__GetAcountPaymentRecordResponse* ns1__GetAcountPaymentRecordResponse
  );
@endcode

C++ proxy class (defined in soapUserFunctionWebServiceSoap12Proxy.h):
@code
  class UserFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUserFunctionWebServiceSoap12Service.h):
@code
  class UserFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns6  service method-style:	GetAcountPaymentRecord document
//gsoap ns6  service method-encoding:	GetAcountPaymentRecord literal
//gsoap ns6  service method-action:	GetAcountPaymentRecord http://tempuri.org/GetAcountPaymentRecord
int __ns6__GetAcountPaymentRecord(
    _ns1__GetAcountPaymentRecord*       ns1__GetAcountPaymentRecord,	///< Request parameter
    _ns1__GetAcountPaymentRecordResponse* ns1__GetAcountPaymentRecordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   UtilFunctionWebServiceSoap                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetDicContentByCondition                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetDicContentByCondition" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetDicContentByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetDicContentByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetDicContentByCondition*     ns1__GetDicContentByCondition,
    // response parameters:
    _ns1__GetDicContentByConditionResponse* ns1__GetDicContentByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetDicContentByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetDicContentByCondition*     ns1__GetDicContentByCondition,
    // response parameters:
    _ns1__GetDicContentByConditionResponse* ns1__GetDicContentByConditionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetDicContentByCondition document
//gsoap ns7  service method-encoding:	GetDicContentByCondition literal
//gsoap ns7  service method-action:	GetDicContentByCondition http://tempuri.org/GetDicContentByCondition
int __ns7__GetDicContentByCondition(
    _ns1__GetDicContentByCondition*     ns1__GetDicContentByCondition,	///< Request parameter
    _ns1__GetDicContentByConditionResponse* ns1__GetDicContentByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetAllCategory                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetAllCategory" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetAllCategory"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetAllCategory(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetAllCategory*               ns1__GetAllCategory,
    // response parameters:
    _ns1__GetAllCategoryResponse*       ns1__GetAllCategoryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetAllCategory(
    struct soap *soap,
    // request parameters:
    _ns1__GetAllCategory*               ns1__GetAllCategory,
    // response parameters:
    _ns1__GetAllCategoryResponse*       ns1__GetAllCategoryResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetAllCategory document
//gsoap ns7  service method-encoding:	GetAllCategory literal
//gsoap ns7  service method-action:	GetAllCategory http://tempuri.org/GetAllCategory
int __ns7__GetAllCategory(
    _ns1__GetAllCategory*               ns1__GetAllCategory,	///< Request parameter
    _ns1__GetAllCategoryResponse*       ns1__GetAllCategoryResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__InsertDicContent                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__InsertDicContent" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/InsertDicContent"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__InsertDicContent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__InsertDicContent*             ns1__InsertDicContent,
    // response parameters:
    _ns1__InsertDicContentResponse*     ns1__InsertDicContentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__InsertDicContent(
    struct soap *soap,
    // request parameters:
    _ns1__InsertDicContent*             ns1__InsertDicContent,
    // response parameters:
    _ns1__InsertDicContentResponse*     ns1__InsertDicContentResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	InsertDicContent document
//gsoap ns7  service method-encoding:	InsertDicContent literal
//gsoap ns7  service method-action:	InsertDicContent http://tempuri.org/InsertDicContent
int __ns7__InsertDicContent(
    _ns1__InsertDicContent*             ns1__InsertDicContent,	///< Request parameter
    _ns1__InsertDicContentResponse*     ns1__InsertDicContentResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__UpdateDicContent                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__UpdateDicContent" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateDicContent"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__UpdateDicContent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateDicContent*             ns1__UpdateDicContent,
    // response parameters:
    _ns1__UpdateDicContentResponse*     ns1__UpdateDicContentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__UpdateDicContent(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateDicContent*             ns1__UpdateDicContent,
    // response parameters:
    _ns1__UpdateDicContentResponse*     ns1__UpdateDicContentResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	UpdateDicContent document
//gsoap ns7  service method-encoding:	UpdateDicContent literal
//gsoap ns7  service method-action:	UpdateDicContent http://tempuri.org/UpdateDicContent
int __ns7__UpdateDicContent(
    _ns1__UpdateDicContent*             ns1__UpdateDicContent,	///< Request parameter
    _ns1__UpdateDicContentResponse*     ns1__UpdateDicContentResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__DeleteDicContent                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__DeleteDicContent" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/DeleteDicContent"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__DeleteDicContent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeleteDicContent*             ns1__DeleteDicContent,
    // response parameters:
    _ns1__DeleteDicContentResponse*     ns1__DeleteDicContentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__DeleteDicContent(
    struct soap *soap,
    // request parameters:
    _ns1__DeleteDicContent*             ns1__DeleteDicContent,
    // response parameters:
    _ns1__DeleteDicContentResponse*     ns1__DeleteDicContentResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	DeleteDicContent document
//gsoap ns7  service method-encoding:	DeleteDicContent literal
//gsoap ns7  service method-action:	DeleteDicContent http://tempuri.org/DeleteDicContent
int __ns7__DeleteDicContent(
    _ns1__DeleteDicContent*             ns1__DeleteDicContent,	///< Request parameter
    _ns1__DeleteDicContentResponse*     ns1__DeleteDicContentResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__UpdateDicContentByCategory                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__UpdateDicContentByCategory" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateDicContentByCategory"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__UpdateDicContentByCategory(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateDicContentByCategory*   ns1__UpdateDicContentByCategory,
    // response parameters:
    _ns1__UpdateDicContentByCategoryResponse* ns1__UpdateDicContentByCategoryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__UpdateDicContentByCategory(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateDicContentByCategory*   ns1__UpdateDicContentByCategory,
    // response parameters:
    _ns1__UpdateDicContentByCategoryResponse* ns1__UpdateDicContentByCategoryResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	UpdateDicContentByCategory document
//gsoap ns7  service method-encoding:	UpdateDicContentByCategory literal
//gsoap ns7  service method-action:	UpdateDicContentByCategory http://tempuri.org/UpdateDicContentByCategory
int __ns7__UpdateDicContentByCategory(
    _ns1__UpdateDicContentByCategory*   ns1__UpdateDicContentByCategory,	///< Request parameter
    _ns1__UpdateDicContentByCategoryResponse* ns1__UpdateDicContentByCategoryResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetFunctionList                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetFunctionList" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetFunctionList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetFunctionList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetFunctionList*              ns1__GetFunctionList,
    // response parameters:
    _ns1__GetFunctionListResponse*      ns1__GetFunctionListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetFunctionList(
    struct soap *soap,
    // request parameters:
    _ns1__GetFunctionList*              ns1__GetFunctionList,
    // response parameters:
    _ns1__GetFunctionListResponse*      ns1__GetFunctionListResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetFunctionList document
//gsoap ns7  service method-encoding:	GetFunctionList literal
//gsoap ns7  service method-action:	GetFunctionList http://tempuri.org/GetFunctionList
int __ns7__GetFunctionList(
    _ns1__GetFunctionList*              ns1__GetFunctionList,	///< Request parameter
    _ns1__GetFunctionListResponse*      ns1__GetFunctionListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__UpdateUserFunctionList                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__UpdateUserFunctionList" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateUserFunctionList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__UpdateUserFunctionList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateUserFunctionList*       ns1__UpdateUserFunctionList,
    // response parameters:
    _ns1__UpdateUserFunctionListResponse* ns1__UpdateUserFunctionListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__UpdateUserFunctionList(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateUserFunctionList*       ns1__UpdateUserFunctionList,
    // response parameters:
    _ns1__UpdateUserFunctionListResponse* ns1__UpdateUserFunctionListResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	UpdateUserFunctionList document
//gsoap ns7  service method-encoding:	UpdateUserFunctionList literal
//gsoap ns7  service method-action:	UpdateUserFunctionList http://tempuri.org/UpdateUserFunctionList
int __ns7__UpdateUserFunctionList(
    _ns1__UpdateUserFunctionList*       ns1__UpdateUserFunctionList,	///< Request parameter
    _ns1__UpdateUserFunctionListResponse* ns1__UpdateUserFunctionListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__UpdateFunctionRight                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__UpdateFunctionRight" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateFunctionRight"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__UpdateFunctionRight(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateFunctionRight*          ns1__UpdateFunctionRight,
    // response parameters:
    _ns1__UpdateFunctionRightResponse*  ns1__UpdateFunctionRightResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__UpdateFunctionRight(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateFunctionRight*          ns1__UpdateFunctionRight,
    // response parameters:
    _ns1__UpdateFunctionRightResponse*  ns1__UpdateFunctionRightResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	UpdateFunctionRight document
//gsoap ns7  service method-encoding:	UpdateFunctionRight literal
//gsoap ns7  service method-action:	UpdateFunctionRight http://tempuri.org/UpdateFunctionRight
int __ns7__UpdateFunctionRight(
    _ns1__UpdateFunctionRight*          ns1__UpdateFunctionRight,	///< Request parameter
    _ns1__UpdateFunctionRightResponse*  ns1__UpdateFunctionRightResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetTableStatistics                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetTableStatistics" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetTableStatistics"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetTableStatistics(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetTableStatistics*           ns1__GetTableStatistics,
    // response parameters:
    _ns1__GetTableStatisticsResponse*   ns1__GetTableStatisticsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetTableStatistics(
    struct soap *soap,
    // request parameters:
    _ns1__GetTableStatistics*           ns1__GetTableStatistics,
    // response parameters:
    _ns1__GetTableStatisticsResponse*   ns1__GetTableStatisticsResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetTableStatistics document
//gsoap ns7  service method-encoding:	GetTableStatistics literal
//gsoap ns7  service method-action:	GetTableStatistics http://tempuri.org/GetTableStatistics
int __ns7__GetTableStatistics(
    _ns1__GetTableStatistics*           ns1__GetTableStatistics,	///< Request parameter
    _ns1__GetTableStatisticsResponse*   ns1__GetTableStatisticsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetNoticeList                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetNoticeList" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetNoticeList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetNoticeList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetNoticeList*                ns1__GetNoticeList,
    // response parameters:
    _ns1__GetNoticeListResponse*        ns1__GetNoticeListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetNoticeList(
    struct soap *soap,
    // request parameters:
    _ns1__GetNoticeList*                ns1__GetNoticeList,
    // response parameters:
    _ns1__GetNoticeListResponse*        ns1__GetNoticeListResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetNoticeList document
//gsoap ns7  service method-encoding:	GetNoticeList literal
//gsoap ns7  service method-action:	GetNoticeList http://tempuri.org/GetNoticeList
int __ns7__GetNoticeList(
    _ns1__GetNoticeList*                ns1__GetNoticeList,	///< Request parameter
    _ns1__GetNoticeListResponse*        ns1__GetNoticeListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetNoticeListByCondition                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetNoticeListByCondition" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetNoticeListByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetNoticeListByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetNoticeListByCondition*     ns1__GetNoticeListByCondition,
    // response parameters:
    _ns1__GetNoticeListByConditionResponse* ns1__GetNoticeListByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetNoticeListByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetNoticeListByCondition*     ns1__GetNoticeListByCondition,
    // response parameters:
    _ns1__GetNoticeListByConditionResponse* ns1__GetNoticeListByConditionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetNoticeListByCondition document
//gsoap ns7  service method-encoding:	GetNoticeListByCondition literal
//gsoap ns7  service method-action:	GetNoticeListByCondition http://tempuri.org/GetNoticeListByCondition
int __ns7__GetNoticeListByCondition(
    _ns1__GetNoticeListByCondition*     ns1__GetNoticeListByCondition,	///< Request parameter
    _ns1__GetNoticeListByConditionResponse* ns1__GetNoticeListByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetNoticeItem                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetNoticeItem" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetNoticeItem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetNoticeItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetNoticeItem*                ns1__GetNoticeItem,
    // response parameters:
    _ns1__GetNoticeItemResponse*        ns1__GetNoticeItemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetNoticeItem(
    struct soap *soap,
    // request parameters:
    _ns1__GetNoticeItem*                ns1__GetNoticeItem,
    // response parameters:
    _ns1__GetNoticeItemResponse*        ns1__GetNoticeItemResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetNoticeItem document
//gsoap ns7  service method-encoding:	GetNoticeItem literal
//gsoap ns7  service method-action:	GetNoticeItem http://tempuri.org/GetNoticeItem
int __ns7__GetNoticeItem(
    _ns1__GetNoticeItem*                ns1__GetNoticeItem,	///< Request parameter
    _ns1__GetNoticeItemResponse*        ns1__GetNoticeItemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetAlertNoticeList                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetAlertNoticeList" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetAlertNoticeList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetAlertNoticeList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetAlertNoticeList*           ns1__GetAlertNoticeList,
    // response parameters:
    _ns1__GetAlertNoticeListResponse*   ns1__GetAlertNoticeListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetAlertNoticeList(
    struct soap *soap,
    // request parameters:
    _ns1__GetAlertNoticeList*           ns1__GetAlertNoticeList,
    // response parameters:
    _ns1__GetAlertNoticeListResponse*   ns1__GetAlertNoticeListResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetAlertNoticeList document
//gsoap ns7  service method-encoding:	GetAlertNoticeList literal
//gsoap ns7  service method-action:	GetAlertNoticeList http://tempuri.org/GetAlertNoticeList
int __ns7__GetAlertNoticeList(
    _ns1__GetAlertNoticeList*           ns1__GetAlertNoticeList,	///< Request parameter
    _ns1__GetAlertNoticeListResponse*   ns1__GetAlertNoticeListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__AddNoticeItem                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__AddNoticeItem" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddNoticeItem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__AddNoticeItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddNoticeItem*                ns1__AddNoticeItem,
    // response parameters:
    _ns1__AddNoticeItemResponse*        ns1__AddNoticeItemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__AddNoticeItem(
    struct soap *soap,
    // request parameters:
    _ns1__AddNoticeItem*                ns1__AddNoticeItem,
    // response parameters:
    _ns1__AddNoticeItemResponse*        ns1__AddNoticeItemResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	AddNoticeItem document
//gsoap ns7  service method-encoding:	AddNoticeItem literal
//gsoap ns7  service method-action:	AddNoticeItem http://tempuri.org/AddNoticeItem
int __ns7__AddNoticeItem(
    _ns1__AddNoticeItem*                ns1__AddNoticeItem,	///< Request parameter
    _ns1__AddNoticeItemResponse*        ns1__AddNoticeItemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__AddNoticeItemToSomeone                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__AddNoticeItemToSomeone" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddNoticeItemToSomeone"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__AddNoticeItemToSomeone(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddNoticeItemToSomeone*       ns1__AddNoticeItemToSomeone,
    // response parameters:
    _ns1__AddNoticeItemToSomeoneResponse* ns1__AddNoticeItemToSomeoneResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__AddNoticeItemToSomeone(
    struct soap *soap,
    // request parameters:
    _ns1__AddNoticeItemToSomeone*       ns1__AddNoticeItemToSomeone,
    // response parameters:
    _ns1__AddNoticeItemToSomeoneResponse* ns1__AddNoticeItemToSomeoneResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	AddNoticeItemToSomeone document
//gsoap ns7  service method-encoding:	AddNoticeItemToSomeone literal
//gsoap ns7  service method-action:	AddNoticeItemToSomeone http://tempuri.org/AddNoticeItemToSomeone
int __ns7__AddNoticeItemToSomeone(
    _ns1__AddNoticeItemToSomeone*       ns1__AddNoticeItemToSomeone,	///< Request parameter
    _ns1__AddNoticeItemToSomeoneResponse* ns1__AddNoticeItemToSomeoneResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__UpdateNoticeItem                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__UpdateNoticeItem" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateNoticeItem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__UpdateNoticeItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateNoticeItem*             ns1__UpdateNoticeItem,
    // response parameters:
    _ns1__UpdateNoticeItemResponse*     ns1__UpdateNoticeItemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__UpdateNoticeItem(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateNoticeItem*             ns1__UpdateNoticeItem,
    // response parameters:
    _ns1__UpdateNoticeItemResponse*     ns1__UpdateNoticeItemResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	UpdateNoticeItem document
//gsoap ns7  service method-encoding:	UpdateNoticeItem literal
//gsoap ns7  service method-action:	UpdateNoticeItem http://tempuri.org/UpdateNoticeItem
int __ns7__UpdateNoticeItem(
    _ns1__UpdateNoticeItem*             ns1__UpdateNoticeItem,	///< Request parameter
    _ns1__UpdateNoticeItemResponse*     ns1__UpdateNoticeItemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__DeleteNoticeItem                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__DeleteNoticeItem" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/DeleteNoticeItem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__DeleteNoticeItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeleteNoticeItem*             ns1__DeleteNoticeItem,
    // response parameters:
    _ns1__DeleteNoticeItemResponse*     ns1__DeleteNoticeItemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__DeleteNoticeItem(
    struct soap *soap,
    // request parameters:
    _ns1__DeleteNoticeItem*             ns1__DeleteNoticeItem,
    // response parameters:
    _ns1__DeleteNoticeItemResponse*     ns1__DeleteNoticeItemResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	DeleteNoticeItem document
//gsoap ns7  service method-encoding:	DeleteNoticeItem literal
//gsoap ns7  service method-action:	DeleteNoticeItem http://tempuri.org/DeleteNoticeItem
int __ns7__DeleteNoticeItem(
    _ns1__DeleteNoticeItem*             ns1__DeleteNoticeItem,	///< Request parameter
    _ns1__DeleteNoticeItemResponse*     ns1__DeleteNoticeItemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__InserNoticeToSomeOne                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__InserNoticeToSomeOne" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/InserNoticeToSomeOne"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__InserNoticeToSomeOne(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__InserNoticeToSomeOne*         ns1__InserNoticeToSomeOne,
    // response parameters:
    _ns1__InserNoticeToSomeOneResponse* ns1__InserNoticeToSomeOneResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__InserNoticeToSomeOne(
    struct soap *soap,
    // request parameters:
    _ns1__InserNoticeToSomeOne*         ns1__InserNoticeToSomeOne,
    // response parameters:
    _ns1__InserNoticeToSomeOneResponse* ns1__InserNoticeToSomeOneResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	InserNoticeToSomeOne document
//gsoap ns7  service method-encoding:	InserNoticeToSomeOne literal
//gsoap ns7  service method-action:	InserNoticeToSomeOne http://tempuri.org/InserNoticeToSomeOne
int __ns7__InserNoticeToSomeOne(
    _ns1__InserNoticeToSomeOne*         ns1__InserNoticeToSomeOne,	///< Request parameter
    _ns1__InserNoticeToSomeOneResponse* ns1__InserNoticeToSomeOneResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetReturnProportionRecord                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetReturnProportionRecord" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetReturnProportionRecord"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetReturnProportionRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetReturnProportionRecord*    ns1__GetReturnProportionRecord,
    // response parameters:
    _ns1__GetReturnProportionRecordResponse* ns1__GetReturnProportionRecordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetReturnProportionRecord(
    struct soap *soap,
    // request parameters:
    _ns1__GetReturnProportionRecord*    ns1__GetReturnProportionRecord,
    // response parameters:
    _ns1__GetReturnProportionRecordResponse* ns1__GetReturnProportionRecordResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetReturnProportionRecord document
//gsoap ns7  service method-encoding:	GetReturnProportionRecord literal
//gsoap ns7  service method-action:	GetReturnProportionRecord http://tempuri.org/GetReturnProportionRecord
int __ns7__GetReturnProportionRecord(
    _ns1__GetReturnProportionRecord*    ns1__GetReturnProportionRecord,	///< Request parameter
    _ns1__GetReturnProportionRecordResponse* ns1__GetReturnProportionRecordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__AddtReturnProportion                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__AddtReturnProportion" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddtReturnProportion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__AddtReturnProportion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddtReturnProportion*         ns1__AddtReturnProportion,
    // response parameters:
    _ns1__AddtReturnProportionResponse* ns1__AddtReturnProportionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__AddtReturnProportion(
    struct soap *soap,
    // request parameters:
    _ns1__AddtReturnProportion*         ns1__AddtReturnProportion,
    // response parameters:
    _ns1__AddtReturnProportionResponse* ns1__AddtReturnProportionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	AddtReturnProportion document
//gsoap ns7  service method-encoding:	AddtReturnProportion literal
//gsoap ns7  service method-action:	AddtReturnProportion http://tempuri.org/AddtReturnProportion
int __ns7__AddtReturnProportion(
    _ns1__AddtReturnProportion*         ns1__AddtReturnProportion,	///< Request parameter
    _ns1__AddtReturnProportionResponse* ns1__AddtReturnProportionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__UpdatetReturnProportion                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__UpdatetReturnProportion" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdatetReturnProportion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__UpdatetReturnProportion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdatetReturnProportion*      ns1__UpdatetReturnProportion,
    // response parameters:
    _ns1__UpdatetReturnProportionResponse* ns1__UpdatetReturnProportionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__UpdatetReturnProportion(
    struct soap *soap,
    // request parameters:
    _ns1__UpdatetReturnProportion*      ns1__UpdatetReturnProportion,
    // response parameters:
    _ns1__UpdatetReturnProportionResponse* ns1__UpdatetReturnProportionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	UpdatetReturnProportion document
//gsoap ns7  service method-encoding:	UpdatetReturnProportion literal
//gsoap ns7  service method-action:	UpdatetReturnProportion http://tempuri.org/UpdatetReturnProportion
int __ns7__UpdatetReturnProportion(
    _ns1__UpdatetReturnProportion*      ns1__UpdatetReturnProportion,	///< Request parameter
    _ns1__UpdatetReturnProportionResponse* ns1__UpdatetReturnProportionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__DeletetReturnProportion                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__DeletetReturnProportion" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/DeletetReturnProportion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__DeletetReturnProportion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeletetReturnProportion*      ns1__DeletetReturnProportion,
    // response parameters:
    _ns1__DeletetReturnProportionResponse* ns1__DeletetReturnProportionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__DeletetReturnProportion(
    struct soap *soap,
    // request parameters:
    _ns1__DeletetReturnProportion*      ns1__DeletetReturnProportion,
    // response parameters:
    _ns1__DeletetReturnProportionResponse* ns1__DeletetReturnProportionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	DeletetReturnProportion document
//gsoap ns7  service method-encoding:	DeletetReturnProportion literal
//gsoap ns7  service method-action:	DeletetReturnProportion http://tempuri.org/DeletetReturnProportion
int __ns7__DeletetReturnProportion(
    _ns1__DeletetReturnProportion*      ns1__DeletetReturnProportion,	///< Request parameter
    _ns1__DeletetReturnProportionResponse* ns1__DeletetReturnProportionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetPhoneNumberBelongByCondition                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetPhoneNumberBelongByCondition" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPhoneNumberBelongByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetPhoneNumberBelongByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPhoneNumberBelongByCondition* ns1__GetPhoneNumberBelongByCondition,
    // response parameters:
    _ns1__GetPhoneNumberBelongByConditionResponse* ns1__GetPhoneNumberBelongByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetPhoneNumberBelongByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPhoneNumberBelongByCondition* ns1__GetPhoneNumberBelongByCondition,
    // response parameters:
    _ns1__GetPhoneNumberBelongByConditionResponse* ns1__GetPhoneNumberBelongByConditionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetPhoneNumberBelongByCondition document
//gsoap ns7  service method-encoding:	GetPhoneNumberBelongByCondition literal
//gsoap ns7  service method-action:	GetPhoneNumberBelongByCondition http://tempuri.org/GetPhoneNumberBelongByCondition
int __ns7__GetPhoneNumberBelongByCondition(
    _ns1__GetPhoneNumberBelongByCondition* ns1__GetPhoneNumberBelongByCondition,	///< Request parameter
    _ns1__GetPhoneNumberBelongByConditionResponse* ns1__GetPhoneNumberBelongByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__UpdatePhoneNumberBelong                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__UpdatePhoneNumberBelong" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdatePhoneNumberBelong"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__UpdatePhoneNumberBelong(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdatePhoneNumberBelong*      ns1__UpdatePhoneNumberBelong,
    // response parameters:
    _ns1__UpdatePhoneNumberBelongResponse* ns1__UpdatePhoneNumberBelongResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__UpdatePhoneNumberBelong(
    struct soap *soap,
    // request parameters:
    _ns1__UpdatePhoneNumberBelong*      ns1__UpdatePhoneNumberBelong,
    // response parameters:
    _ns1__UpdatePhoneNumberBelongResponse* ns1__UpdatePhoneNumberBelongResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	UpdatePhoneNumberBelong document
//gsoap ns7  service method-encoding:	UpdatePhoneNumberBelong literal
//gsoap ns7  service method-action:	UpdatePhoneNumberBelong http://tempuri.org/UpdatePhoneNumberBelong
int __ns7__UpdatePhoneNumberBelong(
    _ns1__UpdatePhoneNumberBelong*      ns1__UpdatePhoneNumberBelong,	///< Request parameter
    _ns1__UpdatePhoneNumberBelongResponse* ns1__UpdatePhoneNumberBelongResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__AddPhoneNumberBelong                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__AddPhoneNumberBelong" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddPhoneNumberBelong"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__AddPhoneNumberBelong(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddPhoneNumberBelong*         ns1__AddPhoneNumberBelong,
    // response parameters:
    _ns1__AddPhoneNumberBelongResponse* ns1__AddPhoneNumberBelongResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__AddPhoneNumberBelong(
    struct soap *soap,
    // request parameters:
    _ns1__AddPhoneNumberBelong*         ns1__AddPhoneNumberBelong,
    // response parameters:
    _ns1__AddPhoneNumberBelongResponse* ns1__AddPhoneNumberBelongResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	AddPhoneNumberBelong document
//gsoap ns7  service method-encoding:	AddPhoneNumberBelong literal
//gsoap ns7  service method-action:	AddPhoneNumberBelong http://tempuri.org/AddPhoneNumberBelong
int __ns7__AddPhoneNumberBelong(
    _ns1__AddPhoneNumberBelong*         ns1__AddPhoneNumberBelong,	///< Request parameter
    _ns1__AddPhoneNumberBelongResponse* ns1__AddPhoneNumberBelongResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__DeletePhoneNumberBelong                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__DeletePhoneNumberBelong" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/DeletePhoneNumberBelong"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__DeletePhoneNumberBelong(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeletePhoneNumberBelong*      ns1__DeletePhoneNumberBelong,
    // response parameters:
    _ns1__DeletePhoneNumberBelongResponse* ns1__DeletePhoneNumberBelongResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__DeletePhoneNumberBelong(
    struct soap *soap,
    // request parameters:
    _ns1__DeletePhoneNumberBelong*      ns1__DeletePhoneNumberBelong,
    // response parameters:
    _ns1__DeletePhoneNumberBelongResponse* ns1__DeletePhoneNumberBelongResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	DeletePhoneNumberBelong document
//gsoap ns7  service method-encoding:	DeletePhoneNumberBelong literal
//gsoap ns7  service method-action:	DeletePhoneNumberBelong http://tempuri.org/DeletePhoneNumberBelong
int __ns7__DeletePhoneNumberBelong(
    _ns1__DeletePhoneNumberBelong*      ns1__DeletePhoneNumberBelong,	///< Request parameter
    _ns1__DeletePhoneNumberBelongResponse* ns1__DeletePhoneNumberBelongResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetCompanyInfo                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetCompanyInfo" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetCompanyInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetCompanyInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetCompanyInfo*               ns1__GetCompanyInfo,
    // response parameters:
    _ns1__GetCompanyInfoResponse*       ns1__GetCompanyInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetCompanyInfo(
    struct soap *soap,
    // request parameters:
    _ns1__GetCompanyInfo*               ns1__GetCompanyInfo,
    // response parameters:
    _ns1__GetCompanyInfoResponse*       ns1__GetCompanyInfoResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetCompanyInfo document
//gsoap ns7  service method-encoding:	GetCompanyInfo literal
//gsoap ns7  service method-action:	GetCompanyInfo http://tempuri.org/GetCompanyInfo
int __ns7__GetCompanyInfo(
    _ns1__GetCompanyInfo*               ns1__GetCompanyInfo,	///< Request parameter
    _ns1__GetCompanyInfoResponse*       ns1__GetCompanyInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__UpdateCompanyInfo                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__UpdateCompanyInfo" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateCompanyInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__UpdateCompanyInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateCompanyInfo*            ns1__UpdateCompanyInfo,
    // response parameters:
    _ns1__UpdateCompanyInfoResponse*    ns1__UpdateCompanyInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__UpdateCompanyInfo(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateCompanyInfo*            ns1__UpdateCompanyInfo,
    // response parameters:
    _ns1__UpdateCompanyInfoResponse*    ns1__UpdateCompanyInfoResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	UpdateCompanyInfo document
//gsoap ns7  service method-encoding:	UpdateCompanyInfo literal
//gsoap ns7  service method-action:	UpdateCompanyInfo http://tempuri.org/UpdateCompanyInfo
int __ns7__UpdateCompanyInfo(
    _ns1__UpdateCompanyInfo*            ns1__UpdateCompanyInfo,	///< Request parameter
    _ns1__UpdateCompanyInfoResponse*    ns1__UpdateCompanyInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetCompanyAccount                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetCompanyAccount" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetCompanyAccount"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetCompanyAccount(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetCompanyAccount*            ns1__GetCompanyAccount,
    // response parameters:
    _ns1__GetCompanyAccountResponse*    ns1__GetCompanyAccountResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetCompanyAccount(
    struct soap *soap,
    // request parameters:
    _ns1__GetCompanyAccount*            ns1__GetCompanyAccount,
    // response parameters:
    _ns1__GetCompanyAccountResponse*    ns1__GetCompanyAccountResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetCompanyAccount document
//gsoap ns7  service method-encoding:	GetCompanyAccount literal
//gsoap ns7  service method-action:	GetCompanyAccount http://tempuri.org/GetCompanyAccount
int __ns7__GetCompanyAccount(
    _ns1__GetCompanyAccount*            ns1__GetCompanyAccount,	///< Request parameter
    _ns1__GetCompanyAccountResponse*    ns1__GetCompanyAccountResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__AddCompanyAccount                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__AddCompanyAccount" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddCompanyAccount"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__AddCompanyAccount(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddCompanyAccount*            ns1__AddCompanyAccount,
    // response parameters:
    _ns1__AddCompanyAccountResponse*    ns1__AddCompanyAccountResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__AddCompanyAccount(
    struct soap *soap,
    // request parameters:
    _ns1__AddCompanyAccount*            ns1__AddCompanyAccount,
    // response parameters:
    _ns1__AddCompanyAccountResponse*    ns1__AddCompanyAccountResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	AddCompanyAccount document
//gsoap ns7  service method-encoding:	AddCompanyAccount literal
//gsoap ns7  service method-action:	AddCompanyAccount http://tempuri.org/AddCompanyAccount
int __ns7__AddCompanyAccount(
    _ns1__AddCompanyAccount*            ns1__AddCompanyAccount,	///< Request parameter
    _ns1__AddCompanyAccountResponse*    ns1__AddCompanyAccountResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__UpdateCompanyAccount                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__UpdateCompanyAccount" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateCompanyAccount"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__UpdateCompanyAccount(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateCompanyAccount*         ns1__UpdateCompanyAccount,
    // response parameters:
    _ns1__UpdateCompanyAccountResponse* ns1__UpdateCompanyAccountResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__UpdateCompanyAccount(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateCompanyAccount*         ns1__UpdateCompanyAccount,
    // response parameters:
    _ns1__UpdateCompanyAccountResponse* ns1__UpdateCompanyAccountResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	UpdateCompanyAccount document
//gsoap ns7  service method-encoding:	UpdateCompanyAccount literal
//gsoap ns7  service method-action:	UpdateCompanyAccount http://tempuri.org/UpdateCompanyAccount
int __ns7__UpdateCompanyAccount(
    _ns1__UpdateCompanyAccount*         ns1__UpdateCompanyAccount,	///< Request parameter
    _ns1__UpdateCompanyAccountResponse* ns1__UpdateCompanyAccountResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__DeleteCompanyAccount                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__DeleteCompanyAccount" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/DeleteCompanyAccount"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__DeleteCompanyAccount(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeleteCompanyAccount*         ns1__DeleteCompanyAccount,
    // response parameters:
    _ns1__DeleteCompanyAccountResponse* ns1__DeleteCompanyAccountResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__DeleteCompanyAccount(
    struct soap *soap,
    // request parameters:
    _ns1__DeleteCompanyAccount*         ns1__DeleteCompanyAccount,
    // response parameters:
    _ns1__DeleteCompanyAccountResponse* ns1__DeleteCompanyAccountResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	DeleteCompanyAccount document
//gsoap ns7  service method-encoding:	DeleteCompanyAccount literal
//gsoap ns7  service method-action:	DeleteCompanyAccount http://tempuri.org/DeleteCompanyAccount
int __ns7__DeleteCompanyAccount(
    _ns1__DeleteCompanyAccount*         ns1__DeleteCompanyAccount,	///< Request parameter
    _ns1__DeleteCompanyAccountResponse* ns1__DeleteCompanyAccountResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns7__GetClientVersion                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns7__GetClientVersion" of service binding "UtilFunctionWebServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetClientVersion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns7__GetClientVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetClientVersion*             ns1__GetClientVersion,
    // response parameters:
    _ns1__GetClientVersionResponse*     ns1__GetClientVersionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns7__GetClientVersion(
    struct soap *soap,
    // request parameters:
    _ns1__GetClientVersion*             ns1__GetClientVersion,
    // response parameters:
    _ns1__GetClientVersionResponse*     ns1__GetClientVersionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoapProxy.h):
@code
  class UtilFunctionWebServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoapService.h):
@code
  class UtilFunctionWebServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns7  service method-style:	GetClientVersion document
//gsoap ns7  service method-encoding:	GetClientVersion literal
//gsoap ns7  service method-action:	GetClientVersion http://tempuri.org/GetClientVersion
int __ns7__GetClientVersion(
    _ns1__GetClientVersion*             ns1__GetClientVersion,	///< Request parameter
    _ns1__GetClientVersionResponse*     ns1__GetClientVersionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   UtilFunctionWebServiceSoap12                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetDicContentByCondition                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetDicContentByCondition" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetDicContentByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetDicContentByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetDicContentByCondition*     ns1__GetDicContentByCondition,
    // response parameters:
    _ns1__GetDicContentByConditionResponse* ns1__GetDicContentByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetDicContentByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetDicContentByCondition*     ns1__GetDicContentByCondition,
    // response parameters:
    _ns1__GetDicContentByConditionResponse* ns1__GetDicContentByConditionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetDicContentByCondition document
//gsoap ns8  service method-encoding:	GetDicContentByCondition literal
//gsoap ns8  service method-action:	GetDicContentByCondition http://tempuri.org/GetDicContentByCondition
int __ns8__GetDicContentByCondition(
    _ns1__GetDicContentByCondition*     ns1__GetDicContentByCondition,	///< Request parameter
    _ns1__GetDicContentByConditionResponse* ns1__GetDicContentByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetAllCategory                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetAllCategory" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetAllCategory"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetAllCategory(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetAllCategory*               ns1__GetAllCategory,
    // response parameters:
    _ns1__GetAllCategoryResponse*       ns1__GetAllCategoryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetAllCategory(
    struct soap *soap,
    // request parameters:
    _ns1__GetAllCategory*               ns1__GetAllCategory,
    // response parameters:
    _ns1__GetAllCategoryResponse*       ns1__GetAllCategoryResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetAllCategory document
//gsoap ns8  service method-encoding:	GetAllCategory literal
//gsoap ns8  service method-action:	GetAllCategory http://tempuri.org/GetAllCategory
int __ns8__GetAllCategory(
    _ns1__GetAllCategory*               ns1__GetAllCategory,	///< Request parameter
    _ns1__GetAllCategoryResponse*       ns1__GetAllCategoryResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__InsertDicContent                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__InsertDicContent" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/InsertDicContent"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__InsertDicContent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__InsertDicContent*             ns1__InsertDicContent,
    // response parameters:
    _ns1__InsertDicContentResponse*     ns1__InsertDicContentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__InsertDicContent(
    struct soap *soap,
    // request parameters:
    _ns1__InsertDicContent*             ns1__InsertDicContent,
    // response parameters:
    _ns1__InsertDicContentResponse*     ns1__InsertDicContentResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	InsertDicContent document
//gsoap ns8  service method-encoding:	InsertDicContent literal
//gsoap ns8  service method-action:	InsertDicContent http://tempuri.org/InsertDicContent
int __ns8__InsertDicContent(
    _ns1__InsertDicContent*             ns1__InsertDicContent,	///< Request parameter
    _ns1__InsertDicContentResponse*     ns1__InsertDicContentResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__UpdateDicContent                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__UpdateDicContent" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateDicContent"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__UpdateDicContent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateDicContent*             ns1__UpdateDicContent,
    // response parameters:
    _ns1__UpdateDicContentResponse*     ns1__UpdateDicContentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__UpdateDicContent(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateDicContent*             ns1__UpdateDicContent,
    // response parameters:
    _ns1__UpdateDicContentResponse*     ns1__UpdateDicContentResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	UpdateDicContent document
//gsoap ns8  service method-encoding:	UpdateDicContent literal
//gsoap ns8  service method-action:	UpdateDicContent http://tempuri.org/UpdateDicContent
int __ns8__UpdateDicContent(
    _ns1__UpdateDicContent*             ns1__UpdateDicContent,	///< Request parameter
    _ns1__UpdateDicContentResponse*     ns1__UpdateDicContentResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__DeleteDicContent                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__DeleteDicContent" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/DeleteDicContent"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__DeleteDicContent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeleteDicContent*             ns1__DeleteDicContent,
    // response parameters:
    _ns1__DeleteDicContentResponse*     ns1__DeleteDicContentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__DeleteDicContent(
    struct soap *soap,
    // request parameters:
    _ns1__DeleteDicContent*             ns1__DeleteDicContent,
    // response parameters:
    _ns1__DeleteDicContentResponse*     ns1__DeleteDicContentResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	DeleteDicContent document
//gsoap ns8  service method-encoding:	DeleteDicContent literal
//gsoap ns8  service method-action:	DeleteDicContent http://tempuri.org/DeleteDicContent
int __ns8__DeleteDicContent(
    _ns1__DeleteDicContent*             ns1__DeleteDicContent,	///< Request parameter
    _ns1__DeleteDicContentResponse*     ns1__DeleteDicContentResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__UpdateDicContentByCategory                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__UpdateDicContentByCategory" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateDicContentByCategory"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__UpdateDicContentByCategory(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateDicContentByCategory*   ns1__UpdateDicContentByCategory,
    // response parameters:
    _ns1__UpdateDicContentByCategoryResponse* ns1__UpdateDicContentByCategoryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__UpdateDicContentByCategory(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateDicContentByCategory*   ns1__UpdateDicContentByCategory,
    // response parameters:
    _ns1__UpdateDicContentByCategoryResponse* ns1__UpdateDicContentByCategoryResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	UpdateDicContentByCategory document
//gsoap ns8  service method-encoding:	UpdateDicContentByCategory literal
//gsoap ns8  service method-action:	UpdateDicContentByCategory http://tempuri.org/UpdateDicContentByCategory
int __ns8__UpdateDicContentByCategory(
    _ns1__UpdateDicContentByCategory*   ns1__UpdateDicContentByCategory,	///< Request parameter
    _ns1__UpdateDicContentByCategoryResponse* ns1__UpdateDicContentByCategoryResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetFunctionList                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetFunctionList" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetFunctionList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetFunctionList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetFunctionList*              ns1__GetFunctionList,
    // response parameters:
    _ns1__GetFunctionListResponse*      ns1__GetFunctionListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetFunctionList(
    struct soap *soap,
    // request parameters:
    _ns1__GetFunctionList*              ns1__GetFunctionList,
    // response parameters:
    _ns1__GetFunctionListResponse*      ns1__GetFunctionListResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetFunctionList document
//gsoap ns8  service method-encoding:	GetFunctionList literal
//gsoap ns8  service method-action:	GetFunctionList http://tempuri.org/GetFunctionList
int __ns8__GetFunctionList(
    _ns1__GetFunctionList*              ns1__GetFunctionList,	///< Request parameter
    _ns1__GetFunctionListResponse*      ns1__GetFunctionListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__UpdateUserFunctionList                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__UpdateUserFunctionList" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateUserFunctionList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__UpdateUserFunctionList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateUserFunctionList*       ns1__UpdateUserFunctionList,
    // response parameters:
    _ns1__UpdateUserFunctionListResponse* ns1__UpdateUserFunctionListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__UpdateUserFunctionList(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateUserFunctionList*       ns1__UpdateUserFunctionList,
    // response parameters:
    _ns1__UpdateUserFunctionListResponse* ns1__UpdateUserFunctionListResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	UpdateUserFunctionList document
//gsoap ns8  service method-encoding:	UpdateUserFunctionList literal
//gsoap ns8  service method-action:	UpdateUserFunctionList http://tempuri.org/UpdateUserFunctionList
int __ns8__UpdateUserFunctionList(
    _ns1__UpdateUserFunctionList*       ns1__UpdateUserFunctionList,	///< Request parameter
    _ns1__UpdateUserFunctionListResponse* ns1__UpdateUserFunctionListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__UpdateFunctionRight                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__UpdateFunctionRight" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateFunctionRight"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__UpdateFunctionRight(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateFunctionRight*          ns1__UpdateFunctionRight,
    // response parameters:
    _ns1__UpdateFunctionRightResponse*  ns1__UpdateFunctionRightResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__UpdateFunctionRight(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateFunctionRight*          ns1__UpdateFunctionRight,
    // response parameters:
    _ns1__UpdateFunctionRightResponse*  ns1__UpdateFunctionRightResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	UpdateFunctionRight document
//gsoap ns8  service method-encoding:	UpdateFunctionRight literal
//gsoap ns8  service method-action:	UpdateFunctionRight http://tempuri.org/UpdateFunctionRight
int __ns8__UpdateFunctionRight(
    _ns1__UpdateFunctionRight*          ns1__UpdateFunctionRight,	///< Request parameter
    _ns1__UpdateFunctionRightResponse*  ns1__UpdateFunctionRightResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetTableStatistics                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetTableStatistics" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetTableStatistics"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetTableStatistics(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetTableStatistics*           ns1__GetTableStatistics,
    // response parameters:
    _ns1__GetTableStatisticsResponse*   ns1__GetTableStatisticsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetTableStatistics(
    struct soap *soap,
    // request parameters:
    _ns1__GetTableStatistics*           ns1__GetTableStatistics,
    // response parameters:
    _ns1__GetTableStatisticsResponse*   ns1__GetTableStatisticsResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetTableStatistics document
//gsoap ns8  service method-encoding:	GetTableStatistics literal
//gsoap ns8  service method-action:	GetTableStatistics http://tempuri.org/GetTableStatistics
int __ns8__GetTableStatistics(
    _ns1__GetTableStatistics*           ns1__GetTableStatistics,	///< Request parameter
    _ns1__GetTableStatisticsResponse*   ns1__GetTableStatisticsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetNoticeList                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetNoticeList" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetNoticeList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetNoticeList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetNoticeList*                ns1__GetNoticeList,
    // response parameters:
    _ns1__GetNoticeListResponse*        ns1__GetNoticeListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetNoticeList(
    struct soap *soap,
    // request parameters:
    _ns1__GetNoticeList*                ns1__GetNoticeList,
    // response parameters:
    _ns1__GetNoticeListResponse*        ns1__GetNoticeListResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetNoticeList document
//gsoap ns8  service method-encoding:	GetNoticeList literal
//gsoap ns8  service method-action:	GetNoticeList http://tempuri.org/GetNoticeList
int __ns8__GetNoticeList(
    _ns1__GetNoticeList*                ns1__GetNoticeList,	///< Request parameter
    _ns1__GetNoticeListResponse*        ns1__GetNoticeListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetNoticeListByCondition                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetNoticeListByCondition" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetNoticeListByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetNoticeListByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetNoticeListByCondition*     ns1__GetNoticeListByCondition,
    // response parameters:
    _ns1__GetNoticeListByConditionResponse* ns1__GetNoticeListByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetNoticeListByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetNoticeListByCondition*     ns1__GetNoticeListByCondition,
    // response parameters:
    _ns1__GetNoticeListByConditionResponse* ns1__GetNoticeListByConditionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetNoticeListByCondition document
//gsoap ns8  service method-encoding:	GetNoticeListByCondition literal
//gsoap ns8  service method-action:	GetNoticeListByCondition http://tempuri.org/GetNoticeListByCondition
int __ns8__GetNoticeListByCondition(
    _ns1__GetNoticeListByCondition*     ns1__GetNoticeListByCondition,	///< Request parameter
    _ns1__GetNoticeListByConditionResponse* ns1__GetNoticeListByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetNoticeItem                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetNoticeItem" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetNoticeItem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetNoticeItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetNoticeItem*                ns1__GetNoticeItem,
    // response parameters:
    _ns1__GetNoticeItemResponse*        ns1__GetNoticeItemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetNoticeItem(
    struct soap *soap,
    // request parameters:
    _ns1__GetNoticeItem*                ns1__GetNoticeItem,
    // response parameters:
    _ns1__GetNoticeItemResponse*        ns1__GetNoticeItemResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetNoticeItem document
//gsoap ns8  service method-encoding:	GetNoticeItem literal
//gsoap ns8  service method-action:	GetNoticeItem http://tempuri.org/GetNoticeItem
int __ns8__GetNoticeItem(
    _ns1__GetNoticeItem*                ns1__GetNoticeItem,	///< Request parameter
    _ns1__GetNoticeItemResponse*        ns1__GetNoticeItemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetAlertNoticeList                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetAlertNoticeList" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetAlertNoticeList"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetAlertNoticeList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetAlertNoticeList*           ns1__GetAlertNoticeList,
    // response parameters:
    _ns1__GetAlertNoticeListResponse*   ns1__GetAlertNoticeListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetAlertNoticeList(
    struct soap *soap,
    // request parameters:
    _ns1__GetAlertNoticeList*           ns1__GetAlertNoticeList,
    // response parameters:
    _ns1__GetAlertNoticeListResponse*   ns1__GetAlertNoticeListResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetAlertNoticeList document
//gsoap ns8  service method-encoding:	GetAlertNoticeList literal
//gsoap ns8  service method-action:	GetAlertNoticeList http://tempuri.org/GetAlertNoticeList
int __ns8__GetAlertNoticeList(
    _ns1__GetAlertNoticeList*           ns1__GetAlertNoticeList,	///< Request parameter
    _ns1__GetAlertNoticeListResponse*   ns1__GetAlertNoticeListResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__AddNoticeItem                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__AddNoticeItem" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddNoticeItem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__AddNoticeItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddNoticeItem*                ns1__AddNoticeItem,
    // response parameters:
    _ns1__AddNoticeItemResponse*        ns1__AddNoticeItemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__AddNoticeItem(
    struct soap *soap,
    // request parameters:
    _ns1__AddNoticeItem*                ns1__AddNoticeItem,
    // response parameters:
    _ns1__AddNoticeItemResponse*        ns1__AddNoticeItemResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	AddNoticeItem document
//gsoap ns8  service method-encoding:	AddNoticeItem literal
//gsoap ns8  service method-action:	AddNoticeItem http://tempuri.org/AddNoticeItem
int __ns8__AddNoticeItem(
    _ns1__AddNoticeItem*                ns1__AddNoticeItem,	///< Request parameter
    _ns1__AddNoticeItemResponse*        ns1__AddNoticeItemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__AddNoticeItemToSomeone                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__AddNoticeItemToSomeone" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddNoticeItemToSomeone"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__AddNoticeItemToSomeone(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddNoticeItemToSomeone*       ns1__AddNoticeItemToSomeone,
    // response parameters:
    _ns1__AddNoticeItemToSomeoneResponse* ns1__AddNoticeItemToSomeoneResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__AddNoticeItemToSomeone(
    struct soap *soap,
    // request parameters:
    _ns1__AddNoticeItemToSomeone*       ns1__AddNoticeItemToSomeone,
    // response parameters:
    _ns1__AddNoticeItemToSomeoneResponse* ns1__AddNoticeItemToSomeoneResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	AddNoticeItemToSomeone document
//gsoap ns8  service method-encoding:	AddNoticeItemToSomeone literal
//gsoap ns8  service method-action:	AddNoticeItemToSomeone http://tempuri.org/AddNoticeItemToSomeone
int __ns8__AddNoticeItemToSomeone(
    _ns1__AddNoticeItemToSomeone*       ns1__AddNoticeItemToSomeone,	///< Request parameter
    _ns1__AddNoticeItemToSomeoneResponse* ns1__AddNoticeItemToSomeoneResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__UpdateNoticeItem                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__UpdateNoticeItem" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateNoticeItem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__UpdateNoticeItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateNoticeItem*             ns1__UpdateNoticeItem,
    // response parameters:
    _ns1__UpdateNoticeItemResponse*     ns1__UpdateNoticeItemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__UpdateNoticeItem(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateNoticeItem*             ns1__UpdateNoticeItem,
    // response parameters:
    _ns1__UpdateNoticeItemResponse*     ns1__UpdateNoticeItemResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	UpdateNoticeItem document
//gsoap ns8  service method-encoding:	UpdateNoticeItem literal
//gsoap ns8  service method-action:	UpdateNoticeItem http://tempuri.org/UpdateNoticeItem
int __ns8__UpdateNoticeItem(
    _ns1__UpdateNoticeItem*             ns1__UpdateNoticeItem,	///< Request parameter
    _ns1__UpdateNoticeItemResponse*     ns1__UpdateNoticeItemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__DeleteNoticeItem                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__DeleteNoticeItem" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/DeleteNoticeItem"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__DeleteNoticeItem(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeleteNoticeItem*             ns1__DeleteNoticeItem,
    // response parameters:
    _ns1__DeleteNoticeItemResponse*     ns1__DeleteNoticeItemResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__DeleteNoticeItem(
    struct soap *soap,
    // request parameters:
    _ns1__DeleteNoticeItem*             ns1__DeleteNoticeItem,
    // response parameters:
    _ns1__DeleteNoticeItemResponse*     ns1__DeleteNoticeItemResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	DeleteNoticeItem document
//gsoap ns8  service method-encoding:	DeleteNoticeItem literal
//gsoap ns8  service method-action:	DeleteNoticeItem http://tempuri.org/DeleteNoticeItem
int __ns8__DeleteNoticeItem(
    _ns1__DeleteNoticeItem*             ns1__DeleteNoticeItem,	///< Request parameter
    _ns1__DeleteNoticeItemResponse*     ns1__DeleteNoticeItemResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__InserNoticeToSomeOne                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__InserNoticeToSomeOne" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/InserNoticeToSomeOne"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__InserNoticeToSomeOne(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__InserNoticeToSomeOne*         ns1__InserNoticeToSomeOne,
    // response parameters:
    _ns1__InserNoticeToSomeOneResponse* ns1__InserNoticeToSomeOneResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__InserNoticeToSomeOne(
    struct soap *soap,
    // request parameters:
    _ns1__InserNoticeToSomeOne*         ns1__InserNoticeToSomeOne,
    // response parameters:
    _ns1__InserNoticeToSomeOneResponse* ns1__InserNoticeToSomeOneResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	InserNoticeToSomeOne document
//gsoap ns8  service method-encoding:	InserNoticeToSomeOne literal
//gsoap ns8  service method-action:	InserNoticeToSomeOne http://tempuri.org/InserNoticeToSomeOne
int __ns8__InserNoticeToSomeOne(
    _ns1__InserNoticeToSomeOne*         ns1__InserNoticeToSomeOne,	///< Request parameter
    _ns1__InserNoticeToSomeOneResponse* ns1__InserNoticeToSomeOneResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetReturnProportionRecord                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetReturnProportionRecord" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetReturnProportionRecord"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetReturnProportionRecord(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetReturnProportionRecord*    ns1__GetReturnProportionRecord,
    // response parameters:
    _ns1__GetReturnProportionRecordResponse* ns1__GetReturnProportionRecordResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetReturnProportionRecord(
    struct soap *soap,
    // request parameters:
    _ns1__GetReturnProportionRecord*    ns1__GetReturnProportionRecord,
    // response parameters:
    _ns1__GetReturnProportionRecordResponse* ns1__GetReturnProportionRecordResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetReturnProportionRecord document
//gsoap ns8  service method-encoding:	GetReturnProportionRecord literal
//gsoap ns8  service method-action:	GetReturnProportionRecord http://tempuri.org/GetReturnProportionRecord
int __ns8__GetReturnProportionRecord(
    _ns1__GetReturnProportionRecord*    ns1__GetReturnProportionRecord,	///< Request parameter
    _ns1__GetReturnProportionRecordResponse* ns1__GetReturnProportionRecordResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__AddtReturnProportion                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__AddtReturnProportion" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddtReturnProportion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__AddtReturnProportion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddtReturnProportion*         ns1__AddtReturnProportion,
    // response parameters:
    _ns1__AddtReturnProportionResponse* ns1__AddtReturnProportionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__AddtReturnProportion(
    struct soap *soap,
    // request parameters:
    _ns1__AddtReturnProportion*         ns1__AddtReturnProportion,
    // response parameters:
    _ns1__AddtReturnProportionResponse* ns1__AddtReturnProportionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	AddtReturnProportion document
//gsoap ns8  service method-encoding:	AddtReturnProportion literal
//gsoap ns8  service method-action:	AddtReturnProportion http://tempuri.org/AddtReturnProportion
int __ns8__AddtReturnProportion(
    _ns1__AddtReturnProportion*         ns1__AddtReturnProportion,	///< Request parameter
    _ns1__AddtReturnProportionResponse* ns1__AddtReturnProportionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__UpdatetReturnProportion                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__UpdatetReturnProportion" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdatetReturnProportion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__UpdatetReturnProportion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdatetReturnProportion*      ns1__UpdatetReturnProportion,
    // response parameters:
    _ns1__UpdatetReturnProportionResponse* ns1__UpdatetReturnProportionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__UpdatetReturnProportion(
    struct soap *soap,
    // request parameters:
    _ns1__UpdatetReturnProportion*      ns1__UpdatetReturnProportion,
    // response parameters:
    _ns1__UpdatetReturnProportionResponse* ns1__UpdatetReturnProportionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	UpdatetReturnProportion document
//gsoap ns8  service method-encoding:	UpdatetReturnProportion literal
//gsoap ns8  service method-action:	UpdatetReturnProportion http://tempuri.org/UpdatetReturnProportion
int __ns8__UpdatetReturnProportion(
    _ns1__UpdatetReturnProportion*      ns1__UpdatetReturnProportion,	///< Request parameter
    _ns1__UpdatetReturnProportionResponse* ns1__UpdatetReturnProportionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__DeletetReturnProportion                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__DeletetReturnProportion" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/DeletetReturnProportion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__DeletetReturnProportion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeletetReturnProportion*      ns1__DeletetReturnProportion,
    // response parameters:
    _ns1__DeletetReturnProportionResponse* ns1__DeletetReturnProportionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__DeletetReturnProportion(
    struct soap *soap,
    // request parameters:
    _ns1__DeletetReturnProportion*      ns1__DeletetReturnProportion,
    // response parameters:
    _ns1__DeletetReturnProportionResponse* ns1__DeletetReturnProportionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	DeletetReturnProportion document
//gsoap ns8  service method-encoding:	DeletetReturnProportion literal
//gsoap ns8  service method-action:	DeletetReturnProportion http://tempuri.org/DeletetReturnProportion
int __ns8__DeletetReturnProportion(
    _ns1__DeletetReturnProportion*      ns1__DeletetReturnProportion,	///< Request parameter
    _ns1__DeletetReturnProportionResponse* ns1__DeletetReturnProportionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetPhoneNumberBelongByCondition                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetPhoneNumberBelongByCondition" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetPhoneNumberBelongByCondition"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetPhoneNumberBelongByCondition(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetPhoneNumberBelongByCondition* ns1__GetPhoneNumberBelongByCondition,
    // response parameters:
    _ns1__GetPhoneNumberBelongByConditionResponse* ns1__GetPhoneNumberBelongByConditionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetPhoneNumberBelongByCondition(
    struct soap *soap,
    // request parameters:
    _ns1__GetPhoneNumberBelongByCondition* ns1__GetPhoneNumberBelongByCondition,
    // response parameters:
    _ns1__GetPhoneNumberBelongByConditionResponse* ns1__GetPhoneNumberBelongByConditionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetPhoneNumberBelongByCondition document
//gsoap ns8  service method-encoding:	GetPhoneNumberBelongByCondition literal
//gsoap ns8  service method-action:	GetPhoneNumberBelongByCondition http://tempuri.org/GetPhoneNumberBelongByCondition
int __ns8__GetPhoneNumberBelongByCondition(
    _ns1__GetPhoneNumberBelongByCondition* ns1__GetPhoneNumberBelongByCondition,	///< Request parameter
    _ns1__GetPhoneNumberBelongByConditionResponse* ns1__GetPhoneNumberBelongByConditionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__UpdatePhoneNumberBelong                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__UpdatePhoneNumberBelong" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdatePhoneNumberBelong"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__UpdatePhoneNumberBelong(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdatePhoneNumberBelong*      ns1__UpdatePhoneNumberBelong,
    // response parameters:
    _ns1__UpdatePhoneNumberBelongResponse* ns1__UpdatePhoneNumberBelongResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__UpdatePhoneNumberBelong(
    struct soap *soap,
    // request parameters:
    _ns1__UpdatePhoneNumberBelong*      ns1__UpdatePhoneNumberBelong,
    // response parameters:
    _ns1__UpdatePhoneNumberBelongResponse* ns1__UpdatePhoneNumberBelongResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	UpdatePhoneNumberBelong document
//gsoap ns8  service method-encoding:	UpdatePhoneNumberBelong literal
//gsoap ns8  service method-action:	UpdatePhoneNumberBelong http://tempuri.org/UpdatePhoneNumberBelong
int __ns8__UpdatePhoneNumberBelong(
    _ns1__UpdatePhoneNumberBelong*      ns1__UpdatePhoneNumberBelong,	///< Request parameter
    _ns1__UpdatePhoneNumberBelongResponse* ns1__UpdatePhoneNumberBelongResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__AddPhoneNumberBelong                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__AddPhoneNumberBelong" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddPhoneNumberBelong"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__AddPhoneNumberBelong(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddPhoneNumberBelong*         ns1__AddPhoneNumberBelong,
    // response parameters:
    _ns1__AddPhoneNumberBelongResponse* ns1__AddPhoneNumberBelongResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__AddPhoneNumberBelong(
    struct soap *soap,
    // request parameters:
    _ns1__AddPhoneNumberBelong*         ns1__AddPhoneNumberBelong,
    // response parameters:
    _ns1__AddPhoneNumberBelongResponse* ns1__AddPhoneNumberBelongResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	AddPhoneNumberBelong document
//gsoap ns8  service method-encoding:	AddPhoneNumberBelong literal
//gsoap ns8  service method-action:	AddPhoneNumberBelong http://tempuri.org/AddPhoneNumberBelong
int __ns8__AddPhoneNumberBelong(
    _ns1__AddPhoneNumberBelong*         ns1__AddPhoneNumberBelong,	///< Request parameter
    _ns1__AddPhoneNumberBelongResponse* ns1__AddPhoneNumberBelongResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__DeletePhoneNumberBelong                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__DeletePhoneNumberBelong" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/DeletePhoneNumberBelong"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__DeletePhoneNumberBelong(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeletePhoneNumberBelong*      ns1__DeletePhoneNumberBelong,
    // response parameters:
    _ns1__DeletePhoneNumberBelongResponse* ns1__DeletePhoneNumberBelongResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__DeletePhoneNumberBelong(
    struct soap *soap,
    // request parameters:
    _ns1__DeletePhoneNumberBelong*      ns1__DeletePhoneNumberBelong,
    // response parameters:
    _ns1__DeletePhoneNumberBelongResponse* ns1__DeletePhoneNumberBelongResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	DeletePhoneNumberBelong document
//gsoap ns8  service method-encoding:	DeletePhoneNumberBelong literal
//gsoap ns8  service method-action:	DeletePhoneNumberBelong http://tempuri.org/DeletePhoneNumberBelong
int __ns8__DeletePhoneNumberBelong(
    _ns1__DeletePhoneNumberBelong*      ns1__DeletePhoneNumberBelong,	///< Request parameter
    _ns1__DeletePhoneNumberBelongResponse* ns1__DeletePhoneNumberBelongResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetCompanyInfo                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetCompanyInfo" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetCompanyInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetCompanyInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetCompanyInfo*               ns1__GetCompanyInfo,
    // response parameters:
    _ns1__GetCompanyInfoResponse*       ns1__GetCompanyInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetCompanyInfo(
    struct soap *soap,
    // request parameters:
    _ns1__GetCompanyInfo*               ns1__GetCompanyInfo,
    // response parameters:
    _ns1__GetCompanyInfoResponse*       ns1__GetCompanyInfoResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetCompanyInfo document
//gsoap ns8  service method-encoding:	GetCompanyInfo literal
//gsoap ns8  service method-action:	GetCompanyInfo http://tempuri.org/GetCompanyInfo
int __ns8__GetCompanyInfo(
    _ns1__GetCompanyInfo*               ns1__GetCompanyInfo,	///< Request parameter
    _ns1__GetCompanyInfoResponse*       ns1__GetCompanyInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__UpdateCompanyInfo                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__UpdateCompanyInfo" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateCompanyInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__UpdateCompanyInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateCompanyInfo*            ns1__UpdateCompanyInfo,
    // response parameters:
    _ns1__UpdateCompanyInfoResponse*    ns1__UpdateCompanyInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__UpdateCompanyInfo(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateCompanyInfo*            ns1__UpdateCompanyInfo,
    // response parameters:
    _ns1__UpdateCompanyInfoResponse*    ns1__UpdateCompanyInfoResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	UpdateCompanyInfo document
//gsoap ns8  service method-encoding:	UpdateCompanyInfo literal
//gsoap ns8  service method-action:	UpdateCompanyInfo http://tempuri.org/UpdateCompanyInfo
int __ns8__UpdateCompanyInfo(
    _ns1__UpdateCompanyInfo*            ns1__UpdateCompanyInfo,	///< Request parameter
    _ns1__UpdateCompanyInfoResponse*    ns1__UpdateCompanyInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetCompanyAccount                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetCompanyAccount" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetCompanyAccount"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetCompanyAccount(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetCompanyAccount*            ns1__GetCompanyAccount,
    // response parameters:
    _ns1__GetCompanyAccountResponse*    ns1__GetCompanyAccountResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetCompanyAccount(
    struct soap *soap,
    // request parameters:
    _ns1__GetCompanyAccount*            ns1__GetCompanyAccount,
    // response parameters:
    _ns1__GetCompanyAccountResponse*    ns1__GetCompanyAccountResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetCompanyAccount document
//gsoap ns8  service method-encoding:	GetCompanyAccount literal
//gsoap ns8  service method-action:	GetCompanyAccount http://tempuri.org/GetCompanyAccount
int __ns8__GetCompanyAccount(
    _ns1__GetCompanyAccount*            ns1__GetCompanyAccount,	///< Request parameter
    _ns1__GetCompanyAccountResponse*    ns1__GetCompanyAccountResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__AddCompanyAccount                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__AddCompanyAccount" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/AddCompanyAccount"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__AddCompanyAccount(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__AddCompanyAccount*            ns1__AddCompanyAccount,
    // response parameters:
    _ns1__AddCompanyAccountResponse*    ns1__AddCompanyAccountResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__AddCompanyAccount(
    struct soap *soap,
    // request parameters:
    _ns1__AddCompanyAccount*            ns1__AddCompanyAccount,
    // response parameters:
    _ns1__AddCompanyAccountResponse*    ns1__AddCompanyAccountResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	AddCompanyAccount document
//gsoap ns8  service method-encoding:	AddCompanyAccount literal
//gsoap ns8  service method-action:	AddCompanyAccount http://tempuri.org/AddCompanyAccount
int __ns8__AddCompanyAccount(
    _ns1__AddCompanyAccount*            ns1__AddCompanyAccount,	///< Request parameter
    _ns1__AddCompanyAccountResponse*    ns1__AddCompanyAccountResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__UpdateCompanyAccount                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__UpdateCompanyAccount" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/UpdateCompanyAccount"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__UpdateCompanyAccount(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__UpdateCompanyAccount*         ns1__UpdateCompanyAccount,
    // response parameters:
    _ns1__UpdateCompanyAccountResponse* ns1__UpdateCompanyAccountResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__UpdateCompanyAccount(
    struct soap *soap,
    // request parameters:
    _ns1__UpdateCompanyAccount*         ns1__UpdateCompanyAccount,
    // response parameters:
    _ns1__UpdateCompanyAccountResponse* ns1__UpdateCompanyAccountResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	UpdateCompanyAccount document
//gsoap ns8  service method-encoding:	UpdateCompanyAccount literal
//gsoap ns8  service method-action:	UpdateCompanyAccount http://tempuri.org/UpdateCompanyAccount
int __ns8__UpdateCompanyAccount(
    _ns1__UpdateCompanyAccount*         ns1__UpdateCompanyAccount,	///< Request parameter
    _ns1__UpdateCompanyAccountResponse* ns1__UpdateCompanyAccountResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__DeleteCompanyAccount                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__DeleteCompanyAccount" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/DeleteCompanyAccount"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__DeleteCompanyAccount(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__DeleteCompanyAccount*         ns1__DeleteCompanyAccount,
    // response parameters:
    _ns1__DeleteCompanyAccountResponse* ns1__DeleteCompanyAccountResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__DeleteCompanyAccount(
    struct soap *soap,
    // request parameters:
    _ns1__DeleteCompanyAccount*         ns1__DeleteCompanyAccount,
    // response parameters:
    _ns1__DeleteCompanyAccountResponse* ns1__DeleteCompanyAccountResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	DeleteCompanyAccount document
//gsoap ns8  service method-encoding:	DeleteCompanyAccount literal
//gsoap ns8  service method-action:	DeleteCompanyAccount http://tempuri.org/DeleteCompanyAccount
int __ns8__DeleteCompanyAccount(
    _ns1__DeleteCompanyAccount*         ns1__DeleteCompanyAccount,	///< Request parameter
    _ns1__DeleteCompanyAccountResponse* ns1__DeleteCompanyAccountResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns8__GetClientVersion                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns8__GetClientVersion" of service binding "UtilFunctionWebServiceSoap12"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/GetClientVersion"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns8__GetClientVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetClientVersion*             ns1__GetClientVersion,
    // response parameters:
    _ns1__GetClientVersionResponse*     ns1__GetClientVersionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns8__GetClientVersion(
    struct soap *soap,
    // request parameters:
    _ns1__GetClientVersion*             ns1__GetClientVersion,
    // response parameters:
    _ns1__GetClientVersionResponse*     ns1__GetClientVersionResponse
  );
@endcode

C++ proxy class (defined in soapUtilFunctionWebServiceSoap12Proxy.h):
@code
  class UtilFunctionWebServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapUtilFunctionWebServiceSoap12Service.h):
@code
  class UtilFunctionWebServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns8  service method-style:	GetClientVersion document
//gsoap ns8  service method-encoding:	GetClientVersion literal
//gsoap ns8  service method-action:	GetClientVersion http://tempuri.org/GetClientVersion
int __ns8__GetClientVersion(
    _ns1__GetClientVersion*             ns1__GetClientVersion,	///< Request parameter
    _ns1__GetClientVersionResponse*     ns1__GetClientVersionResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   HttpServiceSoap                                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns9__queryPhoneNOInfo                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns9__queryPhoneNOInfo" of service binding "HttpServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://tempuri.org/queryPhoneNOInfo"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns9__queryPhoneNOInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,
    // response parameters:
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns9__queryPhoneNOInfo(
    struct soap *soap,
    // request parameters:
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,
    // response parameters:
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse
  );
@endcode

C++ proxy class (defined in soapHttpServiceSoapProxy.h):
@code
  class HttpServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapHttpServiceSoapService.h):
@code
  class HttpServiceSoapService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns9  service method-style:	queryPhoneNOInfo document
//gsoap ns9  service method-encoding:	queryPhoneNOInfo literal
//gsoap ns9  service method-action:	queryPhoneNOInfo http://tempuri.org/queryPhoneNOInfo
int __ns9__queryPhoneNOInfo(
    _ns1__queryPhoneNOInfo*             ns1__queryPhoneNOInfo,	///< Request parameter
    _ns1__queryPhoneNOInfoResponse*     ns1__queryPhoneNOInfoResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://tempuri.org/"

  - <ns1:GetLocation> @ref _ns1__GetLocation
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetLocation(struct soap*, _ns1__GetLocation*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetLocation(struct soap*, _ns1__GetLocation*);
    @endcode

  - <ns1:GetLocationResponse> @ref _ns1__GetLocationResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetLocationResponse(struct soap*, _ns1__GetLocationResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetLocationResponse(struct soap*, _ns1__GetLocationResponse*);
    @endcode

  - <ns1:PayMoney> @ref _ns1__PayMoney
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayMoney(struct soap*, _ns1__PayMoney*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayMoney(struct soap*, _ns1__PayMoney*);
    @endcode

  - <ns1:PayMoneyResponse> @ref _ns1__PayMoneyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayMoneyResponse(struct soap*, _ns1__PayMoneyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayMoneyResponse(struct soap*, _ns1__PayMoneyResponse*);
    @endcode

  - <ns1:PayMoneyWithList> @ref _ns1__PayMoneyWithList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayMoneyWithList(struct soap*, _ns1__PayMoneyWithList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayMoneyWithList(struct soap*, _ns1__PayMoneyWithList*);
    @endcode

  - <ns1:PayMoneyWithListResponse> @ref _ns1__PayMoneyWithListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayMoneyWithListResponse(struct soap*, _ns1__PayMoneyWithListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayMoneyWithListResponse(struct soap*, _ns1__PayMoneyWithListResponse*);
    @endcode

  - <ns1:RequstRollback> @ref _ns1__RequstRollback
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RequstRollback(struct soap*, _ns1__RequstRollback*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RequstRollback(struct soap*, _ns1__RequstRollback*);
    @endcode

  - <ns1:RequstRollbackResponse> @ref _ns1__RequstRollbackResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RequstRollbackResponse(struct soap*, _ns1__RequstRollbackResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RequstRollbackResponse(struct soap*, _ns1__RequstRollbackResponse*);
    @endcode

  - <ns1:PayInternet> @ref _ns1__PayInternet
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayInternet(struct soap*, _ns1__PayInternet*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayInternet(struct soap*, _ns1__PayInternet*);
    @endcode

  - <ns1:PayInternetResponse> @ref _ns1__PayInternetResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayInternetResponse(struct soap*, _ns1__PayInternetResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayInternetResponse(struct soap*, _ns1__PayInternetResponse*);
    @endcode

  - <ns1:PayInternetWithList> @ref _ns1__PayInternetWithList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayInternetWithList(struct soap*, _ns1__PayInternetWithList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayInternetWithList(struct soap*, _ns1__PayInternetWithList*);
    @endcode

  - <ns1:PayInternetWithListResponse> @ref _ns1__PayInternetWithListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayInternetWithListResponse(struct soap*, _ns1__PayInternetWithListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayInternetWithListResponse(struct soap*, _ns1__PayInternetWithListResponse*);
    @endcode

  - <ns1:RequstInternetRollback> @ref _ns1__RequstInternetRollback
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RequstInternetRollback(struct soap*, _ns1__RequstInternetRollback*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RequstInternetRollback(struct soap*, _ns1__RequstInternetRollback*);
    @endcode

  - <ns1:RequstInternetRollbackResponse> @ref _ns1__RequstInternetRollbackResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RequstInternetRollbackResponse(struct soap*, _ns1__RequstInternetRollbackResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RequstInternetRollbackResponse(struct soap*, _ns1__RequstInternetRollbackResponse*);
    @endcode

  - <ns1:PayGame> @ref _ns1__PayGame
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayGame(struct soap*, _ns1__PayGame*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayGame(struct soap*, _ns1__PayGame*);
    @endcode

  - <ns1:PayGameResponse> @ref _ns1__PayGameResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayGameResponse(struct soap*, _ns1__PayGameResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayGameResponse(struct soap*, _ns1__PayGameResponse*);
    @endcode

  - <ns1:PayPublicTel> @ref _ns1__PayPublicTel
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayPublicTel(struct soap*, _ns1__PayPublicTel*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayPublicTel(struct soap*, _ns1__PayPublicTel*);
    @endcode

  - <ns1:PayPublicTelResponse> @ref _ns1__PayPublicTelResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__PayPublicTelResponse(struct soap*, _ns1__PayPublicTelResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__PayPublicTelResponse(struct soap*, _ns1__PayPublicTelResponse*);
    @endcode

  - <ns1:GetPaymentRecord> @ref _ns1__GetPaymentRecord
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPaymentRecord(struct soap*, _ns1__GetPaymentRecord*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPaymentRecord(struct soap*, _ns1__GetPaymentRecord*);
    @endcode

  - <ns1:GetPaymentRecordResponse> @ref _ns1__GetPaymentRecordResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPaymentRecordResponse(struct soap*, _ns1__GetPaymentRecordResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPaymentRecordResponse(struct soap*, _ns1__GetPaymentRecordResponse*);
    @endcode

  - <ns1:GetPaymentItem> @ref _ns1__GetPaymentItem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPaymentItem(struct soap*, _ns1__GetPaymentItem*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPaymentItem(struct soap*, _ns1__GetPaymentItem*);
    @endcode

  - <ns1:GetPaymentItemResponse> @ref _ns1__GetPaymentItemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPaymentItemResponse(struct soap*, _ns1__GetPaymentItemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPaymentItemResponse(struct soap*, _ns1__GetPaymentItemResponse*);
    @endcode

  - <ns1:GetTransactionByCondition> @ref _ns1__GetTransactionByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetTransactionByCondition(struct soap*, _ns1__GetTransactionByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetTransactionByCondition(struct soap*, _ns1__GetTransactionByCondition*);
    @endcode

  - <ns1:GetTransactionByConditionResponse> @ref _ns1__GetTransactionByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetTransactionByConditionResponse(struct soap*, _ns1__GetTransactionByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetTransactionByConditionResponse(struct soap*, _ns1__GetTransactionByConditionResponse*);
    @endcode

  - <ns1:GetTransactionStaticsByCondition> @ref _ns1__GetTransactionStaticsByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetTransactionStaticsByCondition(struct soap*, _ns1__GetTransactionStaticsByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetTransactionStaticsByCondition(struct soap*, _ns1__GetTransactionStaticsByCondition*);
    @endcode

  - <ns1:GetTransactionStaticsByConditionResponse> @ref _ns1__GetTransactionStaticsByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetTransactionStaticsByConditionResponse(struct soap*, _ns1__GetTransactionStaticsByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetTransactionStaticsByConditionResponse(struct soap*, _ns1__GetTransactionStaticsByConditionResponse*);
    @endcode

  - <ns1:GetPaymentOrPaymentHistoryByCondition> @ref _ns1__GetPaymentOrPaymentHistoryByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPaymentOrPaymentHistoryByCondition(struct soap*, _ns1__GetPaymentOrPaymentHistoryByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPaymentOrPaymentHistoryByCondition(struct soap*, _ns1__GetPaymentOrPaymentHistoryByCondition*);
    @endcode

  - <ns1:GetPaymentOrPaymentHistoryByConditionResponse> @ref _ns1__GetPaymentOrPaymentHistoryByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPaymentOrPaymentHistoryByConditionResponse(struct soap*, _ns1__GetPaymentOrPaymentHistoryByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPaymentOrPaymentHistoryByConditionResponse(struct soap*, _ns1__GetPaymentOrPaymentHistoryByConditionResponse*);
    @endcode

  - <ns1:GetPayInternetByCondition> @ref _ns1__GetPayInternetByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayInternetByCondition(struct soap*, _ns1__GetPayInternetByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayInternetByCondition(struct soap*, _ns1__GetPayInternetByCondition*);
    @endcode

  - <ns1:GetPayInternetByConditionResponse> @ref _ns1__GetPayInternetByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayInternetByConditionResponse(struct soap*, _ns1__GetPayInternetByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayInternetByConditionResponse(struct soap*, _ns1__GetPayInternetByConditionResponse*);
    @endcode

  - <ns1:GetPayInternetHistoryByCondition> @ref _ns1__GetPayInternetHistoryByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayInternetHistoryByCondition(struct soap*, _ns1__GetPayInternetHistoryByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayInternetHistoryByCondition(struct soap*, _ns1__GetPayInternetHistoryByCondition*);
    @endcode

  - <ns1:GetPayInternetHistoryByConditionResponse> @ref _ns1__GetPayInternetHistoryByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayInternetHistoryByConditionResponse(struct soap*, _ns1__GetPayInternetHistoryByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayInternetHistoryByConditionResponse(struct soap*, _ns1__GetPayInternetHistoryByConditionResponse*);
    @endcode

  - <ns1:GetPayGameByCondition> @ref _ns1__GetPayGameByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayGameByCondition(struct soap*, _ns1__GetPayGameByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayGameByCondition(struct soap*, _ns1__GetPayGameByCondition*);
    @endcode

  - <ns1:GetPayGameByConditionResponse> @ref _ns1__GetPayGameByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayGameByConditionResponse(struct soap*, _ns1__GetPayGameByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayGameByConditionResponse(struct soap*, _ns1__GetPayGameByConditionResponse*);
    @endcode

  - <ns1:GetPayGameHistoryByCondition> @ref _ns1__GetPayGameHistoryByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayGameHistoryByCondition(struct soap*, _ns1__GetPayGameHistoryByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayGameHistoryByCondition(struct soap*, _ns1__GetPayGameHistoryByCondition*);
    @endcode

  - <ns1:GetPayGameHistoryByConditionResponse> @ref _ns1__GetPayGameHistoryByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayGameHistoryByConditionResponse(struct soap*, _ns1__GetPayGameHistoryByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayGameHistoryByConditionResponse(struct soap*, _ns1__GetPayGameHistoryByConditionResponse*);
    @endcode

  - <ns1:GetPayPublicTelByCondition> @ref _ns1__GetPayPublicTelByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayPublicTelByCondition(struct soap*, _ns1__GetPayPublicTelByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayPublicTelByCondition(struct soap*, _ns1__GetPayPublicTelByCondition*);
    @endcode

  - <ns1:GetPayPublicTelByConditionResponse> @ref _ns1__GetPayPublicTelByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayPublicTelByConditionResponse(struct soap*, _ns1__GetPayPublicTelByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayPublicTelByConditionResponse(struct soap*, _ns1__GetPayPublicTelByConditionResponse*);
    @endcode

  - <ns1:GetPayPublicTelHistoryByCondition> @ref _ns1__GetPayPublicTelHistoryByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayPublicTelHistoryByCondition(struct soap*, _ns1__GetPayPublicTelHistoryByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayPublicTelHistoryByCondition(struct soap*, _ns1__GetPayPublicTelHistoryByCondition*);
    @endcode

  - <ns1:GetPayPublicTelHistoryByConditionResponse> @ref _ns1__GetPayPublicTelHistoryByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayPublicTelHistoryByConditionResponse(struct soap*, _ns1__GetPayPublicTelHistoryByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayPublicTelHistoryByConditionResponse(struct soap*, _ns1__GetPayPublicTelHistoryByConditionResponse*);
    @endcode

  - <ns1:HelloWorld> @ref _ns1__HelloWorld
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__HelloWorld(struct soap*, _ns1__HelloWorld*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__HelloWorld(struct soap*, _ns1__HelloWorld*);
    @endcode

  - <ns1:HelloWorldResponse> @ref _ns1__HelloWorldResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__HelloWorldResponse(struct soap*, _ns1__HelloWorldResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__HelloWorldResponse(struct soap*, _ns1__HelloWorldResponse*);
    @endcode

  - <ns1:loggout> @ref _ns1__loggout
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__loggout(struct soap*, _ns1__loggout*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__loggout(struct soap*, _ns1__loggout*);
    @endcode

  - <ns1:loggoutResponse> @ref _ns1__loggoutResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__loggoutResponse(struct soap*, _ns1__loggoutResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__loggoutResponse(struct soap*, _ns1__loggoutResponse*);
    @endcode

  - <ns1:TestLogin> @ref _ns1__TestLogin
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TestLogin(struct soap*, _ns1__TestLogin*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TestLogin(struct soap*, _ns1__TestLogin*);
    @endcode

  - <ns1:TestLoginResponse> @ref _ns1__TestLoginResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TestLoginResponse(struct soap*, _ns1__TestLoginResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TestLoginResponse(struct soap*, _ns1__TestLoginResponse*);
    @endcode

  - <ns1:GetUserInfo> @ref _ns1__GetUserInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetUserInfo(struct soap*, _ns1__GetUserInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetUserInfo(struct soap*, _ns1__GetUserInfo*);
    @endcode

  - <ns1:GetUserInfoResponse> @ref _ns1__GetUserInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetUserInfoResponse(struct soap*, _ns1__GetUserInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetUserInfoResponse(struct soap*, _ns1__GetUserInfoResponse*);
    @endcode

  - <ns1:RegisterUser> @ref _ns1__RegisterUser
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RegisterUser(struct soap*, _ns1__RegisterUser*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RegisterUser(struct soap*, _ns1__RegisterUser*);
    @endcode

  - <ns1:RegisterUserResponse> @ref _ns1__RegisterUserResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RegisterUserResponse(struct soap*, _ns1__RegisterUserResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RegisterUserResponse(struct soap*, _ns1__RegisterUserResponse*);
    @endcode

  - <ns1:AlterPsw> @ref _ns1__AlterPsw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AlterPsw(struct soap*, _ns1__AlterPsw*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AlterPsw(struct soap*, _ns1__AlterPsw*);
    @endcode

  - <ns1:AlterPswResponse> @ref _ns1__AlterPswResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AlterPswResponse(struct soap*, _ns1__AlterPswResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AlterPswResponse(struct soap*, _ns1__AlterPswResponse*);
    @endcode

  - <ns1:AlterUserInfo> @ref _ns1__AlterUserInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AlterUserInfo(struct soap*, _ns1__AlterUserInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AlterUserInfo(struct soap*, _ns1__AlterUserInfo*);
    @endcode

  - <ns1:AlterUserInfoResponse> @ref _ns1__AlterUserInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AlterUserInfoResponse(struct soap*, _ns1__AlterUserInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AlterUserInfoResponse(struct soap*, _ns1__AlterUserInfoResponse*);
    @endcode

  - <ns1:AddAcountPayment> @ref _ns1__AddAcountPayment
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddAcountPayment(struct soap*, _ns1__AddAcountPayment*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddAcountPayment(struct soap*, _ns1__AddAcountPayment*);
    @endcode

  - <ns1:AddAcountPaymentResponse> @ref _ns1__AddAcountPaymentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddAcountPaymentResponse(struct soap*, _ns1__AddAcountPaymentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddAcountPaymentResponse(struct soap*, _ns1__AddAcountPaymentResponse*);
    @endcode

  - <ns1:GetReturnInfo> @ref _ns1__GetReturnInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetReturnInfo(struct soap*, _ns1__GetReturnInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetReturnInfo(struct soap*, _ns1__GetReturnInfo*);
    @endcode

  - <ns1:GetReturnInfoResponse> @ref _ns1__GetReturnInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetReturnInfoResponse(struct soap*, _ns1__GetReturnInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetReturnInfoResponse(struct soap*, _ns1__GetReturnInfoResponse*);
    @endcode

  - <ns1:CharegeReturnedMoney> @ref _ns1__CharegeReturnedMoney
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CharegeReturnedMoney(struct soap*, _ns1__CharegeReturnedMoney*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CharegeReturnedMoney(struct soap*, _ns1__CharegeReturnedMoney*);
    @endcode

  - <ns1:CharegeReturnedMoneyResponse> @ref _ns1__CharegeReturnedMoneyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__CharegeReturnedMoneyResponse(struct soap*, _ns1__CharegeReturnedMoneyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__CharegeReturnedMoneyResponse(struct soap*, _ns1__CharegeReturnedMoneyResponse*);
    @endcode

  - <ns1:GetWorkNameList> @ref _ns1__GetWorkNameList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetWorkNameList(struct soap*, _ns1__GetWorkNameList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetWorkNameList(struct soap*, _ns1__GetWorkNameList*);
    @endcode

  - <ns1:GetWorkNameListResponse> @ref _ns1__GetWorkNameListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetWorkNameListResponse(struct soap*, _ns1__GetWorkNameListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetWorkNameListResponse(struct soap*, _ns1__GetWorkNameListResponse*);
    @endcode

  - <ns1:GetUserFunction> @ref _ns1__GetUserFunction
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetUserFunction(struct soap*, _ns1__GetUserFunction*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetUserFunction(struct soap*, _ns1__GetUserFunction*);
    @endcode

  - <ns1:GetUserFunctionResponse> @ref _ns1__GetUserFunctionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetUserFunctionResponse(struct soap*, _ns1__GetUserFunctionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetUserFunctionResponse(struct soap*, _ns1__GetUserFunctionResponse*);
    @endcode

  - <ns1:GetReturnRecord> @ref _ns1__GetReturnRecord
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetReturnRecord(struct soap*, _ns1__GetReturnRecord*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetReturnRecord(struct soap*, _ns1__GetReturnRecord*);
    @endcode

  - <ns1:GetReturnRecordResponse> @ref _ns1__GetReturnRecordResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetReturnRecordResponse(struct soap*, _ns1__GetReturnRecordResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetReturnRecordResponse(struct soap*, _ns1__GetReturnRecordResponse*);
    @endcode

  - <ns1:GetReturnRecordDeal> @ref _ns1__GetReturnRecordDeal
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetReturnRecordDeal(struct soap*, _ns1__GetReturnRecordDeal*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetReturnRecordDeal(struct soap*, _ns1__GetReturnRecordDeal*);
    @endcode

  - <ns1:GetReturnRecordDealResponse> @ref _ns1__GetReturnRecordDealResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetReturnRecordDealResponse(struct soap*, _ns1__GetReturnRecordDealResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetReturnRecordDealResponse(struct soap*, _ns1__GetReturnRecordDealResponse*);
    @endcode

  - <ns1:GetAcountPaymentRecord> @ref _ns1__GetAcountPaymentRecord
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAcountPaymentRecord(struct soap*, _ns1__GetAcountPaymentRecord*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAcountPaymentRecord(struct soap*, _ns1__GetAcountPaymentRecord*);
    @endcode

  - <ns1:GetAcountPaymentRecordResponse> @ref _ns1__GetAcountPaymentRecordResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAcountPaymentRecordResponse(struct soap*, _ns1__GetAcountPaymentRecordResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAcountPaymentRecordResponse(struct soap*, _ns1__GetAcountPaymentRecordResponse*);
    @endcode

  - <ns1:GetDicContentByCondition> @ref _ns1__GetDicContentByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetDicContentByCondition(struct soap*, _ns1__GetDicContentByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetDicContentByCondition(struct soap*, _ns1__GetDicContentByCondition*);
    @endcode

  - <ns1:GetDicContentByConditionResponse> @ref _ns1__GetDicContentByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetDicContentByConditionResponse(struct soap*, _ns1__GetDicContentByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetDicContentByConditionResponse(struct soap*, _ns1__GetDicContentByConditionResponse*);
    @endcode

  - <ns1:GetAllCategory> @ref _ns1__GetAllCategory
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAllCategory(struct soap*, _ns1__GetAllCategory*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAllCategory(struct soap*, _ns1__GetAllCategory*);
    @endcode

  - <ns1:GetAllCategoryResponse> @ref _ns1__GetAllCategoryResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAllCategoryResponse(struct soap*, _ns1__GetAllCategoryResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAllCategoryResponse(struct soap*, _ns1__GetAllCategoryResponse*);
    @endcode

  - <ns1:InsertDicContent> @ref _ns1__InsertDicContent
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__InsertDicContent(struct soap*, _ns1__InsertDicContent*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__InsertDicContent(struct soap*, _ns1__InsertDicContent*);
    @endcode

  - <ns1:InsertDicContentResponse> @ref _ns1__InsertDicContentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__InsertDicContentResponse(struct soap*, _ns1__InsertDicContentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__InsertDicContentResponse(struct soap*, _ns1__InsertDicContentResponse*);
    @endcode

  - <ns1:UpdateDicContent> @ref _ns1__UpdateDicContent
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateDicContent(struct soap*, _ns1__UpdateDicContent*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateDicContent(struct soap*, _ns1__UpdateDicContent*);
    @endcode

  - <ns1:UpdateDicContentResponse> @ref _ns1__UpdateDicContentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateDicContentResponse(struct soap*, _ns1__UpdateDicContentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateDicContentResponse(struct soap*, _ns1__UpdateDicContentResponse*);
    @endcode

  - <ns1:DeleteDicContent> @ref _ns1__DeleteDicContent
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteDicContent(struct soap*, _ns1__DeleteDicContent*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteDicContent(struct soap*, _ns1__DeleteDicContent*);
    @endcode

  - <ns1:DeleteDicContentResponse> @ref _ns1__DeleteDicContentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteDicContentResponse(struct soap*, _ns1__DeleteDicContentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteDicContentResponse(struct soap*, _ns1__DeleteDicContentResponse*);
    @endcode

  - <ns1:UpdateDicContentByCategory> @ref _ns1__UpdateDicContentByCategory
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateDicContentByCategory(struct soap*, _ns1__UpdateDicContentByCategory*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateDicContentByCategory(struct soap*, _ns1__UpdateDicContentByCategory*);
    @endcode

  - <ns1:UpdateDicContentByCategoryResponse> @ref _ns1__UpdateDicContentByCategoryResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateDicContentByCategoryResponse(struct soap*, _ns1__UpdateDicContentByCategoryResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateDicContentByCategoryResponse(struct soap*, _ns1__UpdateDicContentByCategoryResponse*);
    @endcode

  - <ns1:GetFunctionList> @ref _ns1__GetFunctionList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetFunctionList(struct soap*, _ns1__GetFunctionList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetFunctionList(struct soap*, _ns1__GetFunctionList*);
    @endcode

  - <ns1:GetFunctionListResponse> @ref _ns1__GetFunctionListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetFunctionListResponse(struct soap*, _ns1__GetFunctionListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetFunctionListResponse(struct soap*, _ns1__GetFunctionListResponse*);
    @endcode

  - <ns1:UpdateUserFunctionList> @ref _ns1__UpdateUserFunctionList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateUserFunctionList(struct soap*, _ns1__UpdateUserFunctionList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateUserFunctionList(struct soap*, _ns1__UpdateUserFunctionList*);
    @endcode

  - <ns1:UpdateUserFunctionListResponse> @ref _ns1__UpdateUserFunctionListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateUserFunctionListResponse(struct soap*, _ns1__UpdateUserFunctionListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateUserFunctionListResponse(struct soap*, _ns1__UpdateUserFunctionListResponse*);
    @endcode

  - <ns1:UpdateFunctionRight> @ref _ns1__UpdateFunctionRight
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateFunctionRight(struct soap*, _ns1__UpdateFunctionRight*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateFunctionRight(struct soap*, _ns1__UpdateFunctionRight*);
    @endcode

  - <ns1:UpdateFunctionRightResponse> @ref _ns1__UpdateFunctionRightResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateFunctionRightResponse(struct soap*, _ns1__UpdateFunctionRightResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateFunctionRightResponse(struct soap*, _ns1__UpdateFunctionRightResponse*);
    @endcode

  - <ns1:GetTableStatistics> @ref _ns1__GetTableStatistics
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetTableStatistics(struct soap*, _ns1__GetTableStatistics*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetTableStatistics(struct soap*, _ns1__GetTableStatistics*);
    @endcode

  - <ns1:GetTableStatisticsResponse> @ref _ns1__GetTableStatisticsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetTableStatisticsResponse(struct soap*, _ns1__GetTableStatisticsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetTableStatisticsResponse(struct soap*, _ns1__GetTableStatisticsResponse*);
    @endcode

  - <ns1:GetNoticeList> @ref _ns1__GetNoticeList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetNoticeList(struct soap*, _ns1__GetNoticeList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetNoticeList(struct soap*, _ns1__GetNoticeList*);
    @endcode

  - <ns1:GetNoticeListResponse> @ref _ns1__GetNoticeListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetNoticeListResponse(struct soap*, _ns1__GetNoticeListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetNoticeListResponse(struct soap*, _ns1__GetNoticeListResponse*);
    @endcode

  - <ns1:GetNoticeListByCondition> @ref _ns1__GetNoticeListByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetNoticeListByCondition(struct soap*, _ns1__GetNoticeListByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetNoticeListByCondition(struct soap*, _ns1__GetNoticeListByCondition*);
    @endcode

  - <ns1:GetNoticeListByConditionResponse> @ref _ns1__GetNoticeListByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetNoticeListByConditionResponse(struct soap*, _ns1__GetNoticeListByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetNoticeListByConditionResponse(struct soap*, _ns1__GetNoticeListByConditionResponse*);
    @endcode

  - <ns1:GetNoticeItem> @ref _ns1__GetNoticeItem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetNoticeItem(struct soap*, _ns1__GetNoticeItem*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetNoticeItem(struct soap*, _ns1__GetNoticeItem*);
    @endcode

  - <ns1:GetNoticeItemResponse> @ref _ns1__GetNoticeItemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetNoticeItemResponse(struct soap*, _ns1__GetNoticeItemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetNoticeItemResponse(struct soap*, _ns1__GetNoticeItemResponse*);
    @endcode

  - <ns1:GetAlertNoticeList> @ref _ns1__GetAlertNoticeList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAlertNoticeList(struct soap*, _ns1__GetAlertNoticeList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAlertNoticeList(struct soap*, _ns1__GetAlertNoticeList*);
    @endcode

  - <ns1:GetAlertNoticeListResponse> @ref _ns1__GetAlertNoticeListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAlertNoticeListResponse(struct soap*, _ns1__GetAlertNoticeListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAlertNoticeListResponse(struct soap*, _ns1__GetAlertNoticeListResponse*);
    @endcode

  - <ns1:AddNoticeItem> @ref _ns1__AddNoticeItem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddNoticeItem(struct soap*, _ns1__AddNoticeItem*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddNoticeItem(struct soap*, _ns1__AddNoticeItem*);
    @endcode

  - <ns1:AddNoticeItemResponse> @ref _ns1__AddNoticeItemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddNoticeItemResponse(struct soap*, _ns1__AddNoticeItemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddNoticeItemResponse(struct soap*, _ns1__AddNoticeItemResponse*);
    @endcode

  - <ns1:AddNoticeItemToSomeone> @ref _ns1__AddNoticeItemToSomeone
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddNoticeItemToSomeone(struct soap*, _ns1__AddNoticeItemToSomeone*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddNoticeItemToSomeone(struct soap*, _ns1__AddNoticeItemToSomeone*);
    @endcode

  - <ns1:AddNoticeItemToSomeoneResponse> @ref _ns1__AddNoticeItemToSomeoneResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddNoticeItemToSomeoneResponse(struct soap*, _ns1__AddNoticeItemToSomeoneResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddNoticeItemToSomeoneResponse(struct soap*, _ns1__AddNoticeItemToSomeoneResponse*);
    @endcode

  - <ns1:UpdateNoticeItem> @ref _ns1__UpdateNoticeItem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateNoticeItem(struct soap*, _ns1__UpdateNoticeItem*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateNoticeItem(struct soap*, _ns1__UpdateNoticeItem*);
    @endcode

  - <ns1:UpdateNoticeItemResponse> @ref _ns1__UpdateNoticeItemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateNoticeItemResponse(struct soap*, _ns1__UpdateNoticeItemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateNoticeItemResponse(struct soap*, _ns1__UpdateNoticeItemResponse*);
    @endcode

  - <ns1:DeleteNoticeItem> @ref _ns1__DeleteNoticeItem
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteNoticeItem(struct soap*, _ns1__DeleteNoticeItem*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteNoticeItem(struct soap*, _ns1__DeleteNoticeItem*);
    @endcode

  - <ns1:DeleteNoticeItemResponse> @ref _ns1__DeleteNoticeItemResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteNoticeItemResponse(struct soap*, _ns1__DeleteNoticeItemResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteNoticeItemResponse(struct soap*, _ns1__DeleteNoticeItemResponse*);
    @endcode

  - <ns1:InserNoticeToSomeOne> @ref _ns1__InserNoticeToSomeOne
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__InserNoticeToSomeOne(struct soap*, _ns1__InserNoticeToSomeOne*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__InserNoticeToSomeOne(struct soap*, _ns1__InserNoticeToSomeOne*);
    @endcode

  - <ns1:InserNoticeToSomeOneResponse> @ref _ns1__InserNoticeToSomeOneResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__InserNoticeToSomeOneResponse(struct soap*, _ns1__InserNoticeToSomeOneResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__InserNoticeToSomeOneResponse(struct soap*, _ns1__InserNoticeToSomeOneResponse*);
    @endcode

  - <ns1:GetReturnProportionRecord> @ref _ns1__GetReturnProportionRecord
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetReturnProportionRecord(struct soap*, _ns1__GetReturnProportionRecord*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetReturnProportionRecord(struct soap*, _ns1__GetReturnProportionRecord*);
    @endcode

  - <ns1:GetReturnProportionRecordResponse> @ref _ns1__GetReturnProportionRecordResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetReturnProportionRecordResponse(struct soap*, _ns1__GetReturnProportionRecordResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetReturnProportionRecordResponse(struct soap*, _ns1__GetReturnProportionRecordResponse*);
    @endcode

  - <ns1:AddtReturnProportion> @ref _ns1__AddtReturnProportion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddtReturnProportion(struct soap*, _ns1__AddtReturnProportion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddtReturnProportion(struct soap*, _ns1__AddtReturnProportion*);
    @endcode

  - <ns1:AddtReturnProportionResponse> @ref _ns1__AddtReturnProportionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddtReturnProportionResponse(struct soap*, _ns1__AddtReturnProportionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddtReturnProportionResponse(struct soap*, _ns1__AddtReturnProportionResponse*);
    @endcode

  - <ns1:UpdatetReturnProportion> @ref _ns1__UpdatetReturnProportion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdatetReturnProportion(struct soap*, _ns1__UpdatetReturnProportion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdatetReturnProportion(struct soap*, _ns1__UpdatetReturnProportion*);
    @endcode

  - <ns1:UpdatetReturnProportionResponse> @ref _ns1__UpdatetReturnProportionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdatetReturnProportionResponse(struct soap*, _ns1__UpdatetReturnProportionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdatetReturnProportionResponse(struct soap*, _ns1__UpdatetReturnProportionResponse*);
    @endcode

  - <ns1:DeletetReturnProportion> @ref _ns1__DeletetReturnProportion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeletetReturnProportion(struct soap*, _ns1__DeletetReturnProportion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeletetReturnProportion(struct soap*, _ns1__DeletetReturnProportion*);
    @endcode

  - <ns1:DeletetReturnProportionResponse> @ref _ns1__DeletetReturnProportionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeletetReturnProportionResponse(struct soap*, _ns1__DeletetReturnProportionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeletetReturnProportionResponse(struct soap*, _ns1__DeletetReturnProportionResponse*);
    @endcode

  - <ns1:GetPhoneNumberBelongByCondition> @ref _ns1__GetPhoneNumberBelongByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPhoneNumberBelongByCondition(struct soap*, _ns1__GetPhoneNumberBelongByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPhoneNumberBelongByCondition(struct soap*, _ns1__GetPhoneNumberBelongByCondition*);
    @endcode

  - <ns1:GetPhoneNumberBelongByConditionResponse> @ref _ns1__GetPhoneNumberBelongByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPhoneNumberBelongByConditionResponse(struct soap*, _ns1__GetPhoneNumberBelongByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPhoneNumberBelongByConditionResponse(struct soap*, _ns1__GetPhoneNumberBelongByConditionResponse*);
    @endcode

  - <ns1:UpdatePhoneNumberBelong> @ref _ns1__UpdatePhoneNumberBelong
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdatePhoneNumberBelong(struct soap*, _ns1__UpdatePhoneNumberBelong*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdatePhoneNumberBelong(struct soap*, _ns1__UpdatePhoneNumberBelong*);
    @endcode

  - <ns1:UpdatePhoneNumberBelongResponse> @ref _ns1__UpdatePhoneNumberBelongResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdatePhoneNumberBelongResponse(struct soap*, _ns1__UpdatePhoneNumberBelongResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdatePhoneNumberBelongResponse(struct soap*, _ns1__UpdatePhoneNumberBelongResponse*);
    @endcode

  - <ns1:AddPhoneNumberBelong> @ref _ns1__AddPhoneNumberBelong
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddPhoneNumberBelong(struct soap*, _ns1__AddPhoneNumberBelong*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddPhoneNumberBelong(struct soap*, _ns1__AddPhoneNumberBelong*);
    @endcode

  - <ns1:AddPhoneNumberBelongResponse> @ref _ns1__AddPhoneNumberBelongResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddPhoneNumberBelongResponse(struct soap*, _ns1__AddPhoneNumberBelongResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddPhoneNumberBelongResponse(struct soap*, _ns1__AddPhoneNumberBelongResponse*);
    @endcode

  - <ns1:DeletePhoneNumberBelong> @ref _ns1__DeletePhoneNumberBelong
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeletePhoneNumberBelong(struct soap*, _ns1__DeletePhoneNumberBelong*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeletePhoneNumberBelong(struct soap*, _ns1__DeletePhoneNumberBelong*);
    @endcode

  - <ns1:DeletePhoneNumberBelongResponse> @ref _ns1__DeletePhoneNumberBelongResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeletePhoneNumberBelongResponse(struct soap*, _ns1__DeletePhoneNumberBelongResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeletePhoneNumberBelongResponse(struct soap*, _ns1__DeletePhoneNumberBelongResponse*);
    @endcode

  - <ns1:GetCompanyInfo> @ref _ns1__GetCompanyInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetCompanyInfo(struct soap*, _ns1__GetCompanyInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetCompanyInfo(struct soap*, _ns1__GetCompanyInfo*);
    @endcode

  - <ns1:GetCompanyInfoResponse> @ref _ns1__GetCompanyInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetCompanyInfoResponse(struct soap*, _ns1__GetCompanyInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetCompanyInfoResponse(struct soap*, _ns1__GetCompanyInfoResponse*);
    @endcode

  - <ns1:UpdateCompanyInfo> @ref _ns1__UpdateCompanyInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateCompanyInfo(struct soap*, _ns1__UpdateCompanyInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateCompanyInfo(struct soap*, _ns1__UpdateCompanyInfo*);
    @endcode

  - <ns1:UpdateCompanyInfoResponse> @ref _ns1__UpdateCompanyInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateCompanyInfoResponse(struct soap*, _ns1__UpdateCompanyInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateCompanyInfoResponse(struct soap*, _ns1__UpdateCompanyInfoResponse*);
    @endcode

  - <ns1:GetCompanyAccount> @ref _ns1__GetCompanyAccount
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetCompanyAccount(struct soap*, _ns1__GetCompanyAccount*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetCompanyAccount(struct soap*, _ns1__GetCompanyAccount*);
    @endcode

  - <ns1:GetCompanyAccountResponse> @ref _ns1__GetCompanyAccountResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetCompanyAccountResponse(struct soap*, _ns1__GetCompanyAccountResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetCompanyAccountResponse(struct soap*, _ns1__GetCompanyAccountResponse*);
    @endcode

  - <ns1:AddCompanyAccount> @ref _ns1__AddCompanyAccount
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddCompanyAccount(struct soap*, _ns1__AddCompanyAccount*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddCompanyAccount(struct soap*, _ns1__AddCompanyAccount*);
    @endcode

  - <ns1:AddCompanyAccountResponse> @ref _ns1__AddCompanyAccountResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AddCompanyAccountResponse(struct soap*, _ns1__AddCompanyAccountResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AddCompanyAccountResponse(struct soap*, _ns1__AddCompanyAccountResponse*);
    @endcode

  - <ns1:UpdateCompanyAccount> @ref _ns1__UpdateCompanyAccount
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateCompanyAccount(struct soap*, _ns1__UpdateCompanyAccount*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateCompanyAccount(struct soap*, _ns1__UpdateCompanyAccount*);
    @endcode

  - <ns1:UpdateCompanyAccountResponse> @ref _ns1__UpdateCompanyAccountResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UpdateCompanyAccountResponse(struct soap*, _ns1__UpdateCompanyAccountResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UpdateCompanyAccountResponse(struct soap*, _ns1__UpdateCompanyAccountResponse*);
    @endcode

  - <ns1:DeleteCompanyAccount> @ref _ns1__DeleteCompanyAccount
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteCompanyAccount(struct soap*, _ns1__DeleteCompanyAccount*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteCompanyAccount(struct soap*, _ns1__DeleteCompanyAccount*);
    @endcode

  - <ns1:DeleteCompanyAccountResponse> @ref _ns1__DeleteCompanyAccountResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DeleteCompanyAccountResponse(struct soap*, _ns1__DeleteCompanyAccountResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DeleteCompanyAccountResponse(struct soap*, _ns1__DeleteCompanyAccountResponse*);
    @endcode

  - <ns1:GetClientVersion> @ref _ns1__GetClientVersion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetClientVersion(struct soap*, _ns1__GetClientVersion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetClientVersion(struct soap*, _ns1__GetClientVersion*);
    @endcode

  - <ns1:GetClientVersionResponse> @ref _ns1__GetClientVersionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetClientVersionResponse(struct soap*, _ns1__GetClientVersionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetClientVersionResponse(struct soap*, _ns1__GetClientVersionResponse*);
    @endcode

  - <ns1:queryPhoneNOInfo> @ref _ns1__queryPhoneNOInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__queryPhoneNOInfo(struct soap*, _ns1__queryPhoneNOInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__queryPhoneNOInfo(struct soap*, _ns1__queryPhoneNOInfo*);
    @endcode

  - <ns1:queryPhoneNOInfoResponse> @ref _ns1__queryPhoneNOInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__queryPhoneNOInfoResponse(struct soap*, _ns1__queryPhoneNOInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__queryPhoneNOInfoResponse(struct soap*, _ns1__queryPhoneNOInfoResponse*);
    @endcode

  - <ns1:Result> (use wsdl2h option -g to auto-generate)

  - <ns1:BuyMiniCard> @ref _ns1__BuyMiniCard
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__BuyMiniCard(struct soap*, _ns1__BuyMiniCard*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__BuyMiniCard(struct soap*, _ns1__BuyMiniCard*);
    @endcode

  - <ns1:BuyMiniCardResponse> @ref _ns1__BuyMiniCardResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__BuyMiniCardResponse(struct soap*, _ns1__BuyMiniCardResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__BuyMiniCardResponse(struct soap*, _ns1__BuyMiniCardResponse*);
    @endcode

  - <ns1:GetPhoneNoByCondition> @ref _ns1__GetPhoneNoByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPhoneNoByCondition(struct soap*, _ns1__GetPhoneNoByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPhoneNoByCondition(struct soap*, _ns1__GetPhoneNoByCondition*);
    @endcode

  - <ns1:GetPhoneNoByConditionResponse> @ref _ns1__GetPhoneNoByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPhoneNoByConditionResponse(struct soap*, _ns1__GetPhoneNoByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPhoneNoByConditionResponse(struct soap*, _ns1__GetPhoneNoByConditionResponse*);
    @endcode

  - <ns1:GetMyNoSection> @ref _ns1__GetMyNoSection
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetMyNoSection(struct soap*, _ns1__GetMyNoSection*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetMyNoSection(struct soap*, _ns1__GetMyNoSection*);
    @endcode

  - <ns1:GetMyNoSectionResponse> @ref _ns1__GetMyNoSectionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetMyNoSectionResponse(struct soap*, _ns1__GetMyNoSectionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetMyNoSectionResponse(struct soap*, _ns1__GetMyNoSectionResponse*);
    @endcode

  - <ns1:LockNo> @ref _ns1__LockNo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__LockNo(struct soap*, _ns1__LockNo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__LockNo(struct soap*, _ns1__LockNo*);
    @endcode

  - <ns1:LockNoResponse> @ref _ns1__LockNoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__LockNoResponse(struct soap*, _ns1__LockNoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__LockNoResponse(struct soap*, _ns1__LockNoResponse*);
    @endcode

  - <ns1:UnlockNo> @ref _ns1__UnlockNo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UnlockNo(struct soap*, _ns1__UnlockNo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UnlockNo(struct soap*, _ns1__UnlockNo*);
    @endcode

  - <ns1:UnlockNoResponse> @ref _ns1__UnlockNoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__UnlockNoResponse(struct soap*, _ns1__UnlockNoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__UnlockNoResponse(struct soap*, _ns1__UnlockNoResponse*);
    @endcode

  - <ns1:SubmitBusiness> @ref _ns1__SubmitBusiness
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SubmitBusiness(struct soap*, _ns1__SubmitBusiness*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SubmitBusiness(struct soap*, _ns1__SubmitBusiness*);
    @endcode

  - <ns1:SubmitBusinessResponse> @ref _ns1__SubmitBusinessResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SubmitBusinessResponse(struct soap*, _ns1__SubmitBusinessResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SubmitBusinessResponse(struct soap*, _ns1__SubmitBusinessResponse*);
    @endcode

  - <ns1:SellNo> @ref _ns1__SellNo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SellNo(struct soap*, _ns1__SellNo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SellNo(struct soap*, _ns1__SellNo*);
    @endcode

  - <ns1:SellNoResponse> @ref _ns1__SellNoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SellNoResponse(struct soap*, _ns1__SellNoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SellNoResponse(struct soap*, _ns1__SellNoResponse*);
    @endcode

  - <ns1:SellOhterCard> @ref _ns1__SellOhterCard
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SellOhterCard(struct soap*, _ns1__SellOhterCard*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SellOhterCard(struct soap*, _ns1__SellOhterCard*);
    @endcode

  - <ns1:SellOhterCardResponse> @ref _ns1__SellOhterCardResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SellOhterCardResponse(struct soap*, _ns1__SellOhterCardResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SellOhterCardResponse(struct soap*, _ns1__SellOhterCardResponse*);
    @endcode

  - <ns1:GetMiniCardRecord> @ref _ns1__GetMiniCardRecord
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetMiniCardRecord(struct soap*, _ns1__GetMiniCardRecord*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetMiniCardRecord(struct soap*, _ns1__GetMiniCardRecord*);
    @endcode

  - <ns1:GetMiniCardRecordResponse> @ref _ns1__GetMiniCardRecordResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetMiniCardRecordResponse(struct soap*, _ns1__GetMiniCardRecordResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetMiniCardRecordResponse(struct soap*, _ns1__GetMiniCardRecordResponse*);
    @endcode

  - <ns1:GetPayMiniCardByCondition> @ref _ns1__GetPayMiniCardByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayMiniCardByCondition(struct soap*, _ns1__GetPayMiniCardByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayMiniCardByCondition(struct soap*, _ns1__GetPayMiniCardByCondition*);
    @endcode

  - <ns1:GetPayMiniCardByConditionResponse> @ref _ns1__GetPayMiniCardByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayMiniCardByConditionResponse(struct soap*, _ns1__GetPayMiniCardByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayMiniCardByConditionResponse(struct soap*, _ns1__GetPayMiniCardByConditionResponse*);
    @endcode

  - <ns1:GetPayMiniCardHistoryByCondition> @ref _ns1__GetPayMiniCardHistoryByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayMiniCardHistoryByCondition(struct soap*, _ns1__GetPayMiniCardHistoryByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayMiniCardHistoryByCondition(struct soap*, _ns1__GetPayMiniCardHistoryByCondition*);
    @endcode

  - <ns1:GetPayMiniCardHistoryByConditionResponse> @ref _ns1__GetPayMiniCardHistoryByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPayMiniCardHistoryByConditionResponse(struct soap*, _ns1__GetPayMiniCardHistoryByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPayMiniCardHistoryByConditionResponse(struct soap*, _ns1__GetPayMiniCardHistoryByConditionResponse*);
    @endcode

  - <ns1:GetPhoneNoItemByCondition> @ref _ns1__GetPhoneNoItemByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPhoneNoItemByCondition(struct soap*, _ns1__GetPhoneNoItemByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPhoneNoItemByCondition(struct soap*, _ns1__GetPhoneNoItemByCondition*);
    @endcode

  - <ns1:GetPhoneNoItemByConditionResponse> @ref _ns1__GetPhoneNoItemByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPhoneNoItemByConditionResponse(struct soap*, _ns1__GetPhoneNoItemByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPhoneNoItemByConditionResponse(struct soap*, _ns1__GetPhoneNoItemByConditionResponse*);
    @endcode

  - <ns1:GetPhoneNoItemAndHistoryByCondition> @ref _ns1__GetPhoneNoItemAndHistoryByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPhoneNoItemAndHistoryByCondition(struct soap*, _ns1__GetPhoneNoItemAndHistoryByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPhoneNoItemAndHistoryByCondition(struct soap*, _ns1__GetPhoneNoItemAndHistoryByCondition*);
    @endcode

  - <ns1:GetPhoneNoItemAndHistoryByConditionResponse> @ref _ns1__GetPhoneNoItemAndHistoryByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetPhoneNoItemAndHistoryByConditionResponse(struct soap*, _ns1__GetPhoneNoItemAndHistoryByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetPhoneNoItemAndHistoryByConditionResponse(struct soap*, _ns1__GetPhoneNoItemAndHistoryByConditionResponse*);
    @endcode

  - <ns1:GetCardService> @ref _ns1__GetCardService
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetCardService(struct soap*, _ns1__GetCardService*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetCardService(struct soap*, _ns1__GetCardService*);
    @endcode

  - <ns1:GetCardServiceResponse> @ref _ns1__GetCardServiceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetCardServiceResponse(struct soap*, _ns1__GetCardServiceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetCardServiceResponse(struct soap*, _ns1__GetCardServiceResponse*);
    @endcode

  - <ns1:GetSellCardRecordByCondition> @ref _ns1__GetSellCardRecordByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetSellCardRecordByCondition(struct soap*, _ns1__GetSellCardRecordByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetSellCardRecordByCondition(struct soap*, _ns1__GetSellCardRecordByCondition*);
    @endcode

  - <ns1:GetSellCardRecordByConditionResponse> @ref _ns1__GetSellCardRecordByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetSellCardRecordByConditionResponse(struct soap*, _ns1__GetSellCardRecordByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetSellCardRecordByConditionResponse(struct soap*, _ns1__GetSellCardRecordByConditionResponse*);
    @endcode

  - <ns1:GetSellCardRecordHistoryByCondition> @ref _ns1__GetSellCardRecordHistoryByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetSellCardRecordHistoryByCondition(struct soap*, _ns1__GetSellCardRecordHistoryByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetSellCardRecordHistoryByCondition(struct soap*, _ns1__GetSellCardRecordHistoryByCondition*);
    @endcode

  - <ns1:GetSellCardRecordHistoryByConditionResponse> @ref _ns1__GetSellCardRecordHistoryByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetSellCardRecordHistoryByConditionResponse(struct soap*, _ns1__GetSellCardRecordHistoryByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetSellCardRecordHistoryByConditionResponse(struct soap*, _ns1__GetSellCardRecordHistoryByConditionResponse*);
    @endcode

  - <ns1:GetBusinessRecordByCondition> @ref _ns1__GetBusinessRecordByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetBusinessRecordByCondition(struct soap*, _ns1__GetBusinessRecordByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetBusinessRecordByCondition(struct soap*, _ns1__GetBusinessRecordByCondition*);
    @endcode

  - <ns1:GetBusinessRecordByConditionResponse> @ref _ns1__GetBusinessRecordByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetBusinessRecordByConditionResponse(struct soap*, _ns1__GetBusinessRecordByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetBusinessRecordByConditionResponse(struct soap*, _ns1__GetBusinessRecordByConditionResponse*);
    @endcode

  - <ns1:GettBusinessRecordHistoryByCondition> @ref _ns1__GettBusinessRecordHistoryByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GettBusinessRecordHistoryByCondition(struct soap*, _ns1__GettBusinessRecordHistoryByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GettBusinessRecordHistoryByCondition(struct soap*, _ns1__GettBusinessRecordHistoryByCondition*);
    @endcode

  - <ns1:GettBusinessRecordHistoryByConditionResponse> @ref _ns1__GettBusinessRecordHistoryByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GettBusinessRecordHistoryByConditionResponse(struct soap*, _ns1__GettBusinessRecordHistoryByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GettBusinessRecordHistoryByConditionResponse(struct soap*, _ns1__GettBusinessRecordHistoryByConditionResponse*);
    @endcode

  - <ns1:GetSellOtherCardRecordByCondition> @ref _ns1__GetSellOtherCardRecordByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetSellOtherCardRecordByCondition(struct soap*, _ns1__GetSellOtherCardRecordByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetSellOtherCardRecordByCondition(struct soap*, _ns1__GetSellOtherCardRecordByCondition*);
    @endcode

  - <ns1:GetSellOtherCardRecordByConditionResponse> @ref _ns1__GetSellOtherCardRecordByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetSellOtherCardRecordByConditionResponse(struct soap*, _ns1__GetSellOtherCardRecordByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetSellOtherCardRecordByConditionResponse(struct soap*, _ns1__GetSellOtherCardRecordByConditionResponse*);
    @endcode

  - <ns1:GettSellOtherCardRecordHistoryByCondition> @ref _ns1__GettSellOtherCardRecordHistoryByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GettSellOtherCardRecordHistoryByCondition(struct soap*, _ns1__GettSellOtherCardRecordHistoryByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GettSellOtherCardRecordHistoryByCondition(struct soap*, _ns1__GettSellOtherCardRecordHistoryByCondition*);
    @endcode

  - <ns1:GettSellOtherCardRecordHistoryByConditionResponse> @ref _ns1__GettSellOtherCardRecordHistoryByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GettSellOtherCardRecordHistoryByConditionResponse(struct soap*, _ns1__GettSellOtherCardRecordHistoryByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GettSellOtherCardRecordHistoryByConditionResponse(struct soap*, _ns1__GettSellOtherCardRecordHistoryByConditionResponse*);
    @endcode

  - <ns1:GetOtherCardList> @ref _ns1__GetOtherCardList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetOtherCardList(struct soap*, _ns1__GetOtherCardList*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetOtherCardList(struct soap*, _ns1__GetOtherCardList*);
    @endcode

  - <ns1:GetOtherCardListResponse> @ref _ns1__GetOtherCardListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetOtherCardListResponse(struct soap*, _ns1__GetOtherCardListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetOtherCardListResponse(struct soap*, _ns1__GetOtherCardListResponse*);
    @endcode

  - <ns1:GetStockCardItemByCondition> @ref _ns1__GetStockCardItemByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetStockCardItemByCondition(struct soap*, _ns1__GetStockCardItemByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetStockCardItemByCondition(struct soap*, _ns1__GetStockCardItemByCondition*);
    @endcode

  - <ns1:GetStockCardItemByConditionResponse> @ref _ns1__GetStockCardItemByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetStockCardItemByConditionResponse(struct soap*, _ns1__GetStockCardItemByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetStockCardItemByConditionResponse(struct soap*, _ns1__GetStockCardItemByConditionResponse*);
    @endcode

  - <ns1:GetStockCardItemAndHistoryByCondition> @ref _ns1__GetStockCardItemAndHistoryByCondition
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetStockCardItemAndHistoryByCondition(struct soap*, _ns1__GetStockCardItemAndHistoryByCondition*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetStockCardItemAndHistoryByCondition(struct soap*, _ns1__GetStockCardItemAndHistoryByCondition*);
    @endcode

  - <ns1:GetStockCardItemAndHistoryByConditionResponse> @ref _ns1__GetStockCardItemAndHistoryByConditionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetStockCardItemAndHistoryByConditionResponse(struct soap*, _ns1__GetStockCardItemAndHistoryByConditionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetStockCardItemAndHistoryByConditionResponse(struct soap*, _ns1__GetStockCardItemAndHistoryByConditionResponse*);
    @endcode

@section ns2 Top-level root elements of schema "http://microsoft.com/wsdl/types/"

*/

/* End of soapProxy.h */
