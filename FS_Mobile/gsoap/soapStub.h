/* soapStub.h
   Generated by gSOAP 2.8.3 from soapProxy.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#define SOAP_NAMESPACE_OF_ns1	"http://tempuri.org/"
#define SOAP_NAMESPACE_OF_ns2	"http://microsoft.com/wsdl/types/"
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_ns1__PayWithListResult
#define SOAP_TYPE_ns1__PayWithListResult (7)
/* ns1:PayWithListResult */
class SOAP_CMAC ns1__PayWithListResult
{
public:
	char *result;	/* optional element of type xsd:string */
	int count;	/* required element of type xsd:int */
	int successCount;	/* required element of type xsd:int */
	int failedCount;	/* required element of type xsd:int */
	class ns1__ArrayOfPayWithListItem *list;	/* optional element of type ns1:ArrayOfPayWithListItem */
	double totalMoney;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 7; } /* = unique id SOAP_TYPE_ns1__PayWithListResult */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PayWithListResult() { ns1__PayWithListResult::soap_default(NULL); }
	virtual ~ns1__PayWithListResult() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPayWithListItem
#define SOAP_TYPE_ns1__ArrayOfPayWithListItem (8)
/* ns1:ArrayOfPayWithListItem */
class SOAP_CMAC ns1__ArrayOfPayWithListItem
{
public:
	int __sizePayWithListItem;	/* sequence of elements <PayWithListItem> */
	class ns1__PayWithListItem **PayWithListItem;	/* optional element of type ns1:PayWithListItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE_ns1__ArrayOfPayWithListItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPayWithListItem() { ns1__ArrayOfPayWithListItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfPayWithListItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PayWithListItem
#define SOAP_TYPE_ns1__PayWithListItem (9)
/* ns1:PayWithListItem */
class SOAP_CMAC ns1__PayWithListItem
{
public:
	char *phoneNo;	/* optional element of type xsd:string */
	double money;	/* required element of type xsd:double */
	char *type;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE_ns1__PayWithListItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PayWithListItem() { ns1__PayWithListItem::soap_default(NULL); }
	virtual ~ns1__PayWithListItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPaymentItem
#define SOAP_TYPE_ns1__ArrayOfPaymentItem (10)
/* ns1:ArrayOfPaymentItem */
class SOAP_CMAC ns1__ArrayOfPaymentItem
{
public:
	int __sizePaymentItem;	/* sequence of elements <PaymentItem> */
	class ns1__PaymentItem **PaymentItem;	/* optional element of type ns1:PaymentItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE_ns1__ArrayOfPaymentItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPaymentItem() { ns1__ArrayOfPaymentItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfPaymentItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PaymentItem
#define SOAP_TYPE_ns1__PaymentItem (11)
/* ns1:PaymentItem */
class SOAP_CMAC ns1__PaymentItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *customerName;	/* optional element of type xsd:string */
	double customerBeforeMoney;	/* required element of type xsd:double */
	double customerAfterMoney;	/* required element of type xsd:double */
	char *clientType;	/* optional element of type xsd:string */
	char *telNo;	/* optional element of type xsd:string */
	double chargeMoney;	/* required element of type xsd:double */
	time_t chargeTime;	/* required element of type xsd:dateTime */
	char *NoLocation;	/* optional element of type xsd:string */
	double moneyBefore;	/* required element of type xsd:double */
	double moneyAfter;	/* required element of type xsd:double */
	char *state;	/* optional element of type xsd:string */
	char *brand;	/* optional element of type xsd:string */
	char *area;	/* optional element of type xsd:string */
	char *user_USCOREid;	/* optional element of type xsd:string */
	char *user_USCOREname;	/* optional element of type xsd:string */
	char *work_USCOREid;	/* optional element of type xsd:string */
	char *work_USCOREname;	/* optional element of type xsd:string */
	char *manager_USCOREname;	/* optional element of type xsd:string */
	double repay;	/* required element of type xsd:double */
	char *SP;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE_ns1__PaymentItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PaymentItem() { ns1__PaymentItem::soap_default(NULL); }
	virtual ~ns1__PaymentItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfTransaction
#define SOAP_TYPE_ns1__ArrayOfTransaction (12)
/* ns1:ArrayOfTransaction */
class SOAP_CMAC ns1__ArrayOfTransaction
{
public:
	int __sizeTransaction;	/* sequence of elements <Transaction> */
	class ns1__Transaction **Transaction;	/* optional element of type ns1:Transaction */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE_ns1__ArrayOfTransaction */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfTransaction() { ns1__ArrayOfTransaction::soap_default(NULL); }
	virtual ~ns1__ArrayOfTransaction() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Transaction
#define SOAP_TYPE_ns1__Transaction (13)
/* ns1:Transaction */
class SOAP_CMAC ns1__Transaction
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *userId;	/* required element of type ns2:guid */
	char *name;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *phoneNo;	/* optional element of type xsd:string */
	double accountBefore;	/* required element of type xsd:double */
	double processMoney;	/* required element of type xsd:double */
	double returnMoney;	/* required element of type xsd:double */
	double accountAfter;	/* required element of type xsd:double */
	time_t processTime;	/* required element of type xsd:dateTime */
	char *state;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE_ns1__Transaction */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Transaction() { ns1__Transaction::soap_default(NULL); }
	virtual ~ns1__Transaction() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfTransStaticsItem
#define SOAP_TYPE_ns1__ArrayOfTransStaticsItem (14)
/* ns1:ArrayOfTransStaticsItem */
class SOAP_CMAC ns1__ArrayOfTransStaticsItem
{
public:
	int __sizeTransStaticsItem;	/* sequence of elements <TransStaticsItem> */
	class ns1__TransStaticsItem **TransStaticsItem;	/* optional element of type ns1:TransStaticsItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE_ns1__ArrayOfTransStaticsItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfTransStaticsItem() { ns1__ArrayOfTransStaticsItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfTransStaticsItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TransStaticsItem
#define SOAP_TYPE_ns1__TransStaticsItem (15)
/* ns1:TransStaticsItem */
class SOAP_CMAC ns1__TransStaticsItem
{
public:
	char *transName;	/* optional element of type xsd:string */
	int count;	/* required element of type xsd:int */
	double totalPay;	/* required element of type xsd:double */
	double totalCharge;	/* required element of type xsd:double */
	double totalReturn;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE_ns1__TransStaticsItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TransStaticsItem() { ns1__TransStaticsItem::soap_default(NULL); }
	virtual ~ns1__TransStaticsItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPayInternetItem
#define SOAP_TYPE_ns1__ArrayOfPayInternetItem (16)
/* ns1:ArrayOfPayInternetItem */
class SOAP_CMAC ns1__ArrayOfPayInternetItem
{
public:
	int __sizePayInternetItem;	/* sequence of elements <PayInternetItem> */
	class ns1__PayInternetItem **PayInternetItem;	/* optional element of type ns1:PayInternetItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE_ns1__ArrayOfPayInternetItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPayInternetItem() { ns1__ArrayOfPayInternetItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfPayInternetItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PayInternetItem
#define SOAP_TYPE_ns1__PayInternetItem (17)
/* ns1:PayInternetItem */
class SOAP_CMAC ns1__PayInternetItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *userId;	/* required element of type ns2:guid */
	char *userName;	/* optional element of type xsd:string */
	time_t addDateTime;	/* required element of type xsd:dateTime */
	char *internentType;	/* optional element of type xsd:string */
	char *internetAccount;	/* optional element of type xsd:string */
	double money;	/* required element of type xsd:double */
	char *content;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	char *workId;	/* required element of type ns2:guid */
	char *work_USCOREname;	/* optional element of type xsd:string */
	char *manager_USCOREname;	/* optional element of type xsd:string */
	double moneyBefore;	/* required element of type xsd:double */
	double moneyAfter;	/* required element of type xsd:double */
	char *clientType;	/* optional element of type xsd:string */
	double returnMoney;	/* required element of type xsd:double */
	char *area;	/* optional element of type xsd:string */
	char *location;	/* optional element of type xsd:string */
	char *customerName;	/* optional element of type xsd:string */
	double customerBeforeMoney;	/* required element of type xsd:double */
	double customerAfterMoney;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE_ns1__PayInternetItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PayInternetItem() { ns1__PayInternetItem::soap_default(NULL); }
	virtual ~ns1__PayInternetItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPayGameItem
#define SOAP_TYPE_ns1__ArrayOfPayGameItem (18)
/* ns1:ArrayOfPayGameItem */
class SOAP_CMAC ns1__ArrayOfPayGameItem
{
public:
	int __sizePayGameItem;	/* sequence of elements <PayGameItem> */
	class ns1__PayGameItem **PayGameItem;	/* optional element of type ns1:PayGameItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE_ns1__ArrayOfPayGameItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPayGameItem() { ns1__ArrayOfPayGameItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfPayGameItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PayGameItem
#define SOAP_TYPE_ns1__PayGameItem (19)
/* ns1:PayGameItem */
class SOAP_CMAC ns1__PayGameItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *userId;	/* required element of type ns2:guid */
	char *userName;	/* optional element of type xsd:string */
	time_t addDateTime;	/* required element of type xsd:dateTime */
	char *gameType;	/* optional element of type xsd:string */
	char *gameAccount;	/* optional element of type xsd:string */
	double money;	/* required element of type xsd:double */
	char *content;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	char *workId;	/* required element of type ns2:guid */
	char *work_USCOREname;	/* optional element of type xsd:string */
	char *manager_USCOREname;	/* optional element of type xsd:string */
	double moneyBefore;	/* required element of type xsd:double */
	double moneyAfter;	/* required element of type xsd:double */
	char *clientType;	/* optional element of type xsd:string */
	double returnMoney;	/* required element of type xsd:double */
	char *customerName;	/* optional element of type xsd:string */
	double customerBeforeMoney;	/* required element of type xsd:double */
	double customerAfterMoney;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE_ns1__PayGameItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PayGameItem() { ns1__PayGameItem::soap_default(NULL); }
	virtual ~ns1__PayGameItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPayPublicTelItem
#define SOAP_TYPE_ns1__ArrayOfPayPublicTelItem (20)
/* ns1:ArrayOfPayPublicTelItem */
class SOAP_CMAC ns1__ArrayOfPayPublicTelItem
{
public:
	int __sizePayPublicTelItem;	/* sequence of elements <PayPublicTelItem> */
	class ns1__PayPublicTelItem **PayPublicTelItem;	/* optional element of type ns1:PayPublicTelItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE_ns1__ArrayOfPayPublicTelItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPayPublicTelItem() { ns1__ArrayOfPayPublicTelItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfPayPublicTelItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PayPublicTelItem
#define SOAP_TYPE_ns1__PayPublicTelItem (21)
/* ns1:PayPublicTelItem */
class SOAP_CMAC ns1__PayPublicTelItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *userId;	/* required element of type ns2:guid */
	char *userName;	/* optional element of type xsd:string */
	time_t addDateTime;	/* required element of type xsd:dateTime */
	char *telType;	/* optional element of type xsd:string */
	char *telAccount;	/* optional element of type xsd:string */
	double money;	/* required element of type xsd:double */
	char *content;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	char *workId;	/* required element of type ns2:guid */
	char *work_USCOREname;	/* optional element of type xsd:string */
	char *manager_USCOREname;	/* optional element of type xsd:string */
	double moneyBefore;	/* required element of type xsd:double */
	double moneyAfter;	/* required element of type xsd:double */
	char *clientType;	/* optional element of type xsd:string */
	double returnMoney;	/* required element of type xsd:double */
	char *area;	/* optional element of type xsd:string */
	char *location;	/* optional element of type xsd:string */
	char *customerName;	/* optional element of type xsd:string */
	double customerBeforeMoney;	/* required element of type xsd:double */
	double customerAfterMoney;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE_ns1__PayPublicTelItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PayPublicTelItem() { ns1__PayPublicTelItem::soap_default(NULL); }
	virtual ~ns1__PayPublicTelItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__User
#define SOAP_TYPE_ns1__User (22)
/* ns1:User */
class SOAP_CMAC ns1__User
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *loggingName;	/* optional element of type xsd:string */
	char *password;	/* optional element of type xsd:string */
	float money;	/* required element of type xsd:float */
	char *tel;	/* optional element of type xsd:string */
	char *mac;	/* optional element of type xsd:string */
	char *address;	/* optional element of type xsd:string */
	char *shopName;	/* optional element of type xsd:string */
	char *mobilePhone;	/* optional element of type xsd:string */
	char *pingying;	/* optional element of type xsd:string */
	char *realName;	/* optional element of type xsd:string */
	char *indentityNo;	/* optional element of type xsd:string */
	char *manager_USCOREid;	/* required element of type ns2:guid */
	char *managerName;	/* optional element of type xsd:string */
	char *moneyTail;	/* optional element of type xsd:string */
	char *level;	/* optional element of type xsd:string */
	time_t registerDatetime;	/* required element of type xsd:dateTime */
	bool isValidate;	/* required element of type xsd:boolean */
	char *btnList;	/* optional element of type xsd:string */
	char *userType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE_ns1__User */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__User() { ns1__User::soap_default(NULL); }
	virtual ~ns1__User() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReturnInfo
#define SOAP_TYPE_ns1__ReturnInfo (23)
/* ns1:ReturnInfo */
class SOAP_CMAC ns1__ReturnInfo
{
public:
	char *lastChargeTime;	/* optional element of type xsd:string */
	double curMoney;	/* required element of type xsd:double */
	class ns1__ArrayOfReturnInfoItem *list;	/* optional element of type ns1:ArrayOfReturnInfoItem */
	int total;	/* required element of type xsd:int */
	double processTotalMoney;	/* required element of type xsd:double */
	double returnTotalMoney;	/* required element of type xsd:double */
	double afterReturnTotalMoney;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE_ns1__ReturnInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReturnInfo() { ns1__ReturnInfo::soap_default(NULL); }
	virtual ~ns1__ReturnInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfReturnInfoItem
#define SOAP_TYPE_ns1__ArrayOfReturnInfoItem (24)
/* ns1:ArrayOfReturnInfoItem */
class SOAP_CMAC ns1__ArrayOfReturnInfoItem
{
public:
	int __sizeReturnInfoItem;	/* sequence of elements <ReturnInfoItem> */
	class ns1__ReturnInfoItem **ReturnInfoItem;	/* optional element of type ns1:ReturnInfoItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE_ns1__ArrayOfReturnInfoItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfReturnInfoItem() { ns1__ArrayOfReturnInfoItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfReturnInfoItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReturnInfoItem
#define SOAP_TYPE_ns1__ReturnInfoItem (25)
/* ns1:ReturnInfoItem */
class SOAP_CMAC ns1__ReturnInfoItem
{
public:
	char *type;	/* optional element of type xsd:string */
	double totalMoney;	/* required element of type xsd:double */
	double returnMoney;	/* required element of type xsd:double */
	int count;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE_ns1__ReturnInfoItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReturnInfoItem() { ns1__ReturnInfoItem::soap_default(NULL); }
	virtual ~ns1__ReturnInfoItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfWorker
#define SOAP_TYPE_ns1__ArrayOfWorker (26)
/* ns1:ArrayOfWorker */
class SOAP_CMAC ns1__ArrayOfWorker
{
public:
	int __sizeWorker;	/* sequence of elements <Worker> */
	class ns1__Worker **Worker;	/* optional element of type ns1:Worker */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE_ns1__ArrayOfWorker */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfWorker() { ns1__ArrayOfWorker::soap_default(NULL); }
	virtual ~ns1__ArrayOfWorker() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Worker
#define SOAP_TYPE_ns1__Worker (27)
/* ns1:Worker */
class SOAP_CMAC ns1__Worker
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *WorkerName;	/* optional element of type xsd:string */
	char *Password;	/* optional element of type xsd:string */
	char *MAC_USCOREAddress;	/* optional element of type xsd:string */
	char *CPU_USCORECode;	/* optional element of type xsd:string */
	char *Telephone;	/* optional element of type xsd:string */
	char *RealName;	/* optional element of type xsd:string */
	char *WorkerType;	/* optional element of type xsd:string */
	char *SessionId;	/* required element of type ns2:guid */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE_ns1__Worker */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Worker() { ns1__Worker::soap_default(NULL); }
	virtual ~ns1__Worker() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSystemFunction
#define SOAP_TYPE_ns1__ArrayOfSystemFunction (28)
/* ns1:ArrayOfSystemFunction */
class SOAP_CMAC ns1__ArrayOfSystemFunction
{
public:
	int __sizeSystemFunction;	/* sequence of elements <SystemFunction> */
	class ns1__SystemFunction **SystemFunction;	/* optional element of type ns1:SystemFunction */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE_ns1__ArrayOfSystemFunction */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSystemFunction() { ns1__ArrayOfSystemFunction::soap_default(NULL); }
	virtual ~ns1__ArrayOfSystemFunction() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SystemFunction
#define SOAP_TYPE_ns1__SystemFunction (29)
/* ns1:SystemFunction */
class SOAP_CMAC ns1__SystemFunction
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *FunctionName;	/* optional element of type xsd:string */
	char *FunctionPictureName;	/* optional element of type xsd:string */
	char *FunctionNamespace;	/* optional element of type xsd:string */
	char *FunctionScope;	/* optional element of type xsd:string */
	int Right;	/* required element of type xsd:int */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE_ns1__SystemFunction */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SystemFunction() { ns1__SystemFunction::soap_default(NULL); }
	virtual ~ns1__SystemFunction() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfReturnedItem
#define SOAP_TYPE_ns1__ArrayOfReturnedItem (30)
/* ns1:ArrayOfReturnedItem */
class SOAP_CMAC ns1__ArrayOfReturnedItem
{
public:
	int __sizeReturnedItem;	/* sequence of elements <ReturnedItem> */
	class ns1__ReturnedItem **ReturnedItem;	/* optional element of type ns1:ReturnedItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE_ns1__ArrayOfReturnedItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfReturnedItem() { ns1__ArrayOfReturnedItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfReturnedItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReturnedItem
#define SOAP_TYPE_ns1__ReturnedItem (31)
/* ns1:ReturnedItem */
class SOAP_CMAC ns1__ReturnedItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *userId;	/* required element of type ns2:guid */
	time_t datetime;	/* required element of type xsd:dateTime */
	char *returnType;	/* optional element of type xsd:string */
	char *operationId;	/* required element of type ns2:guid */
	double money;	/* required element of type xsd:double */
	double returnPoint;	/* required element of type xsd:double */
	double returnMoney;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE_ns1__ReturnedItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReturnedItem() { ns1__ReturnedItem::soap_default(NULL); }
	virtual ~ns1__ReturnedItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfAcountPaymentItem
#define SOAP_TYPE_ns1__ArrayOfAcountPaymentItem (32)
/* ns1:ArrayOfAcountPaymentItem */
class SOAP_CMAC ns1__ArrayOfAcountPaymentItem
{
public:
	int __sizeAcountPaymentItem;	/* sequence of elements <AcountPaymentItem> */
	class ns1__AcountPaymentItem **AcountPaymentItem;	/* optional element of type ns1:AcountPaymentItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 32; } /* = unique id SOAP_TYPE_ns1__ArrayOfAcountPaymentItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfAcountPaymentItem() { ns1__ArrayOfAcountPaymentItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfAcountPaymentItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__AcountPaymentItem
#define SOAP_TYPE_ns1__AcountPaymentItem (33)
/* ns1:AcountPaymentItem */
class SOAP_CMAC ns1__AcountPaymentItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *userId;	/* required element of type ns2:guid */
	char *userName;	/* optional element of type xsd:string */
	char *acountName;	/* optional element of type xsd:string */
	float payMoney;	/* required element of type xsd:float */
	char *payType;	/* optional element of type xsd:string */
	char *bankName;	/* optional element of type xsd:string */
	char *subBankName;	/* optional element of type xsd:string */
	time_t payTime;	/* required element of type xsd:dateTime */
	char *content;	/* optional element of type xsd:string */
	bool isCheck;	/* required element of type xsd:boolean */
	char *state;	/* optional element of type xsd:string */
	char *workerId;	/* required element of type ns2:guid */
	char *workName;	/* optional element of type xsd:string */
	char *userType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 33; } /* = unique id SOAP_TYPE_ns1__AcountPaymentItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__AcountPaymentItem() { ns1__AcountPaymentItem::soap_default(NULL); }
	virtual ~ns1__AcountPaymentItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfDIC_USCOREContent
#define SOAP_TYPE_ns1__ArrayOfDIC_USCOREContent (34)
/* ns1:ArrayOfDIC_Content */
class SOAP_CMAC ns1__ArrayOfDIC_USCOREContent
{
public:
	int __sizeDIC_USCOREContent;	/* sequence of elements <DIC_Content> */
	class ns1__DIC_USCOREContent **DIC_USCOREContent;	/* optional element of type ns1:DIC_Content */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 34; } /* = unique id SOAP_TYPE_ns1__ArrayOfDIC_USCOREContent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfDIC_USCOREContent() { ns1__ArrayOfDIC_USCOREContent::soap_default(NULL); }
	virtual ~ns1__ArrayOfDIC_USCOREContent() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DIC_USCOREContent
#define SOAP_TYPE_ns1__DIC_USCOREContent (35)
/* ns1:DIC_Content */
class SOAP_CMAC ns1__DIC_USCOREContent
{
public:
	char *Name;	/* optional element of type xsd:string */
	char *Code;	/* optional element of type xsd:string */
	char *Category;	/* optional element of type xsd:string */
	bool Enabled;	/* required element of type xsd:boolean */
	char *content;	/* optional element of type xsd:string */
	char *val1;	/* optional element of type xsd:string */
	char *val2;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 35; } /* = unique id SOAP_TYPE_ns1__DIC_USCOREContent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DIC_USCOREContent() { ns1__DIC_USCOREContent::soap_default(NULL); }
	virtual ~ns1__DIC_USCOREContent() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfDIC_USCORECategory
#define SOAP_TYPE_ns1__ArrayOfDIC_USCORECategory (36)
/* ns1:ArrayOfDIC_Category */
class SOAP_CMAC ns1__ArrayOfDIC_USCORECategory
{
public:
	int __sizeDIC_USCORECategory;	/* sequence of elements <DIC_Category> */
	class ns1__DIC_USCORECategory **DIC_USCORECategory;	/* optional element of type ns1:DIC_Category */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 36; } /* = unique id SOAP_TYPE_ns1__ArrayOfDIC_USCORECategory */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfDIC_USCORECategory() { ns1__ArrayOfDIC_USCORECategory::soap_default(NULL); }
	virtual ~ns1__ArrayOfDIC_USCORECategory() { }
};
#endif

#ifndef SOAP_TYPE_ns1__DIC_USCORECategory
#define SOAP_TYPE_ns1__DIC_USCORECategory (37)
/* ns1:DIC_Category */
class SOAP_CMAC ns1__DIC_USCORECategory
{
public:
	char *Category;	/* optional element of type xsd:string */
	bool Editable;	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 37; } /* = unique id SOAP_TYPE_ns1__DIC_USCORECategory */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__DIC_USCORECategory() { ns1__DIC_USCORECategory::soap_default(NULL); }
	virtual ~ns1__DIC_USCORECategory() { }
};
#endif

#ifndef SOAP_TYPE_ns1__TableStatistics
#define SOAP_TYPE_ns1__TableStatistics (38)
/* ns1:TableStatistics */
class SOAP_CMAC ns1__TableStatistics
{
public:
	int total;	/* required element of type xsd:int */
	double sum1;	/* required element of type xsd:double */
	double sum2;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 38; } /* = unique id SOAP_TYPE_ns1__TableStatistics */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__TableStatistics() { ns1__TableStatistics::soap_default(NULL); }
	virtual ~ns1__TableStatistics() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Notice
#define SOAP_TYPE_ns1__Notice (39)
/* ns1:Notice */
class SOAP_CMAC ns1__Notice
{
public:
	int total;	/* required element of type xsd:int */
	int totalPage;	/* required element of type xsd:int */
	int pageSize;	/* required element of type xsd:int */
	int currentPageIndex;	/* required element of type xsd:int */
	class ns1__ArrayOfNoticeItem *listOfNotice;	/* optional element of type ns1:ArrayOfNoticeItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 39; } /* = unique id SOAP_TYPE_ns1__Notice */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Notice() { ns1__Notice::soap_default(NULL); }
	virtual ~ns1__Notice() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfNoticeItem
#define SOAP_TYPE_ns1__ArrayOfNoticeItem (40)
/* ns1:ArrayOfNoticeItem */
class SOAP_CMAC ns1__ArrayOfNoticeItem
{
public:
	int __sizeNoticeItem;	/* sequence of elements <NoticeItem> */
	class ns1__NoticeItem **NoticeItem;	/* optional element of type ns1:NoticeItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 40; } /* = unique id SOAP_TYPE_ns1__ArrayOfNoticeItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfNoticeItem() { ns1__ArrayOfNoticeItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfNoticeItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__NoticeItem
#define SOAP_TYPE_ns1__NoticeItem (41)
/* ns1:NoticeItem */
class SOAP_CMAC ns1__NoticeItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *title;	/* optional element of type xsd:string */
	char *content;	/* optional element of type xsd:string */
	time_t publishDatetime;	/* required element of type xsd:dateTime */
	char *type;	/* optional element of type xsd:string */
	char *publisher_USCOREid;	/* required element of type ns2:guid */
	bool isEnable;	/* required element of type xsd:boolean */
	int weight;	/* required element of type xsd:int */
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 41; } /* = unique id SOAP_TYPE_ns1__NoticeItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__NoticeItem() { ns1__NoticeItem::soap_default(NULL); }
	virtual ~ns1__NoticeItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfReturnProportion
#define SOAP_TYPE_ns1__ArrayOfReturnProportion (42)
/* ns1:ArrayOfReturnProportion */
class SOAP_CMAC ns1__ArrayOfReturnProportion
{
public:
	int __sizeReturnProportion;	/* sequence of elements <ReturnProportion> */
	class ns1__ReturnProportion **ReturnProportion;	/* optional element of type ns1:ReturnProportion */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 42; } /* = unique id SOAP_TYPE_ns1__ArrayOfReturnProportion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfReturnProportion() { ns1__ArrayOfReturnProportion::soap_default(NULL); }
	virtual ~ns1__ArrayOfReturnProportion() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ReturnProportion
#define SOAP_TYPE_ns1__ReturnProportion (43)
/* ns1:ReturnProportion */
class SOAP_CMAC ns1__ReturnProportion
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *ReturnClass;	/* optional element of type xsd:string */
	char *ReturnName;	/* optional element of type xsd:string */
	char *area;	/* optional element of type xsd:string */
	char *level;	/* optional element of type xsd:string */
	double returnPoint;	/* required element of type xsd:double */
	char *content;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 43; } /* = unique id SOAP_TYPE_ns1__ReturnProportion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ReturnProportion() { ns1__ReturnProportion::soap_default(NULL); }
	virtual ~ns1__ReturnProportion() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPhoneNumberBelong
#define SOAP_TYPE_ns1__ArrayOfPhoneNumberBelong (44)
/* ns1:ArrayOfPhoneNumberBelong */
class SOAP_CMAC ns1__ArrayOfPhoneNumberBelong
{
public:
	int __sizePhoneNumberBelong;	/* sequence of elements <PhoneNumberBelong> */
	class ns1__PhoneNumberBelong **PhoneNumberBelong;	/* optional element of type ns1:PhoneNumberBelong */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 44; } /* = unique id SOAP_TYPE_ns1__ArrayOfPhoneNumberBelong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPhoneNumberBelong() { ns1__ArrayOfPhoneNumberBelong::soap_default(NULL); }
	virtual ~ns1__ArrayOfPhoneNumberBelong() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneNumberBelong
#define SOAP_TYPE_ns1__PhoneNumberBelong (45)
/* ns1:PhoneNumberBelong */
class SOAP_CMAC ns1__PhoneNumberBelong
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *HaoDuan;	/* optional element of type xsd:string */
	char *QuHao;	/* optional element of type xsd:string */
	char *ShengFen;	/* optional element of type xsd:string */
	char *City;	/* optional element of type xsd:string */
	char *Area;	/* optional element of type xsd:string */
	time_t AddTime;	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 45; } /* = unique id SOAP_TYPE_ns1__PhoneNumberBelong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneNumberBelong() { ns1__PhoneNumberBelong::soap_default(NULL); }
	virtual ~ns1__PhoneNumberBelong() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CompanyInfo
#define SOAP_TYPE_ns1__CompanyInfo (46)
/* ns1:CompanyInfo */
class SOAP_CMAC ns1__CompanyInfo
{
public:
	char *name;	/* optional element of type xsd:string */
	char *address;	/* optional element of type xsd:string */
	char *manager;	/* optional element of type xsd:string */
	char *QQ;	/* optional element of type xsd:string */
	char *tel_USCORE1;	/* optional element of type xsd:string */
	char *tel_USCORE2;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 46; } /* = unique id SOAP_TYPE_ns1__CompanyInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CompanyInfo() { ns1__CompanyInfo::soap_default(NULL); }
	virtual ~ns1__CompanyInfo() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfCompanyAccount
#define SOAP_TYPE_ns1__ArrayOfCompanyAccount (47)
/* ns1:ArrayOfCompanyAccount */
class SOAP_CMAC ns1__ArrayOfCompanyAccount
{
public:
	int __sizeCompanyAccount;	/* sequence of elements <CompanyAccount> */
	class ns1__CompanyAccount **CompanyAccount;	/* optional element of type ns1:CompanyAccount */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 47; } /* = unique id SOAP_TYPE_ns1__ArrayOfCompanyAccount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfCompanyAccount() { ns1__ArrayOfCompanyAccount::soap_default(NULL); }
	virtual ~ns1__ArrayOfCompanyAccount() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CompanyAccount
#define SOAP_TYPE_ns1__CompanyAccount (48)
/* ns1:CompanyAccount */
class SOAP_CMAC ns1__CompanyAccount
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *AccountNo;	/* optional element of type xsd:string */
	char *Bank;	/* optional element of type xsd:string */
	char *userName;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 48; } /* = unique id SOAP_TYPE_ns1__CompanyAccount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CompanyAccount() { ns1__CompanyAccount::soap_default(NULL); }
	virtual ~ns1__CompanyAccount() { }
};
#endif

#ifndef SOAP_TYPE_ns1__Result
#define SOAP_TYPE_ns1__Result (49)
/* ns1:Result */
class SOAP_CMAC ns1__Result
{
public:
	char *UserName;	/* optional element of type xsd:string */
	char *Balance;	/* optional element of type xsd:string */
	char *PhoneType;	/* optional element of type xsd:string */
	char *AccessNum;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 49; } /* = unique id SOAP_TYPE_ns1__Result */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__Result() { ns1__Result::soap_default(NULL); }
	virtual ~ns1__Result() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneNoList
#define SOAP_TYPE_ns1__PhoneNoList (50)
/* ns1:PhoneNoList */
class SOAP_CMAC ns1__PhoneNoList
{
public:
	int total;	/* required element of type xsd:int */
	int totalPage;	/* required element of type xsd:int */
	int pageSize;	/* required element of type xsd:int */
	int currentPageIndex;	/* required element of type xsd:int */
	class ns1__ArrayOfPhoneNoItem *listOfPhoneNo;	/* optional element of type ns1:ArrayOfPhoneNoItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 50; } /* = unique id SOAP_TYPE_ns1__PhoneNoList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneNoList() { ns1__PhoneNoList::soap_default(NULL); }
	virtual ~ns1__PhoneNoList() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPhoneNoItem
#define SOAP_TYPE_ns1__ArrayOfPhoneNoItem (51)
/* ns1:ArrayOfPhoneNoItem */
class SOAP_CMAC ns1__ArrayOfPhoneNoItem
{
public:
	int __sizePhoneNoItem;	/* sequence of elements <PhoneNoItem> */
	class ns1__PhoneNoItem **PhoneNoItem;	/* optional element of type ns1:PhoneNoItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 51; } /* = unique id SOAP_TYPE_ns1__ArrayOfPhoneNoItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPhoneNoItem() { ns1__ArrayOfPhoneNoItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfPhoneNoItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PhoneNoItem
#define SOAP_TYPE_ns1__PhoneNoItem (52)
/* ns1:PhoneNoItem */
class SOAP_CMAC ns1__PhoneNoItem
{
public:
	char *id;	/* required element of type ns2:guid */
	char *No;	/* optional element of type xsd:string */
	char *NoSection;	/* optional element of type xsd:string */
	char *inNetPolicy;	/* optional element of type xsd:string */
	double NoPrice;	/* required element of type xsd:double */
	char *area;	/* optional element of type xsd:string */
	int weight;	/* required element of type xsd:int */
	char *state;	/* optional element of type xsd:string */
	time_t lockDateime;	/* required element of type xsd:dateTime */
	char *getterId;	/* required element of type ns2:guid */
	char *getterName;	/* optional element of type xsd:string */
	time_t getDateime;	/* required element of type xsd:dateTime */
	char *assignerId;	/* required element of type ns2:guid */
	char *assignerName;	/* optional element of type xsd:string */
	time_t assignDateime;	/* required element of type xsd:dateTime */
	char *userId;	/* required element of type ns2:guid */
	char *userName;	/* optional element of type xsd:string */
	time_t usedDateime;	/* required element of type xsd:dateTime */
	char *sp;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 52; } /* = unique id SOAP_TYPE_ns1__PhoneNoItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PhoneNoItem() { ns1__PhoneNoItem::soap_default(NULL); }
	virtual ~ns1__PhoneNoItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfString
#define SOAP_TYPE_ns1__ArrayOfString (53)
/* ns1:ArrayOfString */
class SOAP_CMAC ns1__ArrayOfString
{
public:
	int __sizestring;	/* sequence of elements <string> */
	char **string;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 53; } /* = unique id SOAP_TYPE_ns1__ArrayOfString */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfString() { ns1__ArrayOfString::soap_default(NULL); }
	virtual ~ns1__ArrayOfString() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfMiniCardItem
#define SOAP_TYPE_ns1__ArrayOfMiniCardItem (54)
/* ns1:ArrayOfMiniCardItem */
class SOAP_CMAC ns1__ArrayOfMiniCardItem
{
public:
	int __sizeMiniCardItem;	/* sequence of elements <MiniCardItem> */
	class ns1__MiniCardItem **MiniCardItem;	/* optional element of type ns1:MiniCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 54; } /* = unique id SOAP_TYPE_ns1__ArrayOfMiniCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfMiniCardItem() { ns1__ArrayOfMiniCardItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfMiniCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__MiniCardItem
#define SOAP_TYPE_ns1__MiniCardItem (55)
/* ns1:MiniCardItem */
class SOAP_CMAC ns1__MiniCardItem
{
public:
	char *id;	/* required element of type ns2:guid */
	char *cardNo;	/* optional element of type xsd:string */
	char *noSection;	/* optional element of type xsd:string */
	char *SP;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	char *getWorkerId;	/* required element of type ns2:guid */
	char *getWorkerName;	/* optional element of type xsd:string */
	char *workerId;	/* required element of type ns2:guid */
	char *workerName;	/* optional element of type xsd:string */
	char *userId;	/* required element of type ns2:guid */
	char *userName;	/* optional element of type xsd:string */
	time_t getDate;	/* required element of type xsd:dateTime */
	time_t assignDate;	/* required element of type xsd:dateTime */
	time_t sellDate;	/* required element of type xsd:dateTime */
	time_t usedDate;	/* required element of type xsd:dateTime */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 55; } /* = unique id SOAP_TYPE_ns1__MiniCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__MiniCardItem() { ns1__MiniCardItem::soap_default(NULL); }
	virtual ~ns1__MiniCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfPayMiniCardItem
#define SOAP_TYPE_ns1__ArrayOfPayMiniCardItem (56)
/* ns1:ArrayOfPayMiniCardItem */
class SOAP_CMAC ns1__ArrayOfPayMiniCardItem
{
public:
	int __sizePayMiniCardItem;	/* sequence of elements <PayMiniCardItem> */
	class ns1__PayMiniCardItem **PayMiniCardItem;	/* optional element of type ns1:PayMiniCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 56; } /* = unique id SOAP_TYPE_ns1__ArrayOfPayMiniCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfPayMiniCardItem() { ns1__ArrayOfPayMiniCardItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfPayMiniCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__PayMiniCardItem
#define SOAP_TYPE_ns1__PayMiniCardItem (57)
/* ns1:PayMiniCardItem */
class SOAP_CMAC ns1__PayMiniCardItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *userId;	/* required element of type ns2:guid */
	char *userName;	/* optional element of type xsd:string */
	time_t addDateTime;	/* required element of type xsd:dateTime */
	char *managerId;	/* required element of type ns2:guid */
	char *managerName;	/* optional element of type xsd:string */
	double money;	/* required element of type xsd:double */
	char *content;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	char *workId;	/* required element of type ns2:guid */
	char *work_USCOREname;	/* optional element of type xsd:string */
	char *workType;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	char *SP;	/* optional element of type xsd:string */
	int cardNum;	/* required element of type xsd:int */
	double moneyBefore;	/* required element of type xsd:double */
	double moneyAfter;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 57; } /* = unique id SOAP_TYPE_ns1__PayMiniCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__PayMiniCardItem() { ns1__PayMiniCardItem::soap_default(NULL); }
	virtual ~ns1__PayMiniCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfCardService
#define SOAP_TYPE_ns1__ArrayOfCardService (58)
/* ns1:ArrayOfCardService */
class SOAP_CMAC ns1__ArrayOfCardService
{
public:
	int __sizeCardService;	/* sequence of elements <CardService> */
	class ns1__CardService **CardService;	/* optional element of type ns1:CardService */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 58; } /* = unique id SOAP_TYPE_ns1__ArrayOfCardService */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfCardService() { ns1__ArrayOfCardService::soap_default(NULL); }
	virtual ~ns1__ArrayOfCardService() { }
};
#endif

#ifndef SOAP_TYPE_ns1__CardService
#define SOAP_TYPE_ns1__CardService (59)
/* ns1:CardService */
class SOAP_CMAC ns1__CardService
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *SP;	/* optional element of type xsd:string */
	char *serviceName;	/* optional element of type xsd:string */
	bool isFreq;	/* required element of type xsd:boolean */
	char *serviceSpec;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 59; } /* = unique id SOAP_TYPE_ns1__CardService */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__CardService() { ns1__CardService::soap_default(NULL); }
	virtual ~ns1__CardService() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSellCardItem
#define SOAP_TYPE_ns1__ArrayOfSellCardItem (60)
/* ns1:ArrayOfSellCardItem */
class SOAP_CMAC ns1__ArrayOfSellCardItem
{
public:
	int __sizeSellCardItem;	/* sequence of elements <SellCardItem> */
	class ns1__SellCardItem **SellCardItem;	/* optional element of type ns1:SellCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 60; } /* = unique id SOAP_TYPE_ns1__ArrayOfSellCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSellCardItem() { ns1__ArrayOfSellCardItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfSellCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SellCardItem
#define SOAP_TYPE_ns1__SellCardItem (61)
/* ns1:SellCardItem */
class SOAP_CMAC ns1__SellCardItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *telNo;	/* optional element of type xsd:string */
	char *miniNo;	/* optional element of type xsd:string */
	time_t sellTime;	/* required element of type xsd:dateTime */
	char *passwd;	/* optional element of type xsd:string */
	char *brand;	/* optional element of type xsd:string */
	char *brandNo;	/* optional element of type xsd:string */
	char *cardPrice;	/* optional element of type xsd:string */
	bool isOtherService;	/* required element of type xsd:boolean */
	double chargeMoney;	/* required element of type xsd:double */
	double moneyBefore;	/* required element of type xsd:double */
	double moneyAfter;	/* required element of type xsd:double */
	char *state;	/* optional element of type xsd:string */
	char *user_USCOREid;	/* required element of type ns2:guid */
	char *user_USCOREname;	/* optional element of type xsd:string */
	char *work_USCOREid;	/* required element of type ns2:guid */
	char *work_USCOREname;	/* optional element of type xsd:string */
	char *manager_USCOREid;	/* required element of type ns2:guid */
	char *manager_USCOREname;	/* optional element of type xsd:string */
	char *SP;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	char *noSection;	/* optional element of type xsd:string */
	double noPrice;	/* required element of type xsd:double */
	char *area;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 61; } /* = unique id SOAP_TYPE_ns1__SellCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SellCardItem() { ns1__SellCardItem::soap_default(NULL); }
	virtual ~ns1__SellCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfBusinessItem
#define SOAP_TYPE_ns1__ArrayOfBusinessItem (62)
/* ns1:ArrayOfBusinessItem */
class SOAP_CMAC ns1__ArrayOfBusinessItem
{
public:
	int __sizeBusinessItem;	/* sequence of elements <BusinessItem> */
	class ns1__BusinessItem **BusinessItem;	/* optional element of type ns1:BusinessItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 62; } /* = unique id SOAP_TYPE_ns1__ArrayOfBusinessItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfBusinessItem() { ns1__ArrayOfBusinessItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfBusinessItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__BusinessItem
#define SOAP_TYPE_ns1__BusinessItem (63)
/* ns1:BusinessItem */
class SOAP_CMAC ns1__BusinessItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *businessName;	/* optional element of type xsd:string */
	char *businessSpec;	/* optional element of type xsd:string */
	char *userId;	/* required element of type ns2:guid */
	char *userName;	/* optional element of type xsd:string */
	char *sp;	/* optional element of type xsd:string */
	char *no;	/* optional element of type xsd:string */
	char *passwd;	/* optional element of type xsd:string */
	time_t datetime;	/* required element of type xsd:dateTime */
	char *state;	/* optional element of type xsd:string */
	char *content;	/* optional element of type xsd:string */
	char *replay;	/* optional element of type xsd:string */
	char *workerId;	/* required element of type ns2:guid */
	char *workerName;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	double returnMoney;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 63; } /* = unique id SOAP_TYPE_ns1__BusinessItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__BusinessItem() { ns1__BusinessItem::soap_default(NULL); }
	virtual ~ns1__BusinessItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfSellOtherCardItem
#define SOAP_TYPE_ns1__ArrayOfSellOtherCardItem (64)
/* ns1:ArrayOfSellOtherCardItem */
class SOAP_CMAC ns1__ArrayOfSellOtherCardItem
{
public:
	int __sizeSellOtherCardItem;	/* sequence of elements <SellOtherCardItem> */
	class ns1__SellOtherCardItem **SellOtherCardItem;	/* optional element of type ns1:SellOtherCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 64; } /* = unique id SOAP_TYPE_ns1__ArrayOfSellOtherCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfSellOtherCardItem() { ns1__ArrayOfSellOtherCardItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfSellOtherCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__SellOtherCardItem
#define SOAP_TYPE_ns1__SellOtherCardItem (65)
/* ns1:SellOtherCardItem */
class SOAP_CMAC ns1__SellOtherCardItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *userId;	/* required element of type ns2:guid */
	char *userName;	/* optional element of type xsd:string */
	time_t datetime;	/* required element of type xsd:dateTime */
	char *cardType;	/* optional element of type xsd:string */
	char *cardName;	/* optional element of type xsd:string */
	char *cardSeq;	/* optional element of type xsd:string */
	char *cardPsw;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	char *workerId;	/* required element of type ns2:guid */
	char *workerName;	/* optional element of type xsd:string */
	double chargeMoney;	/* required element of type xsd:double */
	double moneyBefore;	/* required element of type xsd:double */
	double moneyAfter;	/* required element of type xsd:double */
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 65; } /* = unique id SOAP_TYPE_ns1__SellOtherCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__SellOtherCardItem() { ns1__SellOtherCardItem::soap_default(NULL); }
	virtual ~ns1__SellOtherCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfOtherCardItem
#define SOAP_TYPE_ns1__ArrayOfOtherCardItem (66)
/* ns1:ArrayOfOtherCardItem */
class SOAP_CMAC ns1__ArrayOfOtherCardItem
{
public:
	int __sizeOtherCardItem;	/* sequence of elements <OtherCardItem> */
	class ns1__OtherCardItem **OtherCardItem;	/* optional element of type ns1:OtherCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 66; } /* = unique id SOAP_TYPE_ns1__ArrayOfOtherCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfOtherCardItem() { ns1__ArrayOfOtherCardItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfOtherCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__OtherCardItem
#define SOAP_TYPE_ns1__OtherCardItem (67)
/* ns1:OtherCardItem */
class SOAP_CMAC ns1__OtherCardItem
{
public:
	char *cardType;	/* optional element of type xsd:string */
	char *cardName;	/* optional element of type xsd:string */
	double cardPrice;	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 67; } /* = unique id SOAP_TYPE_ns1__OtherCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__OtherCardItem() { ns1__OtherCardItem::soap_default(NULL); }
	virtual ~ns1__OtherCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfStockCardItem
#define SOAP_TYPE_ns1__ArrayOfStockCardItem (68)
/* ns1:ArrayOfStockCardItem */
class SOAP_CMAC ns1__ArrayOfStockCardItem
{
public:
	int __sizeStockCardItem;	/* sequence of elements <StockCardItem> */
	class ns1__StockCardItem **StockCardItem;	/* optional element of type ns1:StockCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 68; } /* = unique id SOAP_TYPE_ns1__ArrayOfStockCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__ArrayOfStockCardItem() { ns1__ArrayOfStockCardItem::soap_default(NULL); }
	virtual ~ns1__ArrayOfStockCardItem() { }
};
#endif

#ifndef SOAP_TYPE_ns1__StockCardItem
#define SOAP_TYPE_ns1__StockCardItem (69)
/* ns1:StockCardItem */
class SOAP_CMAC ns1__StockCardItem
{
public:
	char *Id;	/* required element of type ns2:guid */
	char *cardType;	/* optional element of type xsd:string */
	char *cardName;	/* optional element of type xsd:string */
	char *cardSeq;	/* optional element of type xsd:string */
	char *cardPsw;	/* optional element of type xsd:string */
	time_t getDate;	/* required element of type xsd:dateTime */
	char *getterId;	/* required element of type ns2:guid */
	char *getterName;	/* optional element of type xsd:string */
	time_t sellDate;	/* required element of type xsd:dateTime */
	char *userId;	/* required element of type ns2:guid */
	char *userName;	/* optional element of type xsd:string */
	char *state;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 69; } /* = unique id SOAP_TYPE_ns1__StockCardItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         ns1__StockCardItem() { ns1__StockCardItem::soap_default(NULL); }
	virtual ~ns1__StockCardItem() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLocation
#define SOAP_TYPE__ns1__GetLocation (70)
/* ns1:GetLocation */
class SOAP_CMAC _ns1__GetLocation
{
public:
	char *phoneNo;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 70; } /* = unique id SOAP_TYPE__ns1__GetLocation */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLocation() { _ns1__GetLocation::soap_default(NULL); }
	virtual ~_ns1__GetLocation() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetLocationResponse
#define SOAP_TYPE__ns1__GetLocationResponse (71)
/* ns1:GetLocationResponse */
class SOAP_CMAC _ns1__GetLocationResponse
{
public:
	char *GetLocationResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 71; } /* = unique id SOAP_TYPE__ns1__GetLocationResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetLocationResponse() { _ns1__GetLocationResponse::soap_default(NULL); }
	virtual ~_ns1__GetLocationResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayMoney
#define SOAP_TYPE__ns1__PayMoney (72)
/* ns1:PayMoney */
class SOAP_CMAC _ns1__PayMoney
{
public:
	char *phoneNo;	/* optional element of type xsd:string */
	char *money;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *userName;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	char *SP;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 72; } /* = unique id SOAP_TYPE__ns1__PayMoney */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayMoney() { _ns1__PayMoney::soap_default(NULL); }
	virtual ~_ns1__PayMoney() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayMoneyResponse
#define SOAP_TYPE__ns1__PayMoneyResponse (73)
/* ns1:PayMoneyResponse */
class SOAP_CMAC _ns1__PayMoneyResponse
{
public:
	char *PayMoneyResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 73; } /* = unique id SOAP_TYPE__ns1__PayMoneyResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayMoneyResponse() { _ns1__PayMoneyResponse::soap_default(NULL); }
	virtual ~_ns1__PayMoneyResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayMoneyWithList
#define SOAP_TYPE__ns1__PayMoneyWithList (74)
/* ns1:PayMoneyWithList */
class SOAP_CMAC _ns1__PayMoneyWithList
{
public:
	char *data;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *userName;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	char *SP;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 74; } /* = unique id SOAP_TYPE__ns1__PayMoneyWithList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayMoneyWithList() { _ns1__PayMoneyWithList::soap_default(NULL); }
	virtual ~_ns1__PayMoneyWithList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayMoneyWithListResponse
#define SOAP_TYPE__ns1__PayMoneyWithListResponse (75)
/* ns1:PayMoneyWithListResponse */
class SOAP_CMAC _ns1__PayMoneyWithListResponse
{
public:
	ns1__PayWithListResult *PayMoneyWithListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:PayWithListResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 75; } /* = unique id SOAP_TYPE__ns1__PayMoneyWithListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayMoneyWithListResponse() { _ns1__PayMoneyWithListResponse::soap_default(NULL); }
	virtual ~_ns1__PayMoneyWithListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RequstRollback
#define SOAP_TYPE__ns1__RequstRollback (76)
/* ns1:RequstRollback */
class SOAP_CMAC _ns1__RequstRollback
{
public:
	char *paymentId;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 76; } /* = unique id SOAP_TYPE__ns1__RequstRollback */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RequstRollback() { _ns1__RequstRollback::soap_default(NULL); }
	virtual ~_ns1__RequstRollback() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RequstRollbackResponse
#define SOAP_TYPE__ns1__RequstRollbackResponse (77)
/* ns1:RequstRollbackResponse */
class SOAP_CMAC _ns1__RequstRollbackResponse
{
public:
	char *RequstRollbackResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 77; } /* = unique id SOAP_TYPE__ns1__RequstRollbackResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RequstRollbackResponse() { _ns1__RequstRollbackResponse::soap_default(NULL); }
	virtual ~_ns1__RequstRollbackResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayInternet
#define SOAP_TYPE__ns1__PayInternet (78)
/* ns1:PayInternet */
class SOAP_CMAC _ns1__PayInternet
{
public:
	char *internetType;	/* optional element of type xsd:string */
	char *internetAccount;	/* optional element of type xsd:string */
	char *money;	/* optional element of type xsd:string */
	char *content;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *userName;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 78; } /* = unique id SOAP_TYPE__ns1__PayInternet */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayInternet() { _ns1__PayInternet::soap_default(NULL); }
	virtual ~_ns1__PayInternet() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayInternetResponse
#define SOAP_TYPE__ns1__PayInternetResponse (79)
/* ns1:PayInternetResponse */
class SOAP_CMAC _ns1__PayInternetResponse
{
public:
	char *PayInternetResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 79; } /* = unique id SOAP_TYPE__ns1__PayInternetResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayInternetResponse() { _ns1__PayInternetResponse::soap_default(NULL); }
	virtual ~_ns1__PayInternetResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayInternetWithList
#define SOAP_TYPE__ns1__PayInternetWithList (80)
/* ns1:PayInternetWithList */
class SOAP_CMAC _ns1__PayInternetWithList
{
public:
	char *data;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *userName;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 80; } /* = unique id SOAP_TYPE__ns1__PayInternetWithList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayInternetWithList() { _ns1__PayInternetWithList::soap_default(NULL); }
	virtual ~_ns1__PayInternetWithList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayInternetWithListResponse
#define SOAP_TYPE__ns1__PayInternetWithListResponse (81)
/* ns1:PayInternetWithListResponse */
class SOAP_CMAC _ns1__PayInternetWithListResponse
{
public:
	ns1__PayWithListResult *PayInternetWithListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:PayWithListResult */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 81; } /* = unique id SOAP_TYPE__ns1__PayInternetWithListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayInternetWithListResponse() { _ns1__PayInternetWithListResponse::soap_default(NULL); }
	virtual ~_ns1__PayInternetWithListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RequstInternetRollback
#define SOAP_TYPE__ns1__RequstInternetRollback (82)
/* ns1:RequstInternetRollback */
class SOAP_CMAC _ns1__RequstInternetRollback
{
public:
	char *paymentId;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 82; } /* = unique id SOAP_TYPE__ns1__RequstInternetRollback */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RequstInternetRollback() { _ns1__RequstInternetRollback::soap_default(NULL); }
	virtual ~_ns1__RequstInternetRollback() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RequstInternetRollbackResponse
#define SOAP_TYPE__ns1__RequstInternetRollbackResponse (83)
/* ns1:RequstInternetRollbackResponse */
class SOAP_CMAC _ns1__RequstInternetRollbackResponse
{
public:
	char *RequstInternetRollbackResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 83; } /* = unique id SOAP_TYPE__ns1__RequstInternetRollbackResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RequstInternetRollbackResponse() { _ns1__RequstInternetRollbackResponse::soap_default(NULL); }
	virtual ~_ns1__RequstInternetRollbackResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayGame
#define SOAP_TYPE__ns1__PayGame (84)
/* ns1:PayGame */
class SOAP_CMAC _ns1__PayGame
{
public:
	char *gameType;	/* optional element of type xsd:string */
	char *gameAccount;	/* optional element of type xsd:string */
	char *money;	/* optional element of type xsd:string */
	char *content;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *userName;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 84; } /* = unique id SOAP_TYPE__ns1__PayGame */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayGame() { _ns1__PayGame::soap_default(NULL); }
	virtual ~_ns1__PayGame() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayGameResponse
#define SOAP_TYPE__ns1__PayGameResponse (85)
/* ns1:PayGameResponse */
class SOAP_CMAC _ns1__PayGameResponse
{
public:
	char *PayGameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 85; } /* = unique id SOAP_TYPE__ns1__PayGameResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayGameResponse() { _ns1__PayGameResponse::soap_default(NULL); }
	virtual ~_ns1__PayGameResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayPublicTel
#define SOAP_TYPE__ns1__PayPublicTel (86)
/* ns1:PayPublicTel */
class SOAP_CMAC _ns1__PayPublicTel
{
public:
	char *telType;	/* optional element of type xsd:string */
	char *telAccount;	/* optional element of type xsd:string */
	char *money;	/* optional element of type xsd:string */
	char *content;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *userName;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 86; } /* = unique id SOAP_TYPE__ns1__PayPublicTel */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayPublicTel() { _ns1__PayPublicTel::soap_default(NULL); }
	virtual ~_ns1__PayPublicTel() { }
};
#endif

#ifndef SOAP_TYPE__ns1__PayPublicTelResponse
#define SOAP_TYPE__ns1__PayPublicTelResponse (87)
/* ns1:PayPublicTelResponse */
class SOAP_CMAC _ns1__PayPublicTelResponse
{
public:
	char *PayPublicTelResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 87; } /* = unique id SOAP_TYPE__ns1__PayPublicTelResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__PayPublicTelResponse() { _ns1__PayPublicTelResponse::soap_default(NULL); }
	virtual ~_ns1__PayPublicTelResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPaymentRecord
#define SOAP_TYPE__ns1__GetPaymentRecord (88)
/* ns1:GetPaymentRecord */
class SOAP_CMAC _ns1__GetPaymentRecord
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 88; } /* = unique id SOAP_TYPE__ns1__GetPaymentRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPaymentRecord() { _ns1__GetPaymentRecord::soap_default(NULL); }
	virtual ~_ns1__GetPaymentRecord() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPaymentRecordResponse
#define SOAP_TYPE__ns1__GetPaymentRecordResponse (89)
/* ns1:GetPaymentRecordResponse */
class SOAP_CMAC _ns1__GetPaymentRecordResponse
{
public:
	ns1__ArrayOfPaymentItem *GetPaymentRecordResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPaymentItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 89; } /* = unique id SOAP_TYPE__ns1__GetPaymentRecordResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPaymentRecordResponse() { _ns1__GetPaymentRecordResponse::soap_default(NULL); }
	virtual ~_ns1__GetPaymentRecordResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPaymentItem
#define SOAP_TYPE__ns1__GetPaymentItem (90)
/* ns1:GetPaymentItem */
class SOAP_CMAC _ns1__GetPaymentItem
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 90; } /* = unique id SOAP_TYPE__ns1__GetPaymentItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPaymentItem() { _ns1__GetPaymentItem::soap_default(NULL); }
	virtual ~_ns1__GetPaymentItem() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPaymentItemResponse
#define SOAP_TYPE__ns1__GetPaymentItemResponse (91)
/* ns1:GetPaymentItemResponse */
class SOAP_CMAC _ns1__GetPaymentItemResponse
{
public:
	ns1__PaymentItem *GetPaymentItemResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:PaymentItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 91; } /* = unique id SOAP_TYPE__ns1__GetPaymentItemResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPaymentItemResponse() { _ns1__GetPaymentItemResponse::soap_default(NULL); }
	virtual ~_ns1__GetPaymentItemResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetTransactionByCondition
#define SOAP_TYPE__ns1__GetTransactionByCondition (92)
/* ns1:GetTransactionByCondition */
class SOAP_CMAC _ns1__GetTransactionByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 92; } /* = unique id SOAP_TYPE__ns1__GetTransactionByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetTransactionByCondition() { _ns1__GetTransactionByCondition::soap_default(NULL); }
	virtual ~_ns1__GetTransactionByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetTransactionByConditionResponse
#define SOAP_TYPE__ns1__GetTransactionByConditionResponse (93)
/* ns1:GetTransactionByConditionResponse */
class SOAP_CMAC _ns1__GetTransactionByConditionResponse
{
public:
	ns1__ArrayOfTransaction *GetTransactionByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfTransaction */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 93; } /* = unique id SOAP_TYPE__ns1__GetTransactionByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetTransactionByConditionResponse() { _ns1__GetTransactionByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetTransactionByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetTransactionStaticsByCondition
#define SOAP_TYPE__ns1__GetTransactionStaticsByCondition (94)
/* ns1:GetTransactionStaticsByCondition */
class SOAP_CMAC _ns1__GetTransactionStaticsByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 94; } /* = unique id SOAP_TYPE__ns1__GetTransactionStaticsByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetTransactionStaticsByCondition() { _ns1__GetTransactionStaticsByCondition::soap_default(NULL); }
	virtual ~_ns1__GetTransactionStaticsByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetTransactionStaticsByConditionResponse
#define SOAP_TYPE__ns1__GetTransactionStaticsByConditionResponse (95)
/* ns1:GetTransactionStaticsByConditionResponse */
class SOAP_CMAC _ns1__GetTransactionStaticsByConditionResponse
{
public:
	ns1__ArrayOfTransStaticsItem *GetTransactionStaticsByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfTransStaticsItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 95; } /* = unique id SOAP_TYPE__ns1__GetTransactionStaticsByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetTransactionStaticsByConditionResponse() { _ns1__GetTransactionStaticsByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetTransactionStaticsByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPaymentOrPaymentHistoryByCondition
#define SOAP_TYPE__ns1__GetPaymentOrPaymentHistoryByCondition (96)
/* ns1:GetPaymentOrPaymentHistoryByCondition */
class SOAP_CMAC _ns1__GetPaymentOrPaymentHistoryByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 96; } /* = unique id SOAP_TYPE__ns1__GetPaymentOrPaymentHistoryByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPaymentOrPaymentHistoryByCondition() { _ns1__GetPaymentOrPaymentHistoryByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPaymentOrPaymentHistoryByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPaymentOrPaymentHistoryByConditionResponse
#define SOAP_TYPE__ns1__GetPaymentOrPaymentHistoryByConditionResponse (97)
/* ns1:GetPaymentOrPaymentHistoryByConditionResponse */
class SOAP_CMAC _ns1__GetPaymentOrPaymentHistoryByConditionResponse
{
public:
	ns1__ArrayOfPaymentItem *GetPaymentOrPaymentHistoryByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPaymentItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 97; } /* = unique id SOAP_TYPE__ns1__GetPaymentOrPaymentHistoryByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPaymentOrPaymentHistoryByConditionResponse() { _ns1__GetPaymentOrPaymentHistoryByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPaymentOrPaymentHistoryByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayInternetByCondition
#define SOAP_TYPE__ns1__GetPayInternetByCondition (98)
/* ns1:GetPayInternetByCondition */
class SOAP_CMAC _ns1__GetPayInternetByCondition
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 98; } /* = unique id SOAP_TYPE__ns1__GetPayInternetByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayInternetByCondition() { _ns1__GetPayInternetByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPayInternetByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayInternetByConditionResponse
#define SOAP_TYPE__ns1__GetPayInternetByConditionResponse (99)
/* ns1:GetPayInternetByConditionResponse */
class SOAP_CMAC _ns1__GetPayInternetByConditionResponse
{
public:
	ns1__ArrayOfPayInternetItem *GetPayInternetByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPayInternetItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 99; } /* = unique id SOAP_TYPE__ns1__GetPayInternetByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayInternetByConditionResponse() { _ns1__GetPayInternetByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPayInternetByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayInternetHistoryByCondition
#define SOAP_TYPE__ns1__GetPayInternetHistoryByCondition (100)
/* ns1:GetPayInternetHistoryByCondition */
class SOAP_CMAC _ns1__GetPayInternetHistoryByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 100; } /* = unique id SOAP_TYPE__ns1__GetPayInternetHistoryByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayInternetHistoryByCondition() { _ns1__GetPayInternetHistoryByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPayInternetHistoryByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayInternetHistoryByConditionResponse
#define SOAP_TYPE__ns1__GetPayInternetHistoryByConditionResponse (101)
/* ns1:GetPayInternetHistoryByConditionResponse */
class SOAP_CMAC _ns1__GetPayInternetHistoryByConditionResponse
{
public:
	ns1__ArrayOfPayInternetItem *GetPayInternetHistoryByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPayInternetItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 101; } /* = unique id SOAP_TYPE__ns1__GetPayInternetHistoryByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayInternetHistoryByConditionResponse() { _ns1__GetPayInternetHistoryByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPayInternetHistoryByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayGameByCondition
#define SOAP_TYPE__ns1__GetPayGameByCondition (102)
/* ns1:GetPayGameByCondition */
class SOAP_CMAC _ns1__GetPayGameByCondition
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 102; } /* = unique id SOAP_TYPE__ns1__GetPayGameByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayGameByCondition() { _ns1__GetPayGameByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPayGameByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayGameByConditionResponse
#define SOAP_TYPE__ns1__GetPayGameByConditionResponse (103)
/* ns1:GetPayGameByConditionResponse */
class SOAP_CMAC _ns1__GetPayGameByConditionResponse
{
public:
	ns1__ArrayOfPayGameItem *GetPayGameByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPayGameItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 103; } /* = unique id SOAP_TYPE__ns1__GetPayGameByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayGameByConditionResponse() { _ns1__GetPayGameByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPayGameByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayGameHistoryByCondition
#define SOAP_TYPE__ns1__GetPayGameHistoryByCondition (104)
/* ns1:GetPayGameHistoryByCondition */
class SOAP_CMAC _ns1__GetPayGameHistoryByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 104; } /* = unique id SOAP_TYPE__ns1__GetPayGameHistoryByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayGameHistoryByCondition() { _ns1__GetPayGameHistoryByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPayGameHistoryByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayGameHistoryByConditionResponse
#define SOAP_TYPE__ns1__GetPayGameHistoryByConditionResponse (105)
/* ns1:GetPayGameHistoryByConditionResponse */
class SOAP_CMAC _ns1__GetPayGameHistoryByConditionResponse
{
public:
	ns1__ArrayOfPayGameItem *GetPayGameHistoryByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPayGameItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 105; } /* = unique id SOAP_TYPE__ns1__GetPayGameHistoryByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayGameHistoryByConditionResponse() { _ns1__GetPayGameHistoryByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPayGameHistoryByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayPublicTelByCondition
#define SOAP_TYPE__ns1__GetPayPublicTelByCondition (106)
/* ns1:GetPayPublicTelByCondition */
class SOAP_CMAC _ns1__GetPayPublicTelByCondition
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 106; } /* = unique id SOAP_TYPE__ns1__GetPayPublicTelByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayPublicTelByCondition() { _ns1__GetPayPublicTelByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPayPublicTelByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayPublicTelByConditionResponse
#define SOAP_TYPE__ns1__GetPayPublicTelByConditionResponse (107)
/* ns1:GetPayPublicTelByConditionResponse */
class SOAP_CMAC _ns1__GetPayPublicTelByConditionResponse
{
public:
	ns1__ArrayOfPayPublicTelItem *GetPayPublicTelByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPayPublicTelItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 107; } /* = unique id SOAP_TYPE__ns1__GetPayPublicTelByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayPublicTelByConditionResponse() { _ns1__GetPayPublicTelByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPayPublicTelByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayPublicTelHistoryByCondition
#define SOAP_TYPE__ns1__GetPayPublicTelHistoryByCondition (108)
/* ns1:GetPayPublicTelHistoryByCondition */
class SOAP_CMAC _ns1__GetPayPublicTelHistoryByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 108; } /* = unique id SOAP_TYPE__ns1__GetPayPublicTelHistoryByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayPublicTelHistoryByCondition() { _ns1__GetPayPublicTelHistoryByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPayPublicTelHistoryByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayPublicTelHistoryByConditionResponse
#define SOAP_TYPE__ns1__GetPayPublicTelHistoryByConditionResponse (109)
/* ns1:GetPayPublicTelHistoryByConditionResponse */
class SOAP_CMAC _ns1__GetPayPublicTelHistoryByConditionResponse
{
public:
	ns1__ArrayOfPayPublicTelItem *GetPayPublicTelHistoryByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPayPublicTelItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 109; } /* = unique id SOAP_TYPE__ns1__GetPayPublicTelHistoryByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayPublicTelHistoryByConditionResponse() { _ns1__GetPayPublicTelHistoryByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPayPublicTelHistoryByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__HelloWorld
#define SOAP_TYPE__ns1__HelloWorld (110)
/* ns1:HelloWorld */
class SOAP_CMAC _ns1__HelloWorld
{
public:
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 110; } /* = unique id SOAP_TYPE__ns1__HelloWorld */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__HelloWorld() { _ns1__HelloWorld::soap_default(NULL); }
	virtual ~_ns1__HelloWorld() { }
};
#endif

#ifndef SOAP_TYPE__ns1__HelloWorldResponse
#define SOAP_TYPE__ns1__HelloWorldResponse (111)
/* ns1:HelloWorldResponse */
class SOAP_CMAC _ns1__HelloWorldResponse
{
public:
	char *HelloWorldResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 111; } /* = unique id SOAP_TYPE__ns1__HelloWorldResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__HelloWorldResponse() { _ns1__HelloWorldResponse::soap_default(NULL); }
	virtual ~_ns1__HelloWorldResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__loggout
#define SOAP_TYPE__ns1__loggout (112)
/* ns1:loggout */
class SOAP_CMAC _ns1__loggout
{
public:
	char *userId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 112; } /* = unique id SOAP_TYPE__ns1__loggout */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__loggout() { _ns1__loggout::soap_default(NULL); }
	virtual ~_ns1__loggout() { }
};
#endif

#ifndef SOAP_TYPE__ns1__loggoutResponse
#define SOAP_TYPE__ns1__loggoutResponse (113)
/* ns1:loggoutResponse */
class SOAP_CMAC _ns1__loggoutResponse
{
public:
	char *loggoutResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 113; } /* = unique id SOAP_TYPE__ns1__loggoutResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__loggoutResponse() { _ns1__loggoutResponse::soap_default(NULL); }
	virtual ~_ns1__loggoutResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__TestLogin
#define SOAP_TYPE__ns1__TestLogin (114)
/* ns1:TestLogin */
class SOAP_CMAC _ns1__TestLogin
{
public:
	char *Username;	/* optional element of type xsd:string */
	char *Password;	/* optional element of type xsd:string */
	char *Mac;	/* optional element of type xsd:string */
	char *ip;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 114; } /* = unique id SOAP_TYPE__ns1__TestLogin */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__TestLogin() { _ns1__TestLogin::soap_default(NULL); }
	virtual ~_ns1__TestLogin() { }
};
#endif

#ifndef SOAP_TYPE__ns1__TestLoginResponse
#define SOAP_TYPE__ns1__TestLoginResponse (115)
/* ns1:TestLoginResponse */
class SOAP_CMAC _ns1__TestLoginResponse
{
public:
	char *TestLoginResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 115; } /* = unique id SOAP_TYPE__ns1__TestLoginResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__TestLoginResponse() { _ns1__TestLoginResponse::soap_default(NULL); }
	virtual ~_ns1__TestLoginResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetUserInfo
#define SOAP_TYPE__ns1__GetUserInfo (116)
/* ns1:GetUserInfo */
class SOAP_CMAC _ns1__GetUserInfo
{
public:
	char *username;	/* optional element of type xsd:string */
	char *password;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 116; } /* = unique id SOAP_TYPE__ns1__GetUserInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetUserInfo() { _ns1__GetUserInfo::soap_default(NULL); }
	virtual ~_ns1__GetUserInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetUserInfoResponse
#define SOAP_TYPE__ns1__GetUserInfoResponse (117)
/* ns1:GetUserInfoResponse */
class SOAP_CMAC _ns1__GetUserInfoResponse
{
public:
	ns1__User *GetUserInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:User */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 117; } /* = unique id SOAP_TYPE__ns1__GetUserInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetUserInfoResponse() { _ns1__GetUserInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetUserInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RegisterUser
#define SOAP_TYPE__ns1__RegisterUser (118)
/* ns1:RegisterUser */
class SOAP_CMAC _ns1__RegisterUser
{
public:
	char *username;	/* optional element of type xsd:string */
	char *password;	/* optional element of type xsd:string */
	char *mac;	/* optional element of type xsd:string */
	char *adrTel;	/* optional element of type xsd:string */
	char *address;	/* optional element of type xsd:string */
	char *shopName;	/* optional element of type xsd:string */
	char *mobilePhone;	/* optional element of type xsd:string */
	char *realName;	/* optional element of type xsd:string */
	char *identifyNo;	/* optional element of type xsd:string */
	char *workerName;	/* optional element of type xsd:string */
	char *workerId;	/* optional element of type xsd:string */
	char *moneyTail;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 118; } /* = unique id SOAP_TYPE__ns1__RegisterUser */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RegisterUser() { _ns1__RegisterUser::soap_default(NULL); }
	virtual ~_ns1__RegisterUser() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RegisterUserResponse
#define SOAP_TYPE__ns1__RegisterUserResponse (119)
/* ns1:RegisterUserResponse */
class SOAP_CMAC _ns1__RegisterUserResponse
{
public:
	char *RegisterUserResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 119; } /* = unique id SOAP_TYPE__ns1__RegisterUserResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RegisterUserResponse() { _ns1__RegisterUserResponse::soap_default(NULL); }
	virtual ~_ns1__RegisterUserResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AlterPsw
#define SOAP_TYPE__ns1__AlterPsw (120)
/* ns1:AlterPsw */
class SOAP_CMAC _ns1__AlterPsw
{
public:
	char *user_USCOREid;	/* optional element of type xsd:string */
	char *newPsw;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 120; } /* = unique id SOAP_TYPE__ns1__AlterPsw */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AlterPsw() { _ns1__AlterPsw::soap_default(NULL); }
	virtual ~_ns1__AlterPsw() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AlterPswResponse
#define SOAP_TYPE__ns1__AlterPswResponse (121)
/* ns1:AlterPswResponse */
class SOAP_CMAC _ns1__AlterPswResponse
{
public:
	char *AlterPswResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 121; } /* = unique id SOAP_TYPE__ns1__AlterPswResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AlterPswResponse() { _ns1__AlterPswResponse::soap_default(NULL); }
	virtual ~_ns1__AlterPswResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AlterUserInfo
#define SOAP_TYPE__ns1__AlterUserInfo (122)
/* ns1:AlterUserInfo */
class SOAP_CMAC _ns1__AlterUserInfo
{
public:
	char *user_USCOREid;	/* optional element of type xsd:string */
	char *adrTel;	/* optional element of type xsd:string */
	char *address;	/* optional element of type xsd:string */
	char *shopName;	/* optional element of type xsd:string */
	char *mobilePhone;	/* optional element of type xsd:string */
	char *realName;	/* optional element of type xsd:string */
	char *identifyNo;	/* optional element of type xsd:string */
	char *workerName;	/* optional element of type xsd:string */
	char *moneyTail;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 122; } /* = unique id SOAP_TYPE__ns1__AlterUserInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AlterUserInfo() { _ns1__AlterUserInfo::soap_default(NULL); }
	virtual ~_ns1__AlterUserInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AlterUserInfoResponse
#define SOAP_TYPE__ns1__AlterUserInfoResponse (123)
/* ns1:AlterUserInfoResponse */
class SOAP_CMAC _ns1__AlterUserInfoResponse
{
public:
	char *AlterUserInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 123; } /* = unique id SOAP_TYPE__ns1__AlterUserInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AlterUserInfoResponse() { _ns1__AlterUserInfoResponse::soap_default(NULL); }
	virtual ~_ns1__AlterUserInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddAcountPayment
#define SOAP_TYPE__ns1__AddAcountPayment (124)
/* ns1:AddAcountPayment */
class SOAP_CMAC _ns1__AddAcountPayment
{
public:
	char *username;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	float money;	/* required element of type xsd:float */
	char *payType;	/* optional element of type xsd:string */
	char *bankName;	/* optional element of type xsd:string */
	char *subBankName;	/* optional element of type xsd:string */
	LONG64 payTime;	/* required element of type xsd:long */
	char *content;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 124; } /* = unique id SOAP_TYPE__ns1__AddAcountPayment */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddAcountPayment() { _ns1__AddAcountPayment::soap_default(NULL); }
	virtual ~_ns1__AddAcountPayment() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddAcountPaymentResponse
#define SOAP_TYPE__ns1__AddAcountPaymentResponse (125)
/* ns1:AddAcountPaymentResponse */
class SOAP_CMAC _ns1__AddAcountPaymentResponse
{
public:
	char *AddAcountPaymentResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 125; } /* = unique id SOAP_TYPE__ns1__AddAcountPaymentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddAcountPaymentResponse() { _ns1__AddAcountPaymentResponse::soap_default(NULL); }
	virtual ~_ns1__AddAcountPaymentResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReturnInfo
#define SOAP_TYPE__ns1__GetReturnInfo (126)
/* ns1:GetReturnInfo */
class SOAP_CMAC _ns1__GetReturnInfo
{
public:
	char *userId;	/* optional element of type xsd:string */
	char *clientLevel;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 126; } /* = unique id SOAP_TYPE__ns1__GetReturnInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReturnInfo() { _ns1__GetReturnInfo::soap_default(NULL); }
	virtual ~_ns1__GetReturnInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReturnInfoResponse
#define SOAP_TYPE__ns1__GetReturnInfoResponse (127)
/* ns1:GetReturnInfoResponse */
class SOAP_CMAC _ns1__GetReturnInfoResponse
{
public:
	ns1__ReturnInfo *GetReturnInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ReturnInfo */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 127; } /* = unique id SOAP_TYPE__ns1__GetReturnInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReturnInfoResponse() { _ns1__GetReturnInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetReturnInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CharegeReturnedMoney
#define SOAP_TYPE__ns1__CharegeReturnedMoney (128)
/* ns1:CharegeReturnedMoney */
class SOAP_CMAC _ns1__CharegeReturnedMoney
{
public:
	char *userId;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	char *clientLevel;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 128; } /* = unique id SOAP_TYPE__ns1__CharegeReturnedMoney */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CharegeReturnedMoney() { _ns1__CharegeReturnedMoney::soap_default(NULL); }
	virtual ~_ns1__CharegeReturnedMoney() { }
};
#endif

#ifndef SOAP_TYPE__ns1__CharegeReturnedMoneyResponse
#define SOAP_TYPE__ns1__CharegeReturnedMoneyResponse (129)
/* ns1:CharegeReturnedMoneyResponse */
class SOAP_CMAC _ns1__CharegeReturnedMoneyResponse
{
public:
	double CharegeReturnedMoneyResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:double */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 129; } /* = unique id SOAP_TYPE__ns1__CharegeReturnedMoneyResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__CharegeReturnedMoneyResponse() { _ns1__CharegeReturnedMoneyResponse::soap_default(NULL); }
	virtual ~_ns1__CharegeReturnedMoneyResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetWorkNameList
#define SOAP_TYPE__ns1__GetWorkNameList (130)
/* ns1:GetWorkNameList */
class SOAP_CMAC _ns1__GetWorkNameList
{
public:
	char *condition;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 130; } /* = unique id SOAP_TYPE__ns1__GetWorkNameList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetWorkNameList() { _ns1__GetWorkNameList::soap_default(NULL); }
	virtual ~_ns1__GetWorkNameList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetWorkNameListResponse
#define SOAP_TYPE__ns1__GetWorkNameListResponse (131)
/* ns1:GetWorkNameListResponse */
class SOAP_CMAC _ns1__GetWorkNameListResponse
{
public:
	ns1__ArrayOfWorker *GetWorkNameListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfWorker */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 131; } /* = unique id SOAP_TYPE__ns1__GetWorkNameListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetWorkNameListResponse() { _ns1__GetWorkNameListResponse::soap_default(NULL); }
	virtual ~_ns1__GetWorkNameListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetUserFunction
#define SOAP_TYPE__ns1__GetUserFunction (132)
/* ns1:GetUserFunction */
class SOAP_CMAC _ns1__GetUserFunction
{
public:
	char *userId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 132; } /* = unique id SOAP_TYPE__ns1__GetUserFunction */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetUserFunction() { _ns1__GetUserFunction::soap_default(NULL); }
	virtual ~_ns1__GetUserFunction() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetUserFunctionResponse
#define SOAP_TYPE__ns1__GetUserFunctionResponse (133)
/* ns1:GetUserFunctionResponse */
class SOAP_CMAC _ns1__GetUserFunctionResponse
{
public:
	ns1__ArrayOfSystemFunction *GetUserFunctionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfSystemFunction */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 133; } /* = unique id SOAP_TYPE__ns1__GetUserFunctionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetUserFunctionResponse() { _ns1__GetUserFunctionResponse::soap_default(NULL); }
	virtual ~_ns1__GetUserFunctionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReturnRecord
#define SOAP_TYPE__ns1__GetReturnRecord (134)
/* ns1:GetReturnRecord */
class SOAP_CMAC _ns1__GetReturnRecord
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 134; } /* = unique id SOAP_TYPE__ns1__GetReturnRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReturnRecord() { _ns1__GetReturnRecord::soap_default(NULL); }
	virtual ~_ns1__GetReturnRecord() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReturnRecordResponse
#define SOAP_TYPE__ns1__GetReturnRecordResponse (135)
/* ns1:GetReturnRecordResponse */
class SOAP_CMAC _ns1__GetReturnRecordResponse
{
public:
	ns1__ArrayOfReturnedItem *GetReturnRecordResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfReturnedItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 135; } /* = unique id SOAP_TYPE__ns1__GetReturnRecordResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReturnRecordResponse() { _ns1__GetReturnRecordResponse::soap_default(NULL); }
	virtual ~_ns1__GetReturnRecordResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReturnRecordDeal
#define SOAP_TYPE__ns1__GetReturnRecordDeal (136)
/* ns1:GetReturnRecordDeal */
class SOAP_CMAC _ns1__GetReturnRecordDeal
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 136; } /* = unique id SOAP_TYPE__ns1__GetReturnRecordDeal */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReturnRecordDeal() { _ns1__GetReturnRecordDeal::soap_default(NULL); }
	virtual ~_ns1__GetReturnRecordDeal() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReturnRecordDealResponse
#define SOAP_TYPE__ns1__GetReturnRecordDealResponse (137)
/* ns1:GetReturnRecordDealResponse */
class SOAP_CMAC _ns1__GetReturnRecordDealResponse
{
public:
	ns1__ArrayOfReturnedItem *GetReturnRecordDealResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfReturnedItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 137; } /* = unique id SOAP_TYPE__ns1__GetReturnRecordDealResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReturnRecordDealResponse() { _ns1__GetReturnRecordDealResponse::soap_default(NULL); }
	virtual ~_ns1__GetReturnRecordDealResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAcountPaymentRecord
#define SOAP_TYPE__ns1__GetAcountPaymentRecord (138)
/* ns1:GetAcountPaymentRecord */
class SOAP_CMAC _ns1__GetAcountPaymentRecord
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 138; } /* = unique id SOAP_TYPE__ns1__GetAcountPaymentRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAcountPaymentRecord() { _ns1__GetAcountPaymentRecord::soap_default(NULL); }
	virtual ~_ns1__GetAcountPaymentRecord() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAcountPaymentRecordResponse
#define SOAP_TYPE__ns1__GetAcountPaymentRecordResponse (139)
/* ns1:GetAcountPaymentRecordResponse */
class SOAP_CMAC _ns1__GetAcountPaymentRecordResponse
{
public:
	ns1__ArrayOfAcountPaymentItem *GetAcountPaymentRecordResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfAcountPaymentItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 139; } /* = unique id SOAP_TYPE__ns1__GetAcountPaymentRecordResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAcountPaymentRecordResponse() { _ns1__GetAcountPaymentRecordResponse::soap_default(NULL); }
	virtual ~_ns1__GetAcountPaymentRecordResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetDicContentByCondition
#define SOAP_TYPE__ns1__GetDicContentByCondition (140)
/* ns1:GetDicContentByCondition */
class SOAP_CMAC _ns1__GetDicContentByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 140; } /* = unique id SOAP_TYPE__ns1__GetDicContentByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetDicContentByCondition() { _ns1__GetDicContentByCondition::soap_default(NULL); }
	virtual ~_ns1__GetDicContentByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetDicContentByConditionResponse
#define SOAP_TYPE__ns1__GetDicContentByConditionResponse (141)
/* ns1:GetDicContentByConditionResponse */
class SOAP_CMAC _ns1__GetDicContentByConditionResponse
{
public:
	ns1__ArrayOfDIC_USCOREContent *GetDicContentByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfDIC_Content */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 141; } /* = unique id SOAP_TYPE__ns1__GetDicContentByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetDicContentByConditionResponse() { _ns1__GetDicContentByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetDicContentByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAllCategory
#define SOAP_TYPE__ns1__GetAllCategory (142)
/* ns1:GetAllCategory */
class SOAP_CMAC _ns1__GetAllCategory
{
public:
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 142; } /* = unique id SOAP_TYPE__ns1__GetAllCategory */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAllCategory() { _ns1__GetAllCategory::soap_default(NULL); }
	virtual ~_ns1__GetAllCategory() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAllCategoryResponse
#define SOAP_TYPE__ns1__GetAllCategoryResponse (143)
/* ns1:GetAllCategoryResponse */
class SOAP_CMAC _ns1__GetAllCategoryResponse
{
public:
	ns1__ArrayOfDIC_USCORECategory *GetAllCategoryResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfDIC_Category */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 143; } /* = unique id SOAP_TYPE__ns1__GetAllCategoryResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAllCategoryResponse() { _ns1__GetAllCategoryResponse::soap_default(NULL); }
	virtual ~_ns1__GetAllCategoryResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InsertDicContent
#define SOAP_TYPE__ns1__InsertDicContent (144)
/* ns1:InsertDicContent */
class SOAP_CMAC _ns1__InsertDicContent
{
public:
	char *category;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *code;	/* optional element of type xsd:string */
	bool enabled;	/* required element of type xsd:boolean */
	char *content;	/* optional element of type xsd:string */
	char *val1;	/* optional element of type xsd:string */
	char *val2;	/* optional element of type xsd:string */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 144; } /* = unique id SOAP_TYPE__ns1__InsertDicContent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InsertDicContent() { _ns1__InsertDicContent::soap_default(NULL); }
	virtual ~_ns1__InsertDicContent() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InsertDicContentResponse
#define SOAP_TYPE__ns1__InsertDicContentResponse (145)
/* ns1:InsertDicContentResponse */
class SOAP_CMAC _ns1__InsertDicContentResponse
{
public:
	char *InsertDicContentResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 145; } /* = unique id SOAP_TYPE__ns1__InsertDicContentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InsertDicContentResponse() { _ns1__InsertDicContentResponse::soap_default(NULL); }
	virtual ~_ns1__InsertDicContentResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateDicContent
#define SOAP_TYPE__ns1__UpdateDicContent (146)
/* ns1:UpdateDicContent */
class SOAP_CMAC _ns1__UpdateDicContent
{
public:
	char *category;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *code;	/* optional element of type xsd:string */
	bool enabled;	/* required element of type xsd:boolean */
	char *content;	/* optional element of type xsd:string */
	char *val1;	/* optional element of type xsd:string */
	char *val2;	/* optional element of type xsd:string */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 146; } /* = unique id SOAP_TYPE__ns1__UpdateDicContent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateDicContent() { _ns1__UpdateDicContent::soap_default(NULL); }
	virtual ~_ns1__UpdateDicContent() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateDicContentResponse
#define SOAP_TYPE__ns1__UpdateDicContentResponse (147)
/* ns1:UpdateDicContentResponse */
class SOAP_CMAC _ns1__UpdateDicContentResponse
{
public:
	char *UpdateDicContentResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 147; } /* = unique id SOAP_TYPE__ns1__UpdateDicContentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateDicContentResponse() { _ns1__UpdateDicContentResponse::soap_default(NULL); }
	virtual ~_ns1__UpdateDicContentResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeleteDicContent
#define SOAP_TYPE__ns1__DeleteDicContent (148)
/* ns1:DeleteDicContent */
class SOAP_CMAC _ns1__DeleteDicContent
{
public:
	char *category;	/* optional element of type xsd:string */
	char *name;	/* optional element of type xsd:string */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 148; } /* = unique id SOAP_TYPE__ns1__DeleteDicContent */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeleteDicContent() { _ns1__DeleteDicContent::soap_default(NULL); }
	virtual ~_ns1__DeleteDicContent() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeleteDicContentResponse
#define SOAP_TYPE__ns1__DeleteDicContentResponse (149)
/* ns1:DeleteDicContentResponse */
class SOAP_CMAC _ns1__DeleteDicContentResponse
{
public:
	char *DeleteDicContentResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 149; } /* = unique id SOAP_TYPE__ns1__DeleteDicContentResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeleteDicContentResponse() { _ns1__DeleteDicContentResponse::soap_default(NULL); }
	virtual ~_ns1__DeleteDicContentResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateDicContentByCategory
#define SOAP_TYPE__ns1__UpdateDicContentByCategory (150)
/* ns1:UpdateDicContentByCategory */
class SOAP_CMAC _ns1__UpdateDicContentByCategory
{
public:
	char *category;	/* optional element of type xsd:string */
	ns1__ArrayOfDIC_USCOREContent *contentList;	/* optional element of type ns1:ArrayOfDIC_Content */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 150; } /* = unique id SOAP_TYPE__ns1__UpdateDicContentByCategory */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateDicContentByCategory() { _ns1__UpdateDicContentByCategory::soap_default(NULL); }
	virtual ~_ns1__UpdateDicContentByCategory() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateDicContentByCategoryResponse
#define SOAP_TYPE__ns1__UpdateDicContentByCategoryResponse (151)
/* ns1:UpdateDicContentByCategoryResponse */
class SOAP_CMAC _ns1__UpdateDicContentByCategoryResponse
{
public:
	char *UpdateDicContentByCategoryResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 151; } /* = unique id SOAP_TYPE__ns1__UpdateDicContentByCategoryResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateDicContentByCategoryResponse() { _ns1__UpdateDicContentByCategoryResponse::soap_default(NULL); }
	virtual ~_ns1__UpdateDicContentByCategoryResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetFunctionList
#define SOAP_TYPE__ns1__GetFunctionList (152)
/* ns1:GetFunctionList */
class SOAP_CMAC _ns1__GetFunctionList
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 152; } /* = unique id SOAP_TYPE__ns1__GetFunctionList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetFunctionList() { _ns1__GetFunctionList::soap_default(NULL); }
	virtual ~_ns1__GetFunctionList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetFunctionListResponse
#define SOAP_TYPE__ns1__GetFunctionListResponse (153)
/* ns1:GetFunctionListResponse */
class SOAP_CMAC _ns1__GetFunctionListResponse
{
public:
	ns1__ArrayOfSystemFunction *GetFunctionListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfSystemFunction */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 153; } /* = unique id SOAP_TYPE__ns1__GetFunctionListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetFunctionListResponse() { _ns1__GetFunctionListResponse::soap_default(NULL); }
	virtual ~_ns1__GetFunctionListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateUserFunctionList
#define SOAP_TYPE__ns1__UpdateUserFunctionList (154)
/* ns1:UpdateUserFunctionList */
class SOAP_CMAC _ns1__UpdateUserFunctionList
{
public:
	char *userIdOrWokerId;	/* optional element of type xsd:string */
	char *operateId;	/* optional element of type xsd:string */
	ns1__ArrayOfSystemFunction *functionList;	/* optional element of type ns1:ArrayOfSystemFunction */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 154; } /* = unique id SOAP_TYPE__ns1__UpdateUserFunctionList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateUserFunctionList() { _ns1__UpdateUserFunctionList::soap_default(NULL); }
	virtual ~_ns1__UpdateUserFunctionList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateUserFunctionListResponse
#define SOAP_TYPE__ns1__UpdateUserFunctionListResponse (155)
/* ns1:UpdateUserFunctionListResponse */
class SOAP_CMAC _ns1__UpdateUserFunctionListResponse
{
public:
	char *UpdateUserFunctionListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 155; } /* = unique id SOAP_TYPE__ns1__UpdateUserFunctionListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateUserFunctionListResponse() { _ns1__UpdateUserFunctionListResponse::soap_default(NULL); }
	virtual ~_ns1__UpdateUserFunctionListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateFunctionRight
#define SOAP_TYPE__ns1__UpdateFunctionRight (156)
/* ns1:UpdateFunctionRight */
class SOAP_CMAC _ns1__UpdateFunctionRight
{
public:
	char *functionId;	/* optional element of type xsd:string */
	int right;	/* required element of type xsd:int */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 156; } /* = unique id SOAP_TYPE__ns1__UpdateFunctionRight */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateFunctionRight() { _ns1__UpdateFunctionRight::soap_default(NULL); }
	virtual ~_ns1__UpdateFunctionRight() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateFunctionRightResponse
#define SOAP_TYPE__ns1__UpdateFunctionRightResponse (157)
/* ns1:UpdateFunctionRightResponse */
class SOAP_CMAC _ns1__UpdateFunctionRightResponse
{
public:
	char *UpdateFunctionRightResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 157; } /* = unique id SOAP_TYPE__ns1__UpdateFunctionRightResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateFunctionRightResponse() { _ns1__UpdateFunctionRightResponse::soap_default(NULL); }
	virtual ~_ns1__UpdateFunctionRightResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetTableStatistics
#define SOAP_TYPE__ns1__GetTableStatistics (158)
/* ns1:GetTableStatistics */
class SOAP_CMAC _ns1__GetTableStatistics
{
public:
	char *tableName;	/* optional element of type xsd:string */
	char *sumItem1;	/* optional element of type xsd:string */
	char *sumItem2;	/* optional element of type xsd:string */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 158; } /* = unique id SOAP_TYPE__ns1__GetTableStatistics */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetTableStatistics() { _ns1__GetTableStatistics::soap_default(NULL); }
	virtual ~_ns1__GetTableStatistics() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetTableStatisticsResponse
#define SOAP_TYPE__ns1__GetTableStatisticsResponse (159)
/* ns1:GetTableStatisticsResponse */
class SOAP_CMAC _ns1__GetTableStatisticsResponse
{
public:
	ns1__TableStatistics *GetTableStatisticsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:TableStatistics */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 159; } /* = unique id SOAP_TYPE__ns1__GetTableStatisticsResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetTableStatisticsResponse() { _ns1__GetTableStatisticsResponse::soap_default(NULL); }
	virtual ~_ns1__GetTableStatisticsResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetNoticeList
#define SOAP_TYPE__ns1__GetNoticeList (160)
/* ns1:GetNoticeList */
class SOAP_CMAC _ns1__GetNoticeList
{
public:
	int pageSize;	/* required element of type xsd:int */
	int pageIndex;	/* required element of type xsd:int */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 160; } /* = unique id SOAP_TYPE__ns1__GetNoticeList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetNoticeList() { _ns1__GetNoticeList::soap_default(NULL); }
	virtual ~_ns1__GetNoticeList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetNoticeListResponse
#define SOAP_TYPE__ns1__GetNoticeListResponse (161)
/* ns1:GetNoticeListResponse */
class SOAP_CMAC _ns1__GetNoticeListResponse
{
public:
	ns1__Notice *GetNoticeListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:Notice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 161; } /* = unique id SOAP_TYPE__ns1__GetNoticeListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetNoticeListResponse() { _ns1__GetNoticeListResponse::soap_default(NULL); }
	virtual ~_ns1__GetNoticeListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetNoticeListByCondition
#define SOAP_TYPE__ns1__GetNoticeListByCondition (162)
/* ns1:GetNoticeListByCondition */
class SOAP_CMAC _ns1__GetNoticeListByCondition
{
public:
	int pageSize;	/* required element of type xsd:int */
	int pageIndex;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 162; } /* = unique id SOAP_TYPE__ns1__GetNoticeListByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetNoticeListByCondition() { _ns1__GetNoticeListByCondition::soap_default(NULL); }
	virtual ~_ns1__GetNoticeListByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetNoticeListByConditionResponse
#define SOAP_TYPE__ns1__GetNoticeListByConditionResponse (163)
/* ns1:GetNoticeListByConditionResponse */
class SOAP_CMAC _ns1__GetNoticeListByConditionResponse
{
public:
	ns1__Notice *GetNoticeListByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:Notice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 163; } /* = unique id SOAP_TYPE__ns1__GetNoticeListByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetNoticeListByConditionResponse() { _ns1__GetNoticeListByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetNoticeListByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetNoticeItem
#define SOAP_TYPE__ns1__GetNoticeItem (164)
/* ns1:GetNoticeItem */
class SOAP_CMAC _ns1__GetNoticeItem
{
public:
	char *noticeId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 164; } /* = unique id SOAP_TYPE__ns1__GetNoticeItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetNoticeItem() { _ns1__GetNoticeItem::soap_default(NULL); }
	virtual ~_ns1__GetNoticeItem() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetNoticeItemResponse
#define SOAP_TYPE__ns1__GetNoticeItemResponse (165)
/* ns1:GetNoticeItemResponse */
class SOAP_CMAC _ns1__GetNoticeItemResponse
{
public:
	ns1__NoticeItem *GetNoticeItemResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:NoticeItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 165; } /* = unique id SOAP_TYPE__ns1__GetNoticeItemResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetNoticeItemResponse() { _ns1__GetNoticeItemResponse::soap_default(NULL); }
	virtual ~_ns1__GetNoticeItemResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAlertNoticeList
#define SOAP_TYPE__ns1__GetAlertNoticeList (166)
/* ns1:GetAlertNoticeList */
class SOAP_CMAC _ns1__GetAlertNoticeList
{
public:
	char *userId;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 166; } /* = unique id SOAP_TYPE__ns1__GetAlertNoticeList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAlertNoticeList() { _ns1__GetAlertNoticeList::soap_default(NULL); }
	virtual ~_ns1__GetAlertNoticeList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAlertNoticeListResponse
#define SOAP_TYPE__ns1__GetAlertNoticeListResponse (167)
/* ns1:GetAlertNoticeListResponse */
class SOAP_CMAC _ns1__GetAlertNoticeListResponse
{
public:
	ns1__Notice *GetAlertNoticeListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:Notice */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 167; } /* = unique id SOAP_TYPE__ns1__GetAlertNoticeListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAlertNoticeListResponse() { _ns1__GetAlertNoticeListResponse::soap_default(NULL); }
	virtual ~_ns1__GetAlertNoticeListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddNoticeItem
#define SOAP_TYPE__ns1__AddNoticeItem (168)
/* ns1:AddNoticeItem */
class SOAP_CMAC _ns1__AddNoticeItem
{
public:
	char *title;	/* optional element of type xsd:string */
	char *content;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *publisherId;	/* optional element of type xsd:string */
	bool isShow;	/* required element of type xsd:boolean */
	int weight;	/* required element of type xsd:int */
	char *clientType;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 168; } /* = unique id SOAP_TYPE__ns1__AddNoticeItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddNoticeItem() { _ns1__AddNoticeItem::soap_default(NULL); }
	virtual ~_ns1__AddNoticeItem() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddNoticeItemResponse
#define SOAP_TYPE__ns1__AddNoticeItemResponse (169)
/* ns1:AddNoticeItemResponse */
class SOAP_CMAC _ns1__AddNoticeItemResponse
{
public:
	char *AddNoticeItemResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 169; } /* = unique id SOAP_TYPE__ns1__AddNoticeItemResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddNoticeItemResponse() { _ns1__AddNoticeItemResponse::soap_default(NULL); }
	virtual ~_ns1__AddNoticeItemResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddNoticeItemToSomeone
#define SOAP_TYPE__ns1__AddNoticeItemToSomeone (170)
/* ns1:AddNoticeItemToSomeone */
class SOAP_CMAC _ns1__AddNoticeItemToSomeone
{
public:
	char *title;	/* optional element of type xsd:string */
	char *content;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *publisherId;	/* optional element of type xsd:string */
	bool isShow;	/* required element of type xsd:boolean */
	int weight;	/* required element of type xsd:int */
	char *userId;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 170; } /* = unique id SOAP_TYPE__ns1__AddNoticeItemToSomeone */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddNoticeItemToSomeone() { _ns1__AddNoticeItemToSomeone::soap_default(NULL); }
	virtual ~_ns1__AddNoticeItemToSomeone() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddNoticeItemToSomeoneResponse
#define SOAP_TYPE__ns1__AddNoticeItemToSomeoneResponse (171)
/* ns1:AddNoticeItemToSomeoneResponse */
class SOAP_CMAC _ns1__AddNoticeItemToSomeoneResponse
{
public:
	char *AddNoticeItemToSomeoneResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 171; } /* = unique id SOAP_TYPE__ns1__AddNoticeItemToSomeoneResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddNoticeItemToSomeoneResponse() { _ns1__AddNoticeItemToSomeoneResponse::soap_default(NULL); }
	virtual ~_ns1__AddNoticeItemToSomeoneResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateNoticeItem
#define SOAP_TYPE__ns1__UpdateNoticeItem (172)
/* ns1:UpdateNoticeItem */
class SOAP_CMAC _ns1__UpdateNoticeItem
{
public:
	char *Id;	/* optional element of type xsd:string */
	char *title;	/* optional element of type xsd:string */
	char *content;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	bool isShow;	/* required element of type xsd:boolean */
	int weight;	/* required element of type xsd:int */
	char *operatorId;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 172; } /* = unique id SOAP_TYPE__ns1__UpdateNoticeItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateNoticeItem() { _ns1__UpdateNoticeItem::soap_default(NULL); }
	virtual ~_ns1__UpdateNoticeItem() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateNoticeItemResponse
#define SOAP_TYPE__ns1__UpdateNoticeItemResponse (173)
/* ns1:UpdateNoticeItemResponse */
class SOAP_CMAC _ns1__UpdateNoticeItemResponse
{
public:
	char *UpdateNoticeItemResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 173; } /* = unique id SOAP_TYPE__ns1__UpdateNoticeItemResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateNoticeItemResponse() { _ns1__UpdateNoticeItemResponse::soap_default(NULL); }
	virtual ~_ns1__UpdateNoticeItemResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeleteNoticeItem
#define SOAP_TYPE__ns1__DeleteNoticeItem (174)
/* ns1:DeleteNoticeItem */
class SOAP_CMAC _ns1__DeleteNoticeItem
{
public:
	char *Id;	/* optional element of type xsd:string */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 174; } /* = unique id SOAP_TYPE__ns1__DeleteNoticeItem */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeleteNoticeItem() { _ns1__DeleteNoticeItem::soap_default(NULL); }
	virtual ~_ns1__DeleteNoticeItem() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeleteNoticeItemResponse
#define SOAP_TYPE__ns1__DeleteNoticeItemResponse (175)
/* ns1:DeleteNoticeItemResponse */
class SOAP_CMAC _ns1__DeleteNoticeItemResponse
{
public:
	char *DeleteNoticeItemResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 175; } /* = unique id SOAP_TYPE__ns1__DeleteNoticeItemResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeleteNoticeItemResponse() { _ns1__DeleteNoticeItemResponse::soap_default(NULL); }
	virtual ~_ns1__DeleteNoticeItemResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InserNoticeToSomeOne
#define SOAP_TYPE__ns1__InserNoticeToSomeOne (176)
/* ns1:InserNoticeToSomeOne */
class SOAP_CMAC _ns1__InserNoticeToSomeOne
{
public:
	char *noticeId;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 176; } /* = unique id SOAP_TYPE__ns1__InserNoticeToSomeOne */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InserNoticeToSomeOne() { _ns1__InserNoticeToSomeOne::soap_default(NULL); }
	virtual ~_ns1__InserNoticeToSomeOne() { }
};
#endif

#ifndef SOAP_TYPE__ns1__InserNoticeToSomeOneResponse
#define SOAP_TYPE__ns1__InserNoticeToSomeOneResponse (177)
/* ns1:InserNoticeToSomeOneResponse */
class SOAP_CMAC _ns1__InserNoticeToSomeOneResponse
{
public:
	bool InserNoticeToSomeOneResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:boolean */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 177; } /* = unique id SOAP_TYPE__ns1__InserNoticeToSomeOneResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__InserNoticeToSomeOneResponse() { _ns1__InserNoticeToSomeOneResponse::soap_default(NULL); }
	virtual ~_ns1__InserNoticeToSomeOneResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReturnProportionRecord
#define SOAP_TYPE__ns1__GetReturnProportionRecord (178)
/* ns1:GetReturnProportionRecord */
class SOAP_CMAC _ns1__GetReturnProportionRecord
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 178; } /* = unique id SOAP_TYPE__ns1__GetReturnProportionRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReturnProportionRecord() { _ns1__GetReturnProportionRecord::soap_default(NULL); }
	virtual ~_ns1__GetReturnProportionRecord() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetReturnProportionRecordResponse
#define SOAP_TYPE__ns1__GetReturnProportionRecordResponse (179)
/* ns1:GetReturnProportionRecordResponse */
class SOAP_CMAC _ns1__GetReturnProportionRecordResponse
{
public:
	ns1__ArrayOfReturnProportion *GetReturnProportionRecordResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfReturnProportion */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 179; } /* = unique id SOAP_TYPE__ns1__GetReturnProportionRecordResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetReturnProportionRecordResponse() { _ns1__GetReturnProportionRecordResponse::soap_default(NULL); }
	virtual ~_ns1__GetReturnProportionRecordResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddtReturnProportion
#define SOAP_TYPE__ns1__AddtReturnProportion (180)
/* ns1:AddtReturnProportion */
class SOAP_CMAC _ns1__AddtReturnProportion
{
public:
	char *returnClass;	/* optional element of type xsd:string */
	char *returnName;	/* optional element of type xsd:string */
	char *area;	/* optional element of type xsd:string */
	char *level;	/* optional element of type xsd:string */
	double returnProportion;	/* required element of type xsd:double */
	char *content;	/* optional element of type xsd:string */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 180; } /* = unique id SOAP_TYPE__ns1__AddtReturnProportion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddtReturnProportion() { _ns1__AddtReturnProportion::soap_default(NULL); }
	virtual ~_ns1__AddtReturnProportion() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddtReturnProportionResponse
#define SOAP_TYPE__ns1__AddtReturnProportionResponse (181)
/* ns1:AddtReturnProportionResponse */
class SOAP_CMAC _ns1__AddtReturnProportionResponse
{
public:
	char *AddtReturnProportionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 181; } /* = unique id SOAP_TYPE__ns1__AddtReturnProportionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddtReturnProportionResponse() { _ns1__AddtReturnProportionResponse::soap_default(NULL); }
	virtual ~_ns1__AddtReturnProportionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdatetReturnProportion
#define SOAP_TYPE__ns1__UpdatetReturnProportion (182)
/* ns1:UpdatetReturnProportion */
class SOAP_CMAC _ns1__UpdatetReturnProportion
{
public:
	char *Id;	/* optional element of type xsd:string */
	char *returnClass;	/* optional element of type xsd:string */
	char *returnName;	/* optional element of type xsd:string */
	char *area;	/* optional element of type xsd:string */
	char *level;	/* optional element of type xsd:string */
	double returnProportion;	/* required element of type xsd:double */
	char *content;	/* optional element of type xsd:string */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 182; } /* = unique id SOAP_TYPE__ns1__UpdatetReturnProportion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdatetReturnProportion() { _ns1__UpdatetReturnProportion::soap_default(NULL); }
	virtual ~_ns1__UpdatetReturnProportion() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdatetReturnProportionResponse
#define SOAP_TYPE__ns1__UpdatetReturnProportionResponse (183)
/* ns1:UpdatetReturnProportionResponse */
class SOAP_CMAC _ns1__UpdatetReturnProportionResponse
{
public:
	char *UpdatetReturnProportionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 183; } /* = unique id SOAP_TYPE__ns1__UpdatetReturnProportionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdatetReturnProportionResponse() { _ns1__UpdatetReturnProportionResponse::soap_default(NULL); }
	virtual ~_ns1__UpdatetReturnProportionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeletetReturnProportion
#define SOAP_TYPE__ns1__DeletetReturnProportion (184)
/* ns1:DeletetReturnProportion */
class SOAP_CMAC _ns1__DeletetReturnProportion
{
public:
	char *Id;	/* optional element of type xsd:string */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 184; } /* = unique id SOAP_TYPE__ns1__DeletetReturnProportion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeletetReturnProportion() { _ns1__DeletetReturnProportion::soap_default(NULL); }
	virtual ~_ns1__DeletetReturnProportion() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeletetReturnProportionResponse
#define SOAP_TYPE__ns1__DeletetReturnProportionResponse (185)
/* ns1:DeletetReturnProportionResponse */
class SOAP_CMAC _ns1__DeletetReturnProportionResponse
{
public:
	char *DeletetReturnProportionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 185; } /* = unique id SOAP_TYPE__ns1__DeletetReturnProportionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeletetReturnProportionResponse() { _ns1__DeletetReturnProportionResponse::soap_default(NULL); }
	virtual ~_ns1__DeletetReturnProportionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPhoneNumberBelongByCondition
#define SOAP_TYPE__ns1__GetPhoneNumberBelongByCondition (186)
/* ns1:GetPhoneNumberBelongByCondition */
class SOAP_CMAC _ns1__GetPhoneNumberBelongByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 186; } /* = unique id SOAP_TYPE__ns1__GetPhoneNumberBelongByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPhoneNumberBelongByCondition() { _ns1__GetPhoneNumberBelongByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPhoneNumberBelongByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPhoneNumberBelongByConditionResponse
#define SOAP_TYPE__ns1__GetPhoneNumberBelongByConditionResponse (187)
/* ns1:GetPhoneNumberBelongByConditionResponse */
class SOAP_CMAC _ns1__GetPhoneNumberBelongByConditionResponse
{
public:
	ns1__ArrayOfPhoneNumberBelong *GetPhoneNumberBelongByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPhoneNumberBelong */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 187; } /* = unique id SOAP_TYPE__ns1__GetPhoneNumberBelongByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPhoneNumberBelongByConditionResponse() { _ns1__GetPhoneNumberBelongByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPhoneNumberBelongByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdatePhoneNumberBelong
#define SOAP_TYPE__ns1__UpdatePhoneNumberBelong (188)
/* ns1:UpdatePhoneNumberBelong */
class SOAP_CMAC _ns1__UpdatePhoneNumberBelong
{
public:
	ns1__PhoneNumberBelong *belong;	/* optional element of type ns1:PhoneNumberBelong */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 188; } /* = unique id SOAP_TYPE__ns1__UpdatePhoneNumberBelong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdatePhoneNumberBelong() { _ns1__UpdatePhoneNumberBelong::soap_default(NULL); }
	virtual ~_ns1__UpdatePhoneNumberBelong() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdatePhoneNumberBelongResponse
#define SOAP_TYPE__ns1__UpdatePhoneNumberBelongResponse (189)
/* ns1:UpdatePhoneNumberBelongResponse */
class SOAP_CMAC _ns1__UpdatePhoneNumberBelongResponse
{
public:
	char *UpdatePhoneNumberBelongResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 189; } /* = unique id SOAP_TYPE__ns1__UpdatePhoneNumberBelongResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdatePhoneNumberBelongResponse() { _ns1__UpdatePhoneNumberBelongResponse::soap_default(NULL); }
	virtual ~_ns1__UpdatePhoneNumberBelongResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddPhoneNumberBelong
#define SOAP_TYPE__ns1__AddPhoneNumberBelong (190)
/* ns1:AddPhoneNumberBelong */
class SOAP_CMAC _ns1__AddPhoneNumberBelong
{
public:
	ns1__PhoneNumberBelong *belong;	/* optional element of type ns1:PhoneNumberBelong */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 190; } /* = unique id SOAP_TYPE__ns1__AddPhoneNumberBelong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddPhoneNumberBelong() { _ns1__AddPhoneNumberBelong::soap_default(NULL); }
	virtual ~_ns1__AddPhoneNumberBelong() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddPhoneNumberBelongResponse
#define SOAP_TYPE__ns1__AddPhoneNumberBelongResponse (191)
/* ns1:AddPhoneNumberBelongResponse */
class SOAP_CMAC _ns1__AddPhoneNumberBelongResponse
{
public:
	char *AddPhoneNumberBelongResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 191; } /* = unique id SOAP_TYPE__ns1__AddPhoneNumberBelongResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddPhoneNumberBelongResponse() { _ns1__AddPhoneNumberBelongResponse::soap_default(NULL); }
	virtual ~_ns1__AddPhoneNumberBelongResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeletePhoneNumberBelong
#define SOAP_TYPE__ns1__DeletePhoneNumberBelong (192)
/* ns1:DeletePhoneNumberBelong */
class SOAP_CMAC _ns1__DeletePhoneNumberBelong
{
public:
	char *belongId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 192; } /* = unique id SOAP_TYPE__ns1__DeletePhoneNumberBelong */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeletePhoneNumberBelong() { _ns1__DeletePhoneNumberBelong::soap_default(NULL); }
	virtual ~_ns1__DeletePhoneNumberBelong() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeletePhoneNumberBelongResponse
#define SOAP_TYPE__ns1__DeletePhoneNumberBelongResponse (193)
/* ns1:DeletePhoneNumberBelongResponse */
class SOAP_CMAC _ns1__DeletePhoneNumberBelongResponse
{
public:
	char *DeletePhoneNumberBelongResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 193; } /* = unique id SOAP_TYPE__ns1__DeletePhoneNumberBelongResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeletePhoneNumberBelongResponse() { _ns1__DeletePhoneNumberBelongResponse::soap_default(NULL); }
	virtual ~_ns1__DeletePhoneNumberBelongResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCompanyInfo
#define SOAP_TYPE__ns1__GetCompanyInfo (194)
/* ns1:GetCompanyInfo */
class SOAP_CMAC _ns1__GetCompanyInfo
{
public:
	char *clientType;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 194; } /* = unique id SOAP_TYPE__ns1__GetCompanyInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCompanyInfo() { _ns1__GetCompanyInfo::soap_default(NULL); }
	virtual ~_ns1__GetCompanyInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCompanyInfoResponse
#define SOAP_TYPE__ns1__GetCompanyInfoResponse (195)
/* ns1:GetCompanyInfoResponse */
class SOAP_CMAC _ns1__GetCompanyInfoResponse
{
public:
	ns1__CompanyInfo *GetCompanyInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:CompanyInfo */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 195; } /* = unique id SOAP_TYPE__ns1__GetCompanyInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCompanyInfoResponse() { _ns1__GetCompanyInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetCompanyInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateCompanyInfo
#define SOAP_TYPE__ns1__UpdateCompanyInfo (196)
/* ns1:UpdateCompanyInfo */
class SOAP_CMAC _ns1__UpdateCompanyInfo
{
public:
	ns1__CompanyInfo *info;	/* optional element of type ns1:CompanyInfo */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 196; } /* = unique id SOAP_TYPE__ns1__UpdateCompanyInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateCompanyInfo() { _ns1__UpdateCompanyInfo::soap_default(NULL); }
	virtual ~_ns1__UpdateCompanyInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateCompanyInfoResponse
#define SOAP_TYPE__ns1__UpdateCompanyInfoResponse (197)
/* ns1:UpdateCompanyInfoResponse */
class SOAP_CMAC _ns1__UpdateCompanyInfoResponse
{
public:
	char *UpdateCompanyInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 197; } /* = unique id SOAP_TYPE__ns1__UpdateCompanyInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateCompanyInfoResponse() { _ns1__UpdateCompanyInfoResponse::soap_default(NULL); }
	virtual ~_ns1__UpdateCompanyInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCompanyAccount
#define SOAP_TYPE__ns1__GetCompanyAccount (198)
/* ns1:GetCompanyAccount */
class SOAP_CMAC _ns1__GetCompanyAccount
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 198; } /* = unique id SOAP_TYPE__ns1__GetCompanyAccount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCompanyAccount() { _ns1__GetCompanyAccount::soap_default(NULL); }
	virtual ~_ns1__GetCompanyAccount() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCompanyAccountResponse
#define SOAP_TYPE__ns1__GetCompanyAccountResponse (199)
/* ns1:GetCompanyAccountResponse */
class SOAP_CMAC _ns1__GetCompanyAccountResponse
{
public:
	ns1__ArrayOfCompanyAccount *GetCompanyAccountResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfCompanyAccount */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 199; } /* = unique id SOAP_TYPE__ns1__GetCompanyAccountResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCompanyAccountResponse() { _ns1__GetCompanyAccountResponse::soap_default(NULL); }
	virtual ~_ns1__GetCompanyAccountResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddCompanyAccount
#define SOAP_TYPE__ns1__AddCompanyAccount (200)
/* ns1:AddCompanyAccount */
class SOAP_CMAC _ns1__AddCompanyAccount
{
public:
	ns1__CompanyAccount *account;	/* optional element of type ns1:CompanyAccount */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 200; } /* = unique id SOAP_TYPE__ns1__AddCompanyAccount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddCompanyAccount() { _ns1__AddCompanyAccount::soap_default(NULL); }
	virtual ~_ns1__AddCompanyAccount() { }
};
#endif

#ifndef SOAP_TYPE__ns1__AddCompanyAccountResponse
#define SOAP_TYPE__ns1__AddCompanyAccountResponse (201)
/* ns1:AddCompanyAccountResponse */
class SOAP_CMAC _ns1__AddCompanyAccountResponse
{
public:
	char *AddCompanyAccountResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 201; } /* = unique id SOAP_TYPE__ns1__AddCompanyAccountResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__AddCompanyAccountResponse() { _ns1__AddCompanyAccountResponse::soap_default(NULL); }
	virtual ~_ns1__AddCompanyAccountResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateCompanyAccount
#define SOAP_TYPE__ns1__UpdateCompanyAccount (202)
/* ns1:UpdateCompanyAccount */
class SOAP_CMAC _ns1__UpdateCompanyAccount
{
public:
	ns1__CompanyAccount *account;	/* optional element of type ns1:CompanyAccount */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 202; } /* = unique id SOAP_TYPE__ns1__UpdateCompanyAccount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateCompanyAccount() { _ns1__UpdateCompanyAccount::soap_default(NULL); }
	virtual ~_ns1__UpdateCompanyAccount() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UpdateCompanyAccountResponse
#define SOAP_TYPE__ns1__UpdateCompanyAccountResponse (203)
/* ns1:UpdateCompanyAccountResponse */
class SOAP_CMAC _ns1__UpdateCompanyAccountResponse
{
public:
	char *UpdateCompanyAccountResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 203; } /* = unique id SOAP_TYPE__ns1__UpdateCompanyAccountResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UpdateCompanyAccountResponse() { _ns1__UpdateCompanyAccountResponse::soap_default(NULL); }
	virtual ~_ns1__UpdateCompanyAccountResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeleteCompanyAccount
#define SOAP_TYPE__ns1__DeleteCompanyAccount (204)
/* ns1:DeleteCompanyAccount */
class SOAP_CMAC _ns1__DeleteCompanyAccount
{
public:
	char *accountId;	/* optional element of type xsd:string */
	char *operatorId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 204; } /* = unique id SOAP_TYPE__ns1__DeleteCompanyAccount */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeleteCompanyAccount() { _ns1__DeleteCompanyAccount::soap_default(NULL); }
	virtual ~_ns1__DeleteCompanyAccount() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DeleteCompanyAccountResponse
#define SOAP_TYPE__ns1__DeleteCompanyAccountResponse (205)
/* ns1:DeleteCompanyAccountResponse */
class SOAP_CMAC _ns1__DeleteCompanyAccountResponse
{
public:
	char *DeleteCompanyAccountResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 205; } /* = unique id SOAP_TYPE__ns1__DeleteCompanyAccountResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DeleteCompanyAccountResponse() { _ns1__DeleteCompanyAccountResponse::soap_default(NULL); }
	virtual ~_ns1__DeleteCompanyAccountResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetClientVersion
#define SOAP_TYPE__ns1__GetClientVersion (206)
/* ns1:GetClientVersion */
class SOAP_CMAC _ns1__GetClientVersion
{
public:
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 206; } /* = unique id SOAP_TYPE__ns1__GetClientVersion */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetClientVersion() { _ns1__GetClientVersion::soap_default(NULL); }
	virtual ~_ns1__GetClientVersion() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetClientVersionResponse
#define SOAP_TYPE__ns1__GetClientVersionResponse (207)
/* ns1:GetClientVersionResponse */
class SOAP_CMAC _ns1__GetClientVersionResponse
{
public:
	char *GetClientVersionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 207; } /* = unique id SOAP_TYPE__ns1__GetClientVersionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetClientVersionResponse() { _ns1__GetClientVersionResponse::soap_default(NULL); }
	virtual ~_ns1__GetClientVersionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__queryPhoneNOInfo
#define SOAP_TYPE__ns1__queryPhoneNOInfo (208)
/* ns1:queryPhoneNOInfo */
class SOAP_CMAC _ns1__queryPhoneNOInfo
{
public:
	char *phoneNO;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 208; } /* = unique id SOAP_TYPE__ns1__queryPhoneNOInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__queryPhoneNOInfo() { _ns1__queryPhoneNOInfo::soap_default(NULL); }
	virtual ~_ns1__queryPhoneNOInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__queryPhoneNOInfoResponse
#define SOAP_TYPE__ns1__queryPhoneNOInfoResponse (209)
/* ns1:queryPhoneNOInfoResponse */
class SOAP_CMAC _ns1__queryPhoneNOInfoResponse
{
public:
	ns1__Result *queryPhoneNOInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:Result */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 209; } /* = unique id SOAP_TYPE__ns1__queryPhoneNOInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__queryPhoneNOInfoResponse() { _ns1__queryPhoneNOInfoResponse::soap_default(NULL); }
	virtual ~_ns1__queryPhoneNOInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__BuyMiniCard
#define SOAP_TYPE__ns1__BuyMiniCard (210)
/* ns1:BuyMiniCard */
class SOAP_CMAC _ns1__BuyMiniCard
{
public:
	char *data;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *workerId;	/* optional element of type xsd:string */
	char *SP;	/* optional element of type xsd:string */
	char *count;	/* optional element of type xsd:string */
	char *money;	/* optional element of type xsd:string */
	char *content;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 210; } /* = unique id SOAP_TYPE__ns1__BuyMiniCard */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__BuyMiniCard() { _ns1__BuyMiniCard::soap_default(NULL); }
	virtual ~_ns1__BuyMiniCard() { }
};
#endif

#ifndef SOAP_TYPE__ns1__BuyMiniCardResponse
#define SOAP_TYPE__ns1__BuyMiniCardResponse (211)
/* ns1:BuyMiniCardResponse */
class SOAP_CMAC _ns1__BuyMiniCardResponse
{
public:
	char *BuyMiniCardResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 211; } /* = unique id SOAP_TYPE__ns1__BuyMiniCardResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__BuyMiniCardResponse() { _ns1__BuyMiniCardResponse::soap_default(NULL); }
	virtual ~_ns1__BuyMiniCardResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPhoneNoByCondition
#define SOAP_TYPE__ns1__GetPhoneNoByCondition (212)
/* ns1:GetPhoneNoByCondition */
class SOAP_CMAC _ns1__GetPhoneNoByCondition
{
public:
	int pageSize;	/* required element of type xsd:int */
	int pageIndex;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 212; } /* = unique id SOAP_TYPE__ns1__GetPhoneNoByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPhoneNoByCondition() { _ns1__GetPhoneNoByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPhoneNoByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPhoneNoByConditionResponse
#define SOAP_TYPE__ns1__GetPhoneNoByConditionResponse (213)
/* ns1:GetPhoneNoByConditionResponse */
class SOAP_CMAC _ns1__GetPhoneNoByConditionResponse
{
public:
	ns1__PhoneNoList *GetPhoneNoByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:PhoneNoList */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 213; } /* = unique id SOAP_TYPE__ns1__GetPhoneNoByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPhoneNoByConditionResponse() { _ns1__GetPhoneNoByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPhoneNoByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetMyNoSection
#define SOAP_TYPE__ns1__GetMyNoSection (214)
/* ns1:GetMyNoSection */
class SOAP_CMAC _ns1__GetMyNoSection
{
public:
	char *userId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 214; } /* = unique id SOAP_TYPE__ns1__GetMyNoSection */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetMyNoSection() { _ns1__GetMyNoSection::soap_default(NULL); }
	virtual ~_ns1__GetMyNoSection() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetMyNoSectionResponse
#define SOAP_TYPE__ns1__GetMyNoSectionResponse (215)
/* ns1:GetMyNoSectionResponse */
class SOAP_CMAC _ns1__GetMyNoSectionResponse
{
public:
	ns1__ArrayOfString *GetMyNoSectionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfString */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 215; } /* = unique id SOAP_TYPE__ns1__GetMyNoSectionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetMyNoSectionResponse() { _ns1__GetMyNoSectionResponse::soap_default(NULL); }
	virtual ~_ns1__GetMyNoSectionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LockNo
#define SOAP_TYPE__ns1__LockNo (216)
/* ns1:LockNo */
class SOAP_CMAC _ns1__LockNo
{
public:
	char *No;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 216; } /* = unique id SOAP_TYPE__ns1__LockNo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LockNo() { _ns1__LockNo::soap_default(NULL); }
	virtual ~_ns1__LockNo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__LockNoResponse
#define SOAP_TYPE__ns1__LockNoResponse (217)
/* ns1:LockNoResponse */
class SOAP_CMAC _ns1__LockNoResponse
{
public:
	char *LockNoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 217; } /* = unique id SOAP_TYPE__ns1__LockNoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__LockNoResponse() { _ns1__LockNoResponse::soap_default(NULL); }
	virtual ~_ns1__LockNoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UnlockNo
#define SOAP_TYPE__ns1__UnlockNo (218)
/* ns1:UnlockNo */
class SOAP_CMAC _ns1__UnlockNo
{
public:
	char *No;	/* optional element of type xsd:string */
	char *userId;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 218; } /* = unique id SOAP_TYPE__ns1__UnlockNo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UnlockNo() { _ns1__UnlockNo::soap_default(NULL); }
	virtual ~_ns1__UnlockNo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__UnlockNoResponse
#define SOAP_TYPE__ns1__UnlockNoResponse (219)
/* ns1:UnlockNoResponse */
class SOAP_CMAC _ns1__UnlockNoResponse
{
public:
	char *UnlockNoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 219; } /* = unique id SOAP_TYPE__ns1__UnlockNoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__UnlockNoResponse() { _ns1__UnlockNoResponse::soap_default(NULL); }
	virtual ~_ns1__UnlockNoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SubmitBusiness
#define SOAP_TYPE__ns1__SubmitBusiness (220)
/* ns1:SubmitBusiness */
class SOAP_CMAC _ns1__SubmitBusiness
{
public:
	char *userId;	/* optional element of type xsd:string */
	char *userLevel;	/* optional element of type xsd:string */
	char *businessName;	/* optional element of type xsd:string */
	char *businessSpec;	/* optional element of type xsd:string */
	char *sp;	/* optional element of type xsd:string */
	char *No;	/* optional element of type xsd:string */
	char *passwd;	/* optional element of type xsd:string */
	char *content;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 220; } /* = unique id SOAP_TYPE__ns1__SubmitBusiness */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SubmitBusiness() { _ns1__SubmitBusiness::soap_default(NULL); }
	virtual ~_ns1__SubmitBusiness() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SubmitBusinessResponse
#define SOAP_TYPE__ns1__SubmitBusinessResponse (221)
/* ns1:SubmitBusinessResponse */
class SOAP_CMAC _ns1__SubmitBusinessResponse
{
public:
	char *SubmitBusinessResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 221; } /* = unique id SOAP_TYPE__ns1__SubmitBusinessResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SubmitBusinessResponse() { _ns1__SubmitBusinessResponse::soap_default(NULL); }
	virtual ~_ns1__SubmitBusinessResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SellNo
#define SOAP_TYPE__ns1__SellNo (222)
/* ns1:SellNo */
class SOAP_CMAC _ns1__SellNo
{
public:
	char *userId;	/* optional element of type xsd:string */
	char *No;	/* optional element of type xsd:string */
	char *miniCard;	/* optional element of type xsd:string */
	char *serviceName;	/* optional element of type xsd:string */
	char *value;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	char *business1;	/* optional element of type xsd:string */
	char *business2;	/* optional element of type xsd:string */
	char *business3;	/* optional element of type xsd:string */
	char *clientType;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 222; } /* = unique id SOAP_TYPE__ns1__SellNo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SellNo() { _ns1__SellNo::soap_default(NULL); }
	virtual ~_ns1__SellNo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SellNoResponse
#define SOAP_TYPE__ns1__SellNoResponse (223)
/* ns1:SellNoResponse */
class SOAP_CMAC _ns1__SellNoResponse
{
public:
	char *SellNoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 223; } /* = unique id SOAP_TYPE__ns1__SellNoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SellNoResponse() { _ns1__SellNoResponse::soap_default(NULL); }
	virtual ~_ns1__SellNoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SellOhterCard
#define SOAP_TYPE__ns1__SellOhterCard (224)
/* ns1:SellOhterCard */
class SOAP_CMAC _ns1__SellOhterCard
{
public:
	char *userId;	/* optional element of type xsd:string */
	char *cardType;	/* optional element of type xsd:string */
	char *cardName;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 224; } /* = unique id SOAP_TYPE__ns1__SellOhterCard */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SellOhterCard() { _ns1__SellOhterCard::soap_default(NULL); }
	virtual ~_ns1__SellOhterCard() { }
};
#endif

#ifndef SOAP_TYPE__ns1__SellOhterCardResponse
#define SOAP_TYPE__ns1__SellOhterCardResponse (225)
/* ns1:SellOhterCardResponse */
class SOAP_CMAC _ns1__SellOhterCardResponse
{
public:
	char *SellOhterCardResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 225; } /* = unique id SOAP_TYPE__ns1__SellOhterCardResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__SellOhterCardResponse() { _ns1__SellOhterCardResponse::soap_default(NULL); }
	virtual ~_ns1__SellOhterCardResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetMiniCardRecord
#define SOAP_TYPE__ns1__GetMiniCardRecord (226)
/* ns1:GetMiniCardRecord */
class SOAP_CMAC _ns1__GetMiniCardRecord
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 226; } /* = unique id SOAP_TYPE__ns1__GetMiniCardRecord */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetMiniCardRecord() { _ns1__GetMiniCardRecord::soap_default(NULL); }
	virtual ~_ns1__GetMiniCardRecord() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetMiniCardRecordResponse
#define SOAP_TYPE__ns1__GetMiniCardRecordResponse (227)
/* ns1:GetMiniCardRecordResponse */
class SOAP_CMAC _ns1__GetMiniCardRecordResponse
{
public:
	ns1__ArrayOfMiniCardItem *GetMiniCardRecordResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfMiniCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 227; } /* = unique id SOAP_TYPE__ns1__GetMiniCardRecordResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetMiniCardRecordResponse() { _ns1__GetMiniCardRecordResponse::soap_default(NULL); }
	virtual ~_ns1__GetMiniCardRecordResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayMiniCardByCondition
#define SOAP_TYPE__ns1__GetPayMiniCardByCondition (228)
/* ns1:GetPayMiniCardByCondition */
class SOAP_CMAC _ns1__GetPayMiniCardByCondition
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 228; } /* = unique id SOAP_TYPE__ns1__GetPayMiniCardByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayMiniCardByCondition() { _ns1__GetPayMiniCardByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPayMiniCardByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayMiniCardByConditionResponse
#define SOAP_TYPE__ns1__GetPayMiniCardByConditionResponse (229)
/* ns1:GetPayMiniCardByConditionResponse */
class SOAP_CMAC _ns1__GetPayMiniCardByConditionResponse
{
public:
	ns1__ArrayOfPayMiniCardItem *GetPayMiniCardByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPayMiniCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 229; } /* = unique id SOAP_TYPE__ns1__GetPayMiniCardByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayMiniCardByConditionResponse() { _ns1__GetPayMiniCardByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPayMiniCardByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayMiniCardHistoryByCondition
#define SOAP_TYPE__ns1__GetPayMiniCardHistoryByCondition (230)
/* ns1:GetPayMiniCardHistoryByCondition */
class SOAP_CMAC _ns1__GetPayMiniCardHistoryByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 230; } /* = unique id SOAP_TYPE__ns1__GetPayMiniCardHistoryByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayMiniCardHistoryByCondition() { _ns1__GetPayMiniCardHistoryByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPayMiniCardHistoryByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPayMiniCardHistoryByConditionResponse
#define SOAP_TYPE__ns1__GetPayMiniCardHistoryByConditionResponse (231)
/* ns1:GetPayMiniCardHistoryByConditionResponse */
class SOAP_CMAC _ns1__GetPayMiniCardHistoryByConditionResponse
{
public:
	ns1__ArrayOfPayMiniCardItem *GetPayMiniCardHistoryByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPayMiniCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 231; } /* = unique id SOAP_TYPE__ns1__GetPayMiniCardHistoryByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPayMiniCardHistoryByConditionResponse() { _ns1__GetPayMiniCardHistoryByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPayMiniCardHistoryByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPhoneNoItemByCondition
#define SOAP_TYPE__ns1__GetPhoneNoItemByCondition (232)
/* ns1:GetPhoneNoItemByCondition */
class SOAP_CMAC _ns1__GetPhoneNoItemByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 232; } /* = unique id SOAP_TYPE__ns1__GetPhoneNoItemByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPhoneNoItemByCondition() { _ns1__GetPhoneNoItemByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPhoneNoItemByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPhoneNoItemByConditionResponse
#define SOAP_TYPE__ns1__GetPhoneNoItemByConditionResponse (233)
/* ns1:GetPhoneNoItemByConditionResponse */
class SOAP_CMAC _ns1__GetPhoneNoItemByConditionResponse
{
public:
	ns1__ArrayOfPhoneNoItem *GetPhoneNoItemByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPhoneNoItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 233; } /* = unique id SOAP_TYPE__ns1__GetPhoneNoItemByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPhoneNoItemByConditionResponse() { _ns1__GetPhoneNoItemByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPhoneNoItemByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPhoneNoItemAndHistoryByCondition
#define SOAP_TYPE__ns1__GetPhoneNoItemAndHistoryByCondition (234)
/* ns1:GetPhoneNoItemAndHistoryByCondition */
class SOAP_CMAC _ns1__GetPhoneNoItemAndHistoryByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 234; } /* = unique id SOAP_TYPE__ns1__GetPhoneNoItemAndHistoryByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPhoneNoItemAndHistoryByCondition() { _ns1__GetPhoneNoItemAndHistoryByCondition::soap_default(NULL); }
	virtual ~_ns1__GetPhoneNoItemAndHistoryByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetPhoneNoItemAndHistoryByConditionResponse
#define SOAP_TYPE__ns1__GetPhoneNoItemAndHistoryByConditionResponse (235)
/* ns1:GetPhoneNoItemAndHistoryByConditionResponse */
class SOAP_CMAC _ns1__GetPhoneNoItemAndHistoryByConditionResponse
{
public:
	ns1__ArrayOfPhoneNoItem *GetPhoneNoItemAndHistoryByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfPhoneNoItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 235; } /* = unique id SOAP_TYPE__ns1__GetPhoneNoItemAndHistoryByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetPhoneNoItemAndHistoryByConditionResponse() { _ns1__GetPhoneNoItemAndHistoryByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetPhoneNoItemAndHistoryByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCardService
#define SOAP_TYPE__ns1__GetCardService (236)
/* ns1:GetCardService */
class SOAP_CMAC _ns1__GetCardService
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 236; } /* = unique id SOAP_TYPE__ns1__GetCardService */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCardService() { _ns1__GetCardService::soap_default(NULL); }
	virtual ~_ns1__GetCardService() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetCardServiceResponse
#define SOAP_TYPE__ns1__GetCardServiceResponse (237)
/* ns1:GetCardServiceResponse */
class SOAP_CMAC _ns1__GetCardServiceResponse
{
public:
	ns1__ArrayOfCardService *GetCardServiceResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfCardService */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 237; } /* = unique id SOAP_TYPE__ns1__GetCardServiceResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetCardServiceResponse() { _ns1__GetCardServiceResponse::soap_default(NULL); }
	virtual ~_ns1__GetCardServiceResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSellCardRecordByCondition
#define SOAP_TYPE__ns1__GetSellCardRecordByCondition (238)
/* ns1:GetSellCardRecordByCondition */
class SOAP_CMAC _ns1__GetSellCardRecordByCondition
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 238; } /* = unique id SOAP_TYPE__ns1__GetSellCardRecordByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSellCardRecordByCondition() { _ns1__GetSellCardRecordByCondition::soap_default(NULL); }
	virtual ~_ns1__GetSellCardRecordByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSellCardRecordByConditionResponse
#define SOAP_TYPE__ns1__GetSellCardRecordByConditionResponse (239)
/* ns1:GetSellCardRecordByConditionResponse */
class SOAP_CMAC _ns1__GetSellCardRecordByConditionResponse
{
public:
	ns1__ArrayOfSellCardItem *GetSellCardRecordByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfSellCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 239; } /* = unique id SOAP_TYPE__ns1__GetSellCardRecordByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSellCardRecordByConditionResponse() { _ns1__GetSellCardRecordByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetSellCardRecordByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSellCardRecordHistoryByCondition
#define SOAP_TYPE__ns1__GetSellCardRecordHistoryByCondition (240)
/* ns1:GetSellCardRecordHistoryByCondition */
class SOAP_CMAC _ns1__GetSellCardRecordHistoryByCondition
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 240; } /* = unique id SOAP_TYPE__ns1__GetSellCardRecordHistoryByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSellCardRecordHistoryByCondition() { _ns1__GetSellCardRecordHistoryByCondition::soap_default(NULL); }
	virtual ~_ns1__GetSellCardRecordHistoryByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSellCardRecordHistoryByConditionResponse
#define SOAP_TYPE__ns1__GetSellCardRecordHistoryByConditionResponse (241)
/* ns1:GetSellCardRecordHistoryByConditionResponse */
class SOAP_CMAC _ns1__GetSellCardRecordHistoryByConditionResponse
{
public:
	ns1__ArrayOfSellCardItem *GetSellCardRecordHistoryByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfSellCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 241; } /* = unique id SOAP_TYPE__ns1__GetSellCardRecordHistoryByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSellCardRecordHistoryByConditionResponse() { _ns1__GetSellCardRecordHistoryByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetSellCardRecordHistoryByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetBusinessRecordByCondition
#define SOAP_TYPE__ns1__GetBusinessRecordByCondition (242)
/* ns1:GetBusinessRecordByCondition */
class SOAP_CMAC _ns1__GetBusinessRecordByCondition
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 242; } /* = unique id SOAP_TYPE__ns1__GetBusinessRecordByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetBusinessRecordByCondition() { _ns1__GetBusinessRecordByCondition::soap_default(NULL); }
	virtual ~_ns1__GetBusinessRecordByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetBusinessRecordByConditionResponse
#define SOAP_TYPE__ns1__GetBusinessRecordByConditionResponse (243)
/* ns1:GetBusinessRecordByConditionResponse */
class SOAP_CMAC _ns1__GetBusinessRecordByConditionResponse
{
public:
	ns1__ArrayOfBusinessItem *GetBusinessRecordByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfBusinessItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 243; } /* = unique id SOAP_TYPE__ns1__GetBusinessRecordByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetBusinessRecordByConditionResponse() { _ns1__GetBusinessRecordByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetBusinessRecordByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GettBusinessRecordHistoryByCondition
#define SOAP_TYPE__ns1__GettBusinessRecordHistoryByCondition (244)
/* ns1:GettBusinessRecordHistoryByCondition */
class SOAP_CMAC _ns1__GettBusinessRecordHistoryByCondition
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 244; } /* = unique id SOAP_TYPE__ns1__GettBusinessRecordHistoryByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GettBusinessRecordHistoryByCondition() { _ns1__GettBusinessRecordHistoryByCondition::soap_default(NULL); }
	virtual ~_ns1__GettBusinessRecordHistoryByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GettBusinessRecordHistoryByConditionResponse
#define SOAP_TYPE__ns1__GettBusinessRecordHistoryByConditionResponse (245)
/* ns1:GettBusinessRecordHistoryByConditionResponse */
class SOAP_CMAC _ns1__GettBusinessRecordHistoryByConditionResponse
{
public:
	ns1__ArrayOfBusinessItem *GettBusinessRecordHistoryByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfBusinessItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 245; } /* = unique id SOAP_TYPE__ns1__GettBusinessRecordHistoryByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GettBusinessRecordHistoryByConditionResponse() { _ns1__GettBusinessRecordHistoryByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GettBusinessRecordHistoryByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSellOtherCardRecordByCondition
#define SOAP_TYPE__ns1__GetSellOtherCardRecordByCondition (246)
/* ns1:GetSellOtherCardRecordByCondition */
class SOAP_CMAC _ns1__GetSellOtherCardRecordByCondition
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 246; } /* = unique id SOAP_TYPE__ns1__GetSellOtherCardRecordByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSellOtherCardRecordByCondition() { _ns1__GetSellOtherCardRecordByCondition::soap_default(NULL); }
	virtual ~_ns1__GetSellOtherCardRecordByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetSellOtherCardRecordByConditionResponse
#define SOAP_TYPE__ns1__GetSellOtherCardRecordByConditionResponse (247)
/* ns1:GetSellOtherCardRecordByConditionResponse */
class SOAP_CMAC _ns1__GetSellOtherCardRecordByConditionResponse
{
public:
	ns1__ArrayOfSellOtherCardItem *GetSellOtherCardRecordByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfSellOtherCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 247; } /* = unique id SOAP_TYPE__ns1__GetSellOtherCardRecordByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetSellOtherCardRecordByConditionResponse() { _ns1__GetSellOtherCardRecordByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetSellOtherCardRecordByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GettSellOtherCardRecordHistoryByCondition
#define SOAP_TYPE__ns1__GettSellOtherCardRecordHistoryByCondition (248)
/* ns1:GettSellOtherCardRecordHistoryByCondition */
class SOAP_CMAC _ns1__GettSellOtherCardRecordHistoryByCondition
{
public:
	int top;	/* required element of type xsd:int */
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 248; } /* = unique id SOAP_TYPE__ns1__GettSellOtherCardRecordHistoryByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GettSellOtherCardRecordHistoryByCondition() { _ns1__GettSellOtherCardRecordHistoryByCondition::soap_default(NULL); }
	virtual ~_ns1__GettSellOtherCardRecordHistoryByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GettSellOtherCardRecordHistoryByConditionResponse
#define SOAP_TYPE__ns1__GettSellOtherCardRecordHistoryByConditionResponse (249)
/* ns1:GettSellOtherCardRecordHistoryByConditionResponse */
class SOAP_CMAC _ns1__GettSellOtherCardRecordHistoryByConditionResponse
{
public:
	ns1__ArrayOfSellOtherCardItem *GettSellOtherCardRecordHistoryByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfSellOtherCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 249; } /* = unique id SOAP_TYPE__ns1__GettSellOtherCardRecordHistoryByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GettSellOtherCardRecordHistoryByConditionResponse() { _ns1__GettSellOtherCardRecordHistoryByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GettSellOtherCardRecordHistoryByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetOtherCardList
#define SOAP_TYPE__ns1__GetOtherCardList (250)
/* ns1:GetOtherCardList */
class SOAP_CMAC _ns1__GetOtherCardList
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 250; } /* = unique id SOAP_TYPE__ns1__GetOtherCardList */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetOtherCardList() { _ns1__GetOtherCardList::soap_default(NULL); }
	virtual ~_ns1__GetOtherCardList() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetOtherCardListResponse
#define SOAP_TYPE__ns1__GetOtherCardListResponse (251)
/* ns1:GetOtherCardListResponse */
class SOAP_CMAC _ns1__GetOtherCardListResponse
{
public:
	ns1__ArrayOfOtherCardItem *GetOtherCardListResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfOtherCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 251; } /* = unique id SOAP_TYPE__ns1__GetOtherCardListResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetOtherCardListResponse() { _ns1__GetOtherCardListResponse::soap_default(NULL); }
	virtual ~_ns1__GetOtherCardListResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetStockCardItemByCondition
#define SOAP_TYPE__ns1__GetStockCardItemByCondition (252)
/* ns1:GetStockCardItemByCondition */
class SOAP_CMAC _ns1__GetStockCardItemByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 252; } /* = unique id SOAP_TYPE__ns1__GetStockCardItemByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetStockCardItemByCondition() { _ns1__GetStockCardItemByCondition::soap_default(NULL); }
	virtual ~_ns1__GetStockCardItemByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetStockCardItemByConditionResponse
#define SOAP_TYPE__ns1__GetStockCardItemByConditionResponse (253)
/* ns1:GetStockCardItemByConditionResponse */
class SOAP_CMAC _ns1__GetStockCardItemByConditionResponse
{
public:
	ns1__ArrayOfStockCardItem *GetStockCardItemByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfStockCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 253; } /* = unique id SOAP_TYPE__ns1__GetStockCardItemByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetStockCardItemByConditionResponse() { _ns1__GetStockCardItemByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetStockCardItemByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetStockCardItemAndHistoryByCondition
#define SOAP_TYPE__ns1__GetStockCardItemAndHistoryByCondition (254)
/* ns1:GetStockCardItemAndHistoryByCondition */
class SOAP_CMAC _ns1__GetStockCardItemAndHistoryByCondition
{
public:
	char *condition;	/* optional element of type xsd:string */
	char *sessionId;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 254; } /* = unique id SOAP_TYPE__ns1__GetStockCardItemAndHistoryByCondition */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetStockCardItemAndHistoryByCondition() { _ns1__GetStockCardItemAndHistoryByCondition::soap_default(NULL); }
	virtual ~_ns1__GetStockCardItemAndHistoryByCondition() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetStockCardItemAndHistoryByConditionResponse
#define SOAP_TYPE__ns1__GetStockCardItemAndHistoryByConditionResponse (255)
/* ns1:GetStockCardItemAndHistoryByConditionResponse */
class SOAP_CMAC _ns1__GetStockCardItemAndHistoryByConditionResponse
{
public:
	ns1__ArrayOfStockCardItem *GetStockCardItemAndHistoryByConditionResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfStockCardItem */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 255; } /* = unique id SOAP_TYPE__ns1__GetStockCardItemAndHistoryByConditionResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetStockCardItemAndHistoryByConditionResponse() { _ns1__GetStockCardItemAndHistoryByConditionResponse::soap_default(NULL); }
	virtual ~_ns1__GetStockCardItemAndHistoryByConditionResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns10__queryPhoneNOInfo
#define SOAP_TYPE___ns10__queryPhoneNOInfo (357)
/* Operation wrapper: */
struct __ns10__queryPhoneNOInfo
{
public:
	_ns1__queryPhoneNOInfo *ns1__queryPhoneNOInfo;	/* optional element of type ns1:queryPhoneNOInfo */
};
#endif

#ifndef SOAP_TYPE___ns11__queryPhoneNOInfo
#define SOAP_TYPE___ns11__queryPhoneNOInfo (359)
/* Operation wrapper: */
struct __ns11__queryPhoneNOInfo
{
public:
	_ns1__queryPhoneNOInfo *ns1__queryPhoneNOInfo;	/* optional element of type ns1:queryPhoneNOInfo */
};
#endif

#ifndef SOAP_TYPE___ns12__queryPhoneNOInfo
#define SOAP_TYPE___ns12__queryPhoneNOInfo (361)
/* Operation wrapper: */
struct __ns12__queryPhoneNOInfo
{
public:
	_ns1__queryPhoneNOInfo *ns1__queryPhoneNOInfo;	/* optional element of type ns1:queryPhoneNOInfo */
};
#endif

#ifndef SOAP_TYPE___ns13__BuyMiniCard
#define SOAP_TYPE___ns13__BuyMiniCard (365)
/* Operation wrapper: */
struct __ns13__BuyMiniCard
{
public:
	_ns1__BuyMiniCard *ns1__BuyMiniCard;	/* optional element of type ns1:BuyMiniCard */
};
#endif

#ifndef SOAP_TYPE___ns13__GetPhoneNoByCondition
#define SOAP_TYPE___ns13__GetPhoneNoByCondition (369)
/* Operation wrapper: */
struct __ns13__GetPhoneNoByCondition
{
public:
	_ns1__GetPhoneNoByCondition *ns1__GetPhoneNoByCondition;	/* optional element of type ns1:GetPhoneNoByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GetMyNoSection
#define SOAP_TYPE___ns13__GetMyNoSection (373)
/* Operation wrapper: */
struct __ns13__GetMyNoSection
{
public:
	_ns1__GetMyNoSection *ns1__GetMyNoSection;	/* optional element of type ns1:GetMyNoSection */
};
#endif

#ifndef SOAP_TYPE___ns13__LockNo
#define SOAP_TYPE___ns13__LockNo (377)
/* Operation wrapper: */
struct __ns13__LockNo
{
public:
	_ns1__LockNo *ns1__LockNo;	/* optional element of type ns1:LockNo */
};
#endif

#ifndef SOAP_TYPE___ns13__UnlockNo
#define SOAP_TYPE___ns13__UnlockNo (381)
/* Operation wrapper: */
struct __ns13__UnlockNo
{
public:
	_ns1__UnlockNo *ns1__UnlockNo;	/* optional element of type ns1:UnlockNo */
};
#endif

#ifndef SOAP_TYPE___ns13__SubmitBusiness
#define SOAP_TYPE___ns13__SubmitBusiness (385)
/* Operation wrapper: */
struct __ns13__SubmitBusiness
{
public:
	_ns1__SubmitBusiness *ns1__SubmitBusiness;	/* optional element of type ns1:SubmitBusiness */
};
#endif

#ifndef SOAP_TYPE___ns13__SellNo
#define SOAP_TYPE___ns13__SellNo (389)
/* Operation wrapper: */
struct __ns13__SellNo
{
public:
	_ns1__SellNo *ns1__SellNo;	/* optional element of type ns1:SellNo */
};
#endif

#ifndef SOAP_TYPE___ns13__SellOhterCard
#define SOAP_TYPE___ns13__SellOhterCard (393)
/* Operation wrapper: */
struct __ns13__SellOhterCard
{
public:
	_ns1__SellOhterCard *ns1__SellOhterCard;	/* optional element of type ns1:SellOhterCard */
};
#endif

#ifndef SOAP_TYPE___ns13__GetMiniCardRecord
#define SOAP_TYPE___ns13__GetMiniCardRecord (397)
/* Operation wrapper: */
struct __ns13__GetMiniCardRecord
{
public:
	_ns1__GetMiniCardRecord *ns1__GetMiniCardRecord;	/* optional element of type ns1:GetMiniCardRecord */
};
#endif

#ifndef SOAP_TYPE___ns13__GetPayMiniCardByCondition
#define SOAP_TYPE___ns13__GetPayMiniCardByCondition (401)
/* Operation wrapper: */
struct __ns13__GetPayMiniCardByCondition
{
public:
	_ns1__GetPayMiniCardByCondition *ns1__GetPayMiniCardByCondition;	/* optional element of type ns1:GetPayMiniCardByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GetPayMiniCardHistoryByCondition
#define SOAP_TYPE___ns13__GetPayMiniCardHistoryByCondition (405)
/* Operation wrapper: */
struct __ns13__GetPayMiniCardHistoryByCondition
{
public:
	_ns1__GetPayMiniCardHistoryByCondition *ns1__GetPayMiniCardHistoryByCondition;	/* optional element of type ns1:GetPayMiniCardHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GetPhoneNoItemByCondition
#define SOAP_TYPE___ns13__GetPhoneNoItemByCondition (409)
/* Operation wrapper: */
struct __ns13__GetPhoneNoItemByCondition
{
public:
	_ns1__GetPhoneNoItemByCondition *ns1__GetPhoneNoItemByCondition;	/* optional element of type ns1:GetPhoneNoItemByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GetPhoneNoItemAndHistoryByCondition
#define SOAP_TYPE___ns13__GetPhoneNoItemAndHistoryByCondition (413)
/* Operation wrapper: */
struct __ns13__GetPhoneNoItemAndHistoryByCondition
{
public:
	_ns1__GetPhoneNoItemAndHistoryByCondition *ns1__GetPhoneNoItemAndHistoryByCondition;	/* optional element of type ns1:GetPhoneNoItemAndHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GetCardService
#define SOAP_TYPE___ns13__GetCardService (417)
/* Operation wrapper: */
struct __ns13__GetCardService
{
public:
	_ns1__GetCardService *ns1__GetCardService;	/* optional element of type ns1:GetCardService */
};
#endif

#ifndef SOAP_TYPE___ns13__GetSellCardRecordByCondition
#define SOAP_TYPE___ns13__GetSellCardRecordByCondition (421)
/* Operation wrapper: */
struct __ns13__GetSellCardRecordByCondition
{
public:
	_ns1__GetSellCardRecordByCondition *ns1__GetSellCardRecordByCondition;	/* optional element of type ns1:GetSellCardRecordByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GetSellCardRecordHistoryByCondition
#define SOAP_TYPE___ns13__GetSellCardRecordHistoryByCondition (425)
/* Operation wrapper: */
struct __ns13__GetSellCardRecordHistoryByCondition
{
public:
	_ns1__GetSellCardRecordHistoryByCondition *ns1__GetSellCardRecordHistoryByCondition;	/* optional element of type ns1:GetSellCardRecordHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GetBusinessRecordByCondition
#define SOAP_TYPE___ns13__GetBusinessRecordByCondition (429)
/* Operation wrapper: */
struct __ns13__GetBusinessRecordByCondition
{
public:
	_ns1__GetBusinessRecordByCondition *ns1__GetBusinessRecordByCondition;	/* optional element of type ns1:GetBusinessRecordByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GettBusinessRecordHistoryByCondition
#define SOAP_TYPE___ns13__GettBusinessRecordHistoryByCondition (433)
/* Operation wrapper: */
struct __ns13__GettBusinessRecordHistoryByCondition
{
public:
	_ns1__GettBusinessRecordHistoryByCondition *ns1__GettBusinessRecordHistoryByCondition;	/* optional element of type ns1:GettBusinessRecordHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GetSellOtherCardRecordByCondition
#define SOAP_TYPE___ns13__GetSellOtherCardRecordByCondition (437)
/* Operation wrapper: */
struct __ns13__GetSellOtherCardRecordByCondition
{
public:
	_ns1__GetSellOtherCardRecordByCondition *ns1__GetSellOtherCardRecordByCondition;	/* optional element of type ns1:GetSellOtherCardRecordByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GettSellOtherCardRecordHistoryByCondition
#define SOAP_TYPE___ns13__GettSellOtherCardRecordHistoryByCondition (441)
/* Operation wrapper: */
struct __ns13__GettSellOtherCardRecordHistoryByCondition
{
public:
	_ns1__GettSellOtherCardRecordHistoryByCondition *ns1__GettSellOtherCardRecordHistoryByCondition;	/* optional element of type ns1:GettSellOtherCardRecordHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GetOtherCardList
#define SOAP_TYPE___ns13__GetOtherCardList (445)
/* Operation wrapper: */
struct __ns13__GetOtherCardList
{
public:
	_ns1__GetOtherCardList *ns1__GetOtherCardList;	/* optional element of type ns1:GetOtherCardList */
};
#endif

#ifndef SOAP_TYPE___ns13__GetStockCardItemByCondition
#define SOAP_TYPE___ns13__GetStockCardItemByCondition (449)
/* Operation wrapper: */
struct __ns13__GetStockCardItemByCondition
{
public:
	_ns1__GetStockCardItemByCondition *ns1__GetStockCardItemByCondition;	/* optional element of type ns1:GetStockCardItemByCondition */
};
#endif

#ifndef SOAP_TYPE___ns13__GetStockCardItemAndHistoryByCondition
#define SOAP_TYPE___ns13__GetStockCardItemAndHistoryByCondition (453)
/* Operation wrapper: */
struct __ns13__GetStockCardItemAndHistoryByCondition
{
public:
	_ns1__GetStockCardItemAndHistoryByCondition *ns1__GetStockCardItemAndHistoryByCondition;	/* optional element of type ns1:GetStockCardItemAndHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__BuyMiniCard
#define SOAP_TYPE___ns14__BuyMiniCard (455)
/* Operation wrapper: */
struct __ns14__BuyMiniCard
{
public:
	_ns1__BuyMiniCard *ns1__BuyMiniCard;	/* optional element of type ns1:BuyMiniCard */
};
#endif

#ifndef SOAP_TYPE___ns14__GetPhoneNoByCondition
#define SOAP_TYPE___ns14__GetPhoneNoByCondition (457)
/* Operation wrapper: */
struct __ns14__GetPhoneNoByCondition
{
public:
	_ns1__GetPhoneNoByCondition *ns1__GetPhoneNoByCondition;	/* optional element of type ns1:GetPhoneNoByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GetMyNoSection
#define SOAP_TYPE___ns14__GetMyNoSection (459)
/* Operation wrapper: */
struct __ns14__GetMyNoSection
{
public:
	_ns1__GetMyNoSection *ns1__GetMyNoSection;	/* optional element of type ns1:GetMyNoSection */
};
#endif

#ifndef SOAP_TYPE___ns14__LockNo
#define SOAP_TYPE___ns14__LockNo (461)
/* Operation wrapper: */
struct __ns14__LockNo
{
public:
	_ns1__LockNo *ns1__LockNo;	/* optional element of type ns1:LockNo */
};
#endif

#ifndef SOAP_TYPE___ns14__UnlockNo
#define SOAP_TYPE___ns14__UnlockNo (463)
/* Operation wrapper: */
struct __ns14__UnlockNo
{
public:
	_ns1__UnlockNo *ns1__UnlockNo;	/* optional element of type ns1:UnlockNo */
};
#endif

#ifndef SOAP_TYPE___ns14__SubmitBusiness
#define SOAP_TYPE___ns14__SubmitBusiness (465)
/* Operation wrapper: */
struct __ns14__SubmitBusiness
{
public:
	_ns1__SubmitBusiness *ns1__SubmitBusiness;	/* optional element of type ns1:SubmitBusiness */
};
#endif

#ifndef SOAP_TYPE___ns14__SellNo
#define SOAP_TYPE___ns14__SellNo (467)
/* Operation wrapper: */
struct __ns14__SellNo
{
public:
	_ns1__SellNo *ns1__SellNo;	/* optional element of type ns1:SellNo */
};
#endif

#ifndef SOAP_TYPE___ns14__SellOhterCard
#define SOAP_TYPE___ns14__SellOhterCard (469)
/* Operation wrapper: */
struct __ns14__SellOhterCard
{
public:
	_ns1__SellOhterCard *ns1__SellOhterCard;	/* optional element of type ns1:SellOhterCard */
};
#endif

#ifndef SOAP_TYPE___ns14__GetMiniCardRecord
#define SOAP_TYPE___ns14__GetMiniCardRecord (471)
/* Operation wrapper: */
struct __ns14__GetMiniCardRecord
{
public:
	_ns1__GetMiniCardRecord *ns1__GetMiniCardRecord;	/* optional element of type ns1:GetMiniCardRecord */
};
#endif

#ifndef SOAP_TYPE___ns14__GetPayMiniCardByCondition
#define SOAP_TYPE___ns14__GetPayMiniCardByCondition (473)
/* Operation wrapper: */
struct __ns14__GetPayMiniCardByCondition
{
public:
	_ns1__GetPayMiniCardByCondition *ns1__GetPayMiniCardByCondition;	/* optional element of type ns1:GetPayMiniCardByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GetPayMiniCardHistoryByCondition
#define SOAP_TYPE___ns14__GetPayMiniCardHistoryByCondition (475)
/* Operation wrapper: */
struct __ns14__GetPayMiniCardHistoryByCondition
{
public:
	_ns1__GetPayMiniCardHistoryByCondition *ns1__GetPayMiniCardHistoryByCondition;	/* optional element of type ns1:GetPayMiniCardHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GetPhoneNoItemByCondition
#define SOAP_TYPE___ns14__GetPhoneNoItemByCondition (477)
/* Operation wrapper: */
struct __ns14__GetPhoneNoItemByCondition
{
public:
	_ns1__GetPhoneNoItemByCondition *ns1__GetPhoneNoItemByCondition;	/* optional element of type ns1:GetPhoneNoItemByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GetPhoneNoItemAndHistoryByCondition
#define SOAP_TYPE___ns14__GetPhoneNoItemAndHistoryByCondition (479)
/* Operation wrapper: */
struct __ns14__GetPhoneNoItemAndHistoryByCondition
{
public:
	_ns1__GetPhoneNoItemAndHistoryByCondition *ns1__GetPhoneNoItemAndHistoryByCondition;	/* optional element of type ns1:GetPhoneNoItemAndHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GetCardService
#define SOAP_TYPE___ns14__GetCardService (481)
/* Operation wrapper: */
struct __ns14__GetCardService
{
public:
	_ns1__GetCardService *ns1__GetCardService;	/* optional element of type ns1:GetCardService */
};
#endif

#ifndef SOAP_TYPE___ns14__GetSellCardRecordByCondition
#define SOAP_TYPE___ns14__GetSellCardRecordByCondition (483)
/* Operation wrapper: */
struct __ns14__GetSellCardRecordByCondition
{
public:
	_ns1__GetSellCardRecordByCondition *ns1__GetSellCardRecordByCondition;	/* optional element of type ns1:GetSellCardRecordByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GetSellCardRecordHistoryByCondition
#define SOAP_TYPE___ns14__GetSellCardRecordHistoryByCondition (485)
/* Operation wrapper: */
struct __ns14__GetSellCardRecordHistoryByCondition
{
public:
	_ns1__GetSellCardRecordHistoryByCondition *ns1__GetSellCardRecordHistoryByCondition;	/* optional element of type ns1:GetSellCardRecordHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GetBusinessRecordByCondition
#define SOAP_TYPE___ns14__GetBusinessRecordByCondition (487)
/* Operation wrapper: */
struct __ns14__GetBusinessRecordByCondition
{
public:
	_ns1__GetBusinessRecordByCondition *ns1__GetBusinessRecordByCondition;	/* optional element of type ns1:GetBusinessRecordByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GettBusinessRecordHistoryByCondition
#define SOAP_TYPE___ns14__GettBusinessRecordHistoryByCondition (489)
/* Operation wrapper: */
struct __ns14__GettBusinessRecordHistoryByCondition
{
public:
	_ns1__GettBusinessRecordHistoryByCondition *ns1__GettBusinessRecordHistoryByCondition;	/* optional element of type ns1:GettBusinessRecordHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GetSellOtherCardRecordByCondition
#define SOAP_TYPE___ns14__GetSellOtherCardRecordByCondition (491)
/* Operation wrapper: */
struct __ns14__GetSellOtherCardRecordByCondition
{
public:
	_ns1__GetSellOtherCardRecordByCondition *ns1__GetSellOtherCardRecordByCondition;	/* optional element of type ns1:GetSellOtherCardRecordByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GettSellOtherCardRecordHistoryByCondition
#define SOAP_TYPE___ns14__GettSellOtherCardRecordHistoryByCondition (493)
/* Operation wrapper: */
struct __ns14__GettSellOtherCardRecordHistoryByCondition
{
public:
	_ns1__GettSellOtherCardRecordHistoryByCondition *ns1__GettSellOtherCardRecordHistoryByCondition;	/* optional element of type ns1:GettSellOtherCardRecordHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GetOtherCardList
#define SOAP_TYPE___ns14__GetOtherCardList (495)
/* Operation wrapper: */
struct __ns14__GetOtherCardList
{
public:
	_ns1__GetOtherCardList *ns1__GetOtherCardList;	/* optional element of type ns1:GetOtherCardList */
};
#endif

#ifndef SOAP_TYPE___ns14__GetStockCardItemByCondition
#define SOAP_TYPE___ns14__GetStockCardItemByCondition (497)
/* Operation wrapper: */
struct __ns14__GetStockCardItemByCondition
{
public:
	_ns1__GetStockCardItemByCondition *ns1__GetStockCardItemByCondition;	/* optional element of type ns1:GetStockCardItemByCondition */
};
#endif

#ifndef SOAP_TYPE___ns14__GetStockCardItemAndHistoryByCondition
#define SOAP_TYPE___ns14__GetStockCardItemAndHistoryByCondition (499)
/* Operation wrapper: */
struct __ns14__GetStockCardItemAndHistoryByCondition
{
public:
	_ns1__GetStockCardItemAndHistoryByCondition *ns1__GetStockCardItemAndHistoryByCondition;	/* optional element of type ns1:GetStockCardItemAndHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns3__GetLocation
#define SOAP_TYPE___ns3__GetLocation (503)
/* Operation wrapper: */
struct __ns3__GetLocation
{
public:
	_ns1__GetLocation *ns1__GetLocation;	/* optional element of type ns1:GetLocation */
};
#endif

#ifndef SOAP_TYPE___ns3__PayMoney
#define SOAP_TYPE___ns3__PayMoney (507)
/* Operation wrapper: */
struct __ns3__PayMoney
{
public:
	_ns1__PayMoney *ns1__PayMoney;	/* optional element of type ns1:PayMoney */
};
#endif

#ifndef SOAP_TYPE___ns3__PayMoneyWithList
#define SOAP_TYPE___ns3__PayMoneyWithList (511)
/* Operation wrapper: */
struct __ns3__PayMoneyWithList
{
public:
	_ns1__PayMoneyWithList *ns1__PayMoneyWithList;	/* optional element of type ns1:PayMoneyWithList */
};
#endif

#ifndef SOAP_TYPE___ns3__RequstRollback
#define SOAP_TYPE___ns3__RequstRollback (515)
/* Operation wrapper: */
struct __ns3__RequstRollback
{
public:
	_ns1__RequstRollback *ns1__RequstRollback;	/* optional element of type ns1:RequstRollback */
};
#endif

#ifndef SOAP_TYPE___ns3__PayInternet
#define SOAP_TYPE___ns3__PayInternet (519)
/* Operation wrapper: */
struct __ns3__PayInternet
{
public:
	_ns1__PayInternet *ns1__PayInternet;	/* optional element of type ns1:PayInternet */
};
#endif

#ifndef SOAP_TYPE___ns3__PayInternetWithList
#define SOAP_TYPE___ns3__PayInternetWithList (523)
/* Operation wrapper: */
struct __ns3__PayInternetWithList
{
public:
	_ns1__PayInternetWithList *ns1__PayInternetWithList;	/* optional element of type ns1:PayInternetWithList */
};
#endif

#ifndef SOAP_TYPE___ns3__RequstInternetRollback
#define SOAP_TYPE___ns3__RequstInternetRollback (527)
/* Operation wrapper: */
struct __ns3__RequstInternetRollback
{
public:
	_ns1__RequstInternetRollback *ns1__RequstInternetRollback;	/* optional element of type ns1:RequstInternetRollback */
};
#endif

#ifndef SOAP_TYPE___ns3__PayGame
#define SOAP_TYPE___ns3__PayGame (531)
/* Operation wrapper: */
struct __ns3__PayGame
{
public:
	_ns1__PayGame *ns1__PayGame;	/* optional element of type ns1:PayGame */
};
#endif

#ifndef SOAP_TYPE___ns3__PayPublicTel
#define SOAP_TYPE___ns3__PayPublicTel (535)
/* Operation wrapper: */
struct __ns3__PayPublicTel
{
public:
	_ns1__PayPublicTel *ns1__PayPublicTel;	/* optional element of type ns1:PayPublicTel */
};
#endif

#ifndef SOAP_TYPE___ns3__GetPaymentRecord
#define SOAP_TYPE___ns3__GetPaymentRecord (539)
/* Operation wrapper: */
struct __ns3__GetPaymentRecord
{
public:
	_ns1__GetPaymentRecord *ns1__GetPaymentRecord;	/* optional element of type ns1:GetPaymentRecord */
};
#endif

#ifndef SOAP_TYPE___ns3__GetPaymentItem
#define SOAP_TYPE___ns3__GetPaymentItem (543)
/* Operation wrapper: */
struct __ns3__GetPaymentItem
{
public:
	_ns1__GetPaymentItem *ns1__GetPaymentItem;	/* optional element of type ns1:GetPaymentItem */
};
#endif

#ifndef SOAP_TYPE___ns3__GetTransactionByCondition
#define SOAP_TYPE___ns3__GetTransactionByCondition (547)
/* Operation wrapper: */
struct __ns3__GetTransactionByCondition
{
public:
	_ns1__GetTransactionByCondition *ns1__GetTransactionByCondition;	/* optional element of type ns1:GetTransactionByCondition */
};
#endif

#ifndef SOAP_TYPE___ns3__GetTransactionStaticsByCondition
#define SOAP_TYPE___ns3__GetTransactionStaticsByCondition (551)
/* Operation wrapper: */
struct __ns3__GetTransactionStaticsByCondition
{
public:
	_ns1__GetTransactionStaticsByCondition *ns1__GetTransactionStaticsByCondition;	/* optional element of type ns1:GetTransactionStaticsByCondition */
};
#endif

#ifndef SOAP_TYPE___ns3__GetPaymentOrPaymentHistoryByCondition
#define SOAP_TYPE___ns3__GetPaymentOrPaymentHistoryByCondition (555)
/* Operation wrapper: */
struct __ns3__GetPaymentOrPaymentHistoryByCondition
{
public:
	_ns1__GetPaymentOrPaymentHistoryByCondition *ns1__GetPaymentOrPaymentHistoryByCondition;	/* optional element of type ns1:GetPaymentOrPaymentHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns3__GetPayInternetByCondition
#define SOAP_TYPE___ns3__GetPayInternetByCondition (559)
/* Operation wrapper: */
struct __ns3__GetPayInternetByCondition
{
public:
	_ns1__GetPayInternetByCondition *ns1__GetPayInternetByCondition;	/* optional element of type ns1:GetPayInternetByCondition */
};
#endif

#ifndef SOAP_TYPE___ns3__GetPayInternetHistoryByCondition
#define SOAP_TYPE___ns3__GetPayInternetHistoryByCondition (563)
/* Operation wrapper: */
struct __ns3__GetPayInternetHistoryByCondition
{
public:
	_ns1__GetPayInternetHistoryByCondition *ns1__GetPayInternetHistoryByCondition;	/* optional element of type ns1:GetPayInternetHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns3__GetPayGameByCondition
#define SOAP_TYPE___ns3__GetPayGameByCondition (567)
/* Operation wrapper: */
struct __ns3__GetPayGameByCondition
{
public:
	_ns1__GetPayGameByCondition *ns1__GetPayGameByCondition;	/* optional element of type ns1:GetPayGameByCondition */
};
#endif

#ifndef SOAP_TYPE___ns3__GetPayGameHistoryByCondition
#define SOAP_TYPE___ns3__GetPayGameHistoryByCondition (571)
/* Operation wrapper: */
struct __ns3__GetPayGameHistoryByCondition
{
public:
	_ns1__GetPayGameHistoryByCondition *ns1__GetPayGameHistoryByCondition;	/* optional element of type ns1:GetPayGameHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns3__GetPayPublicTelByCondition
#define SOAP_TYPE___ns3__GetPayPublicTelByCondition (575)
/* Operation wrapper: */
struct __ns3__GetPayPublicTelByCondition
{
public:
	_ns1__GetPayPublicTelByCondition *ns1__GetPayPublicTelByCondition;	/* optional element of type ns1:GetPayPublicTelByCondition */
};
#endif

#ifndef SOAP_TYPE___ns3__GetPayPublicTelHistoryByCondition
#define SOAP_TYPE___ns3__GetPayPublicTelHistoryByCondition (579)
/* Operation wrapper: */
struct __ns3__GetPayPublicTelHistoryByCondition
{
public:
	_ns1__GetPayPublicTelHistoryByCondition *ns1__GetPayPublicTelHistoryByCondition;	/* optional element of type ns1:GetPayPublicTelHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns4__GetLocation
#define SOAP_TYPE___ns4__GetLocation (581)
/* Operation wrapper: */
struct __ns4__GetLocation
{
public:
	_ns1__GetLocation *ns1__GetLocation;	/* optional element of type ns1:GetLocation */
};
#endif

#ifndef SOAP_TYPE___ns4__PayMoney
#define SOAP_TYPE___ns4__PayMoney (583)
/* Operation wrapper: */
struct __ns4__PayMoney
{
public:
	_ns1__PayMoney *ns1__PayMoney;	/* optional element of type ns1:PayMoney */
};
#endif

#ifndef SOAP_TYPE___ns4__PayMoneyWithList
#define SOAP_TYPE___ns4__PayMoneyWithList (585)
/* Operation wrapper: */
struct __ns4__PayMoneyWithList
{
public:
	_ns1__PayMoneyWithList *ns1__PayMoneyWithList;	/* optional element of type ns1:PayMoneyWithList */
};
#endif

#ifndef SOAP_TYPE___ns4__RequstRollback
#define SOAP_TYPE___ns4__RequstRollback (587)
/* Operation wrapper: */
struct __ns4__RequstRollback
{
public:
	_ns1__RequstRollback *ns1__RequstRollback;	/* optional element of type ns1:RequstRollback */
};
#endif

#ifndef SOAP_TYPE___ns4__PayInternet
#define SOAP_TYPE___ns4__PayInternet (589)
/* Operation wrapper: */
struct __ns4__PayInternet
{
public:
	_ns1__PayInternet *ns1__PayInternet;	/* optional element of type ns1:PayInternet */
};
#endif

#ifndef SOAP_TYPE___ns4__PayInternetWithList
#define SOAP_TYPE___ns4__PayInternetWithList (591)
/* Operation wrapper: */
struct __ns4__PayInternetWithList
{
public:
	_ns1__PayInternetWithList *ns1__PayInternetWithList;	/* optional element of type ns1:PayInternetWithList */
};
#endif

#ifndef SOAP_TYPE___ns4__RequstInternetRollback
#define SOAP_TYPE___ns4__RequstInternetRollback (593)
/* Operation wrapper: */
struct __ns4__RequstInternetRollback
{
public:
	_ns1__RequstInternetRollback *ns1__RequstInternetRollback;	/* optional element of type ns1:RequstInternetRollback */
};
#endif

#ifndef SOAP_TYPE___ns4__PayGame
#define SOAP_TYPE___ns4__PayGame (595)
/* Operation wrapper: */
struct __ns4__PayGame
{
public:
	_ns1__PayGame *ns1__PayGame;	/* optional element of type ns1:PayGame */
};
#endif

#ifndef SOAP_TYPE___ns4__PayPublicTel
#define SOAP_TYPE___ns4__PayPublicTel (597)
/* Operation wrapper: */
struct __ns4__PayPublicTel
{
public:
	_ns1__PayPublicTel *ns1__PayPublicTel;	/* optional element of type ns1:PayPublicTel */
};
#endif

#ifndef SOAP_TYPE___ns4__GetPaymentRecord
#define SOAP_TYPE___ns4__GetPaymentRecord (599)
/* Operation wrapper: */
struct __ns4__GetPaymentRecord
{
public:
	_ns1__GetPaymentRecord *ns1__GetPaymentRecord;	/* optional element of type ns1:GetPaymentRecord */
};
#endif

#ifndef SOAP_TYPE___ns4__GetPaymentItem
#define SOAP_TYPE___ns4__GetPaymentItem (601)
/* Operation wrapper: */
struct __ns4__GetPaymentItem
{
public:
	_ns1__GetPaymentItem *ns1__GetPaymentItem;	/* optional element of type ns1:GetPaymentItem */
};
#endif

#ifndef SOAP_TYPE___ns4__GetTransactionByCondition
#define SOAP_TYPE___ns4__GetTransactionByCondition (603)
/* Operation wrapper: */
struct __ns4__GetTransactionByCondition
{
public:
	_ns1__GetTransactionByCondition *ns1__GetTransactionByCondition;	/* optional element of type ns1:GetTransactionByCondition */
};
#endif

#ifndef SOAP_TYPE___ns4__GetTransactionStaticsByCondition
#define SOAP_TYPE___ns4__GetTransactionStaticsByCondition (605)
/* Operation wrapper: */
struct __ns4__GetTransactionStaticsByCondition
{
public:
	_ns1__GetTransactionStaticsByCondition *ns1__GetTransactionStaticsByCondition;	/* optional element of type ns1:GetTransactionStaticsByCondition */
};
#endif

#ifndef SOAP_TYPE___ns4__GetPaymentOrPaymentHistoryByCondition
#define SOAP_TYPE___ns4__GetPaymentOrPaymentHistoryByCondition (607)
/* Operation wrapper: */
struct __ns4__GetPaymentOrPaymentHistoryByCondition
{
public:
	_ns1__GetPaymentOrPaymentHistoryByCondition *ns1__GetPaymentOrPaymentHistoryByCondition;	/* optional element of type ns1:GetPaymentOrPaymentHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns4__GetPayInternetByCondition
#define SOAP_TYPE___ns4__GetPayInternetByCondition (609)
/* Operation wrapper: */
struct __ns4__GetPayInternetByCondition
{
public:
	_ns1__GetPayInternetByCondition *ns1__GetPayInternetByCondition;	/* optional element of type ns1:GetPayInternetByCondition */
};
#endif

#ifndef SOAP_TYPE___ns4__GetPayInternetHistoryByCondition
#define SOAP_TYPE___ns4__GetPayInternetHistoryByCondition (611)
/* Operation wrapper: */
struct __ns4__GetPayInternetHistoryByCondition
{
public:
	_ns1__GetPayInternetHistoryByCondition *ns1__GetPayInternetHistoryByCondition;	/* optional element of type ns1:GetPayInternetHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns4__GetPayGameByCondition
#define SOAP_TYPE___ns4__GetPayGameByCondition (613)
/* Operation wrapper: */
struct __ns4__GetPayGameByCondition
{
public:
	_ns1__GetPayGameByCondition *ns1__GetPayGameByCondition;	/* optional element of type ns1:GetPayGameByCondition */
};
#endif

#ifndef SOAP_TYPE___ns4__GetPayGameHistoryByCondition
#define SOAP_TYPE___ns4__GetPayGameHistoryByCondition (615)
/* Operation wrapper: */
struct __ns4__GetPayGameHistoryByCondition
{
public:
	_ns1__GetPayGameHistoryByCondition *ns1__GetPayGameHistoryByCondition;	/* optional element of type ns1:GetPayGameHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns4__GetPayPublicTelByCondition
#define SOAP_TYPE___ns4__GetPayPublicTelByCondition (617)
/* Operation wrapper: */
struct __ns4__GetPayPublicTelByCondition
{
public:
	_ns1__GetPayPublicTelByCondition *ns1__GetPayPublicTelByCondition;	/* optional element of type ns1:GetPayPublicTelByCondition */
};
#endif

#ifndef SOAP_TYPE___ns4__GetPayPublicTelHistoryByCondition
#define SOAP_TYPE___ns4__GetPayPublicTelHistoryByCondition (619)
/* Operation wrapper: */
struct __ns4__GetPayPublicTelHistoryByCondition
{
public:
	_ns1__GetPayPublicTelHistoryByCondition *ns1__GetPayPublicTelHistoryByCondition;	/* optional element of type ns1:GetPayPublicTelHistoryByCondition */
};
#endif

#ifndef SOAP_TYPE___ns5__HelloWorld
#define SOAP_TYPE___ns5__HelloWorld (623)
/* Operation wrapper: */
struct __ns5__HelloWorld
{
public:
	_ns1__HelloWorld *ns1__HelloWorld;	/* optional element of type ns1:HelloWorld */
};
#endif

#ifndef SOAP_TYPE___ns5__loggout
#define SOAP_TYPE___ns5__loggout (627)
/* Operation wrapper: */
struct __ns5__loggout
{
public:
	_ns1__loggout *ns1__loggout;	/* optional element of type ns1:loggout */
};
#endif

#ifndef SOAP_TYPE___ns5__TestLogin
#define SOAP_TYPE___ns5__TestLogin (631)
/* Operation wrapper: */
struct __ns5__TestLogin
{
public:
	_ns1__TestLogin *ns1__TestLogin;	/* optional element of type ns1:TestLogin */
};
#endif

#ifndef SOAP_TYPE___ns5__GetUserInfo
#define SOAP_TYPE___ns5__GetUserInfo (635)
/* Operation wrapper: */
struct __ns5__GetUserInfo
{
public:
	_ns1__GetUserInfo *ns1__GetUserInfo;	/* optional element of type ns1:GetUserInfo */
};
#endif

#ifndef SOAP_TYPE___ns5__RegisterUser
#define SOAP_TYPE___ns5__RegisterUser (639)
/* Operation wrapper: */
struct __ns5__RegisterUser
{
public:
	_ns1__RegisterUser *ns1__RegisterUser;	/* optional element of type ns1:RegisterUser */
};
#endif

#ifndef SOAP_TYPE___ns5__AlterPsw
#define SOAP_TYPE___ns5__AlterPsw (643)
/* Operation wrapper: */
struct __ns5__AlterPsw
{
public:
	_ns1__AlterPsw *ns1__AlterPsw;	/* optional element of type ns1:AlterPsw */
};
#endif

#ifndef SOAP_TYPE___ns5__AlterUserInfo
#define SOAP_TYPE___ns5__AlterUserInfo (647)
/* Operation wrapper: */
struct __ns5__AlterUserInfo
{
public:
	_ns1__AlterUserInfo *ns1__AlterUserInfo;	/* optional element of type ns1:AlterUserInfo */
};
#endif

#ifndef SOAP_TYPE___ns5__AddAcountPayment
#define SOAP_TYPE___ns5__AddAcountPayment (651)
/* Operation wrapper: */
struct __ns5__AddAcountPayment
{
public:
	_ns1__AddAcountPayment *ns1__AddAcountPayment;	/* optional element of type ns1:AddAcountPayment */
};
#endif

#ifndef SOAP_TYPE___ns5__GetReturnInfo
#define SOAP_TYPE___ns5__GetReturnInfo (655)
/* Operation wrapper: */
struct __ns5__GetReturnInfo
{
public:
	_ns1__GetReturnInfo *ns1__GetReturnInfo;	/* optional element of type ns1:GetReturnInfo */
};
#endif

#ifndef SOAP_TYPE___ns5__CharegeReturnedMoney
#define SOAP_TYPE___ns5__CharegeReturnedMoney (659)
/* Operation wrapper: */
struct __ns5__CharegeReturnedMoney
{
public:
	_ns1__CharegeReturnedMoney *ns1__CharegeReturnedMoney;	/* optional element of type ns1:CharegeReturnedMoney */
};
#endif

#ifndef SOAP_TYPE___ns5__GetWorkNameList
#define SOAP_TYPE___ns5__GetWorkNameList (663)
/* Operation wrapper: */
struct __ns5__GetWorkNameList
{
public:
	_ns1__GetWorkNameList *ns1__GetWorkNameList;	/* optional element of type ns1:GetWorkNameList */
};
#endif

#ifndef SOAP_TYPE___ns5__GetUserFunction
#define SOAP_TYPE___ns5__GetUserFunction (667)
/* Operation wrapper: */
struct __ns5__GetUserFunction
{
public:
	_ns1__GetUserFunction *ns1__GetUserFunction;	/* optional element of type ns1:GetUserFunction */
};
#endif

#ifndef SOAP_TYPE___ns5__GetReturnRecord
#define SOAP_TYPE___ns5__GetReturnRecord (671)
/* Operation wrapper: */
struct __ns5__GetReturnRecord
{
public:
	_ns1__GetReturnRecord *ns1__GetReturnRecord;	/* optional element of type ns1:GetReturnRecord */
};
#endif

#ifndef SOAP_TYPE___ns5__GetReturnRecordDeal
#define SOAP_TYPE___ns5__GetReturnRecordDeal (675)
/* Operation wrapper: */
struct __ns5__GetReturnRecordDeal
{
public:
	_ns1__GetReturnRecordDeal *ns1__GetReturnRecordDeal;	/* optional element of type ns1:GetReturnRecordDeal */
};
#endif

#ifndef SOAP_TYPE___ns5__GetAcountPaymentRecord
#define SOAP_TYPE___ns5__GetAcountPaymentRecord (679)
/* Operation wrapper: */
struct __ns5__GetAcountPaymentRecord
{
public:
	_ns1__GetAcountPaymentRecord *ns1__GetAcountPaymentRecord;	/* optional element of type ns1:GetAcountPaymentRecord */
};
#endif

#ifndef SOAP_TYPE___ns6__HelloWorld
#define SOAP_TYPE___ns6__HelloWorld (681)
/* Operation wrapper: */
struct __ns6__HelloWorld
{
public:
	_ns1__HelloWorld *ns1__HelloWorld;	/* optional element of type ns1:HelloWorld */
};
#endif

#ifndef SOAP_TYPE___ns6__loggout
#define SOAP_TYPE___ns6__loggout (683)
/* Operation wrapper: */
struct __ns6__loggout
{
public:
	_ns1__loggout *ns1__loggout;	/* optional element of type ns1:loggout */
};
#endif

#ifndef SOAP_TYPE___ns6__TestLogin
#define SOAP_TYPE___ns6__TestLogin (685)
/* Operation wrapper: */
struct __ns6__TestLogin
{
public:
	_ns1__TestLogin *ns1__TestLogin;	/* optional element of type ns1:TestLogin */
};
#endif

#ifndef SOAP_TYPE___ns6__GetUserInfo
#define SOAP_TYPE___ns6__GetUserInfo (687)
/* Operation wrapper: */
struct __ns6__GetUserInfo
{
public:
	_ns1__GetUserInfo *ns1__GetUserInfo;	/* optional element of type ns1:GetUserInfo */
};
#endif

#ifndef SOAP_TYPE___ns6__RegisterUser
#define SOAP_TYPE___ns6__RegisterUser (689)
/* Operation wrapper: */
struct __ns6__RegisterUser
{
public:
	_ns1__RegisterUser *ns1__RegisterUser;	/* optional element of type ns1:RegisterUser */
};
#endif

#ifndef SOAP_TYPE___ns6__AlterPsw
#define SOAP_TYPE___ns6__AlterPsw (691)
/* Operation wrapper: */
struct __ns6__AlterPsw
{
public:
	_ns1__AlterPsw *ns1__AlterPsw;	/* optional element of type ns1:AlterPsw */
};
#endif

#ifndef SOAP_TYPE___ns6__AlterUserInfo
#define SOAP_TYPE___ns6__AlterUserInfo (693)
/* Operation wrapper: */
struct __ns6__AlterUserInfo
{
public:
	_ns1__AlterUserInfo *ns1__AlterUserInfo;	/* optional element of type ns1:AlterUserInfo */
};
#endif

#ifndef SOAP_TYPE___ns6__AddAcountPayment
#define SOAP_TYPE___ns6__AddAcountPayment (695)
/* Operation wrapper: */
struct __ns6__AddAcountPayment
{
public:
	_ns1__AddAcountPayment *ns1__AddAcountPayment;	/* optional element of type ns1:AddAcountPayment */
};
#endif

#ifndef SOAP_TYPE___ns6__GetReturnInfo
#define SOAP_TYPE___ns6__GetReturnInfo (697)
/* Operation wrapper: */
struct __ns6__GetReturnInfo
{
public:
	_ns1__GetReturnInfo *ns1__GetReturnInfo;	/* optional element of type ns1:GetReturnInfo */
};
#endif

#ifndef SOAP_TYPE___ns6__CharegeReturnedMoney
#define SOAP_TYPE___ns6__CharegeReturnedMoney (699)
/* Operation wrapper: */
struct __ns6__CharegeReturnedMoney
{
public:
	_ns1__CharegeReturnedMoney *ns1__CharegeReturnedMoney;	/* optional element of type ns1:CharegeReturnedMoney */
};
#endif

#ifndef SOAP_TYPE___ns6__GetWorkNameList
#define SOAP_TYPE___ns6__GetWorkNameList (701)
/* Operation wrapper: */
struct __ns6__GetWorkNameList
{
public:
	_ns1__GetWorkNameList *ns1__GetWorkNameList;	/* optional element of type ns1:GetWorkNameList */
};
#endif

#ifndef SOAP_TYPE___ns6__GetUserFunction
#define SOAP_TYPE___ns6__GetUserFunction (703)
/* Operation wrapper: */
struct __ns6__GetUserFunction
{
public:
	_ns1__GetUserFunction *ns1__GetUserFunction;	/* optional element of type ns1:GetUserFunction */
};
#endif

#ifndef SOAP_TYPE___ns6__GetReturnRecord
#define SOAP_TYPE___ns6__GetReturnRecord (705)
/* Operation wrapper: */
struct __ns6__GetReturnRecord
{
public:
	_ns1__GetReturnRecord *ns1__GetReturnRecord;	/* optional element of type ns1:GetReturnRecord */
};
#endif

#ifndef SOAP_TYPE___ns6__GetReturnRecordDeal
#define SOAP_TYPE___ns6__GetReturnRecordDeal (707)
/* Operation wrapper: */
struct __ns6__GetReturnRecordDeal
{
public:
	_ns1__GetReturnRecordDeal *ns1__GetReturnRecordDeal;	/* optional element of type ns1:GetReturnRecordDeal */
};
#endif

#ifndef SOAP_TYPE___ns6__GetAcountPaymentRecord
#define SOAP_TYPE___ns6__GetAcountPaymentRecord (709)
/* Operation wrapper: */
struct __ns6__GetAcountPaymentRecord
{
public:
	_ns1__GetAcountPaymentRecord *ns1__GetAcountPaymentRecord;	/* optional element of type ns1:GetAcountPaymentRecord */
};
#endif

#ifndef SOAP_TYPE___ns7__GetDicContentByCondition
#define SOAP_TYPE___ns7__GetDicContentByCondition (713)
/* Operation wrapper: */
struct __ns7__GetDicContentByCondition
{
public:
	_ns1__GetDicContentByCondition *ns1__GetDicContentByCondition;	/* optional element of type ns1:GetDicContentByCondition */
};
#endif

#ifndef SOAP_TYPE___ns7__GetAllCategory
#define SOAP_TYPE___ns7__GetAllCategory (717)
/* Operation wrapper: */
struct __ns7__GetAllCategory
{
public:
	_ns1__GetAllCategory *ns1__GetAllCategory;	/* optional element of type ns1:GetAllCategory */
};
#endif

#ifndef SOAP_TYPE___ns7__InsertDicContent
#define SOAP_TYPE___ns7__InsertDicContent (721)
/* Operation wrapper: */
struct __ns7__InsertDicContent
{
public:
	_ns1__InsertDicContent *ns1__InsertDicContent;	/* optional element of type ns1:InsertDicContent */
};
#endif

#ifndef SOAP_TYPE___ns7__UpdateDicContent
#define SOAP_TYPE___ns7__UpdateDicContent (725)
/* Operation wrapper: */
struct __ns7__UpdateDicContent
{
public:
	_ns1__UpdateDicContent *ns1__UpdateDicContent;	/* optional element of type ns1:UpdateDicContent */
};
#endif

#ifndef SOAP_TYPE___ns7__DeleteDicContent
#define SOAP_TYPE___ns7__DeleteDicContent (729)
/* Operation wrapper: */
struct __ns7__DeleteDicContent
{
public:
	_ns1__DeleteDicContent *ns1__DeleteDicContent;	/* optional element of type ns1:DeleteDicContent */
};
#endif

#ifndef SOAP_TYPE___ns7__UpdateDicContentByCategory
#define SOAP_TYPE___ns7__UpdateDicContentByCategory (733)
/* Operation wrapper: */
struct __ns7__UpdateDicContentByCategory
{
public:
	_ns1__UpdateDicContentByCategory *ns1__UpdateDicContentByCategory;	/* optional element of type ns1:UpdateDicContentByCategory */
};
#endif

#ifndef SOAP_TYPE___ns7__GetFunctionList
#define SOAP_TYPE___ns7__GetFunctionList (737)
/* Operation wrapper: */
struct __ns7__GetFunctionList
{
public:
	_ns1__GetFunctionList *ns1__GetFunctionList;	/* optional element of type ns1:GetFunctionList */
};
#endif

#ifndef SOAP_TYPE___ns7__UpdateUserFunctionList
#define SOAP_TYPE___ns7__UpdateUserFunctionList (741)
/* Operation wrapper: */
struct __ns7__UpdateUserFunctionList
{
public:
	_ns1__UpdateUserFunctionList *ns1__UpdateUserFunctionList;	/* optional element of type ns1:UpdateUserFunctionList */
};
#endif

#ifndef SOAP_TYPE___ns7__UpdateFunctionRight
#define SOAP_TYPE___ns7__UpdateFunctionRight (745)
/* Operation wrapper: */
struct __ns7__UpdateFunctionRight
{
public:
	_ns1__UpdateFunctionRight *ns1__UpdateFunctionRight;	/* optional element of type ns1:UpdateFunctionRight */
};
#endif

#ifndef SOAP_TYPE___ns7__GetTableStatistics
#define SOAP_TYPE___ns7__GetTableStatistics (749)
/* Operation wrapper: */
struct __ns7__GetTableStatistics
{
public:
	_ns1__GetTableStatistics *ns1__GetTableStatistics;	/* optional element of type ns1:GetTableStatistics */
};
#endif

#ifndef SOAP_TYPE___ns7__GetNoticeList
#define SOAP_TYPE___ns7__GetNoticeList (753)
/* Operation wrapper: */
struct __ns7__GetNoticeList
{
public:
	_ns1__GetNoticeList *ns1__GetNoticeList;	/* optional element of type ns1:GetNoticeList */
};
#endif

#ifndef SOAP_TYPE___ns7__GetNoticeListByCondition
#define SOAP_TYPE___ns7__GetNoticeListByCondition (757)
/* Operation wrapper: */
struct __ns7__GetNoticeListByCondition
{
public:
	_ns1__GetNoticeListByCondition *ns1__GetNoticeListByCondition;	/* optional element of type ns1:GetNoticeListByCondition */
};
#endif

#ifndef SOAP_TYPE___ns7__GetNoticeItem
#define SOAP_TYPE___ns7__GetNoticeItem (761)
/* Operation wrapper: */
struct __ns7__GetNoticeItem
{
public:
	_ns1__GetNoticeItem *ns1__GetNoticeItem;	/* optional element of type ns1:GetNoticeItem */
};
#endif

#ifndef SOAP_TYPE___ns7__GetAlertNoticeList
#define SOAP_TYPE___ns7__GetAlertNoticeList (765)
/* Operation wrapper: */
struct __ns7__GetAlertNoticeList
{
public:
	_ns1__GetAlertNoticeList *ns1__GetAlertNoticeList;	/* optional element of type ns1:GetAlertNoticeList */
};
#endif

#ifndef SOAP_TYPE___ns7__AddNoticeItem
#define SOAP_TYPE___ns7__AddNoticeItem (769)
/* Operation wrapper: */
struct __ns7__AddNoticeItem
{
public:
	_ns1__AddNoticeItem *ns1__AddNoticeItem;	/* optional element of type ns1:AddNoticeItem */
};
#endif

#ifndef SOAP_TYPE___ns7__AddNoticeItemToSomeone
#define SOAP_TYPE___ns7__AddNoticeItemToSomeone (773)
/* Operation wrapper: */
struct __ns7__AddNoticeItemToSomeone
{
public:
	_ns1__AddNoticeItemToSomeone *ns1__AddNoticeItemToSomeone;	/* optional element of type ns1:AddNoticeItemToSomeone */
};
#endif

#ifndef SOAP_TYPE___ns7__UpdateNoticeItem
#define SOAP_TYPE___ns7__UpdateNoticeItem (777)
/* Operation wrapper: */
struct __ns7__UpdateNoticeItem
{
public:
	_ns1__UpdateNoticeItem *ns1__UpdateNoticeItem;	/* optional element of type ns1:UpdateNoticeItem */
};
#endif

#ifndef SOAP_TYPE___ns7__DeleteNoticeItem
#define SOAP_TYPE___ns7__DeleteNoticeItem (781)
/* Operation wrapper: */
struct __ns7__DeleteNoticeItem
{
public:
	_ns1__DeleteNoticeItem *ns1__DeleteNoticeItem;	/* optional element of type ns1:DeleteNoticeItem */
};
#endif

#ifndef SOAP_TYPE___ns7__InserNoticeToSomeOne
#define SOAP_TYPE___ns7__InserNoticeToSomeOne (785)
/* Operation wrapper: */
struct __ns7__InserNoticeToSomeOne
{
public:
	_ns1__InserNoticeToSomeOne *ns1__InserNoticeToSomeOne;	/* optional element of type ns1:InserNoticeToSomeOne */
};
#endif

#ifndef SOAP_TYPE___ns7__GetReturnProportionRecord
#define SOAP_TYPE___ns7__GetReturnProportionRecord (789)
/* Operation wrapper: */
struct __ns7__GetReturnProportionRecord
{
public:
	_ns1__GetReturnProportionRecord *ns1__GetReturnProportionRecord;	/* optional element of type ns1:GetReturnProportionRecord */
};
#endif

#ifndef SOAP_TYPE___ns7__AddtReturnProportion
#define SOAP_TYPE___ns7__AddtReturnProportion (793)
/* Operation wrapper: */
struct __ns7__AddtReturnProportion
{
public:
	_ns1__AddtReturnProportion *ns1__AddtReturnProportion;	/* optional element of type ns1:AddtReturnProportion */
};
#endif

#ifndef SOAP_TYPE___ns7__UpdatetReturnProportion
#define SOAP_TYPE___ns7__UpdatetReturnProportion (797)
/* Operation wrapper: */
struct __ns7__UpdatetReturnProportion
{
public:
	_ns1__UpdatetReturnProportion *ns1__UpdatetReturnProportion;	/* optional element of type ns1:UpdatetReturnProportion */
};
#endif

#ifndef SOAP_TYPE___ns7__DeletetReturnProportion
#define SOAP_TYPE___ns7__DeletetReturnProportion (801)
/* Operation wrapper: */
struct __ns7__DeletetReturnProportion
{
public:
	_ns1__DeletetReturnProportion *ns1__DeletetReturnProportion;	/* optional element of type ns1:DeletetReturnProportion */
};
#endif

#ifndef SOAP_TYPE___ns7__GetPhoneNumberBelongByCondition
#define SOAP_TYPE___ns7__GetPhoneNumberBelongByCondition (805)
/* Operation wrapper: */
struct __ns7__GetPhoneNumberBelongByCondition
{
public:
	_ns1__GetPhoneNumberBelongByCondition *ns1__GetPhoneNumberBelongByCondition;	/* optional element of type ns1:GetPhoneNumberBelongByCondition */
};
#endif

#ifndef SOAP_TYPE___ns7__UpdatePhoneNumberBelong
#define SOAP_TYPE___ns7__UpdatePhoneNumberBelong (809)
/* Operation wrapper: */
struct __ns7__UpdatePhoneNumberBelong
{
public:
	_ns1__UpdatePhoneNumberBelong *ns1__UpdatePhoneNumberBelong;	/* optional element of type ns1:UpdatePhoneNumberBelong */
};
#endif

#ifndef SOAP_TYPE___ns7__AddPhoneNumberBelong
#define SOAP_TYPE___ns7__AddPhoneNumberBelong (813)
/* Operation wrapper: */
struct __ns7__AddPhoneNumberBelong
{
public:
	_ns1__AddPhoneNumberBelong *ns1__AddPhoneNumberBelong;	/* optional element of type ns1:AddPhoneNumberBelong */
};
#endif

#ifndef SOAP_TYPE___ns7__DeletePhoneNumberBelong
#define SOAP_TYPE___ns7__DeletePhoneNumberBelong (817)
/* Operation wrapper: */
struct __ns7__DeletePhoneNumberBelong
{
public:
	_ns1__DeletePhoneNumberBelong *ns1__DeletePhoneNumberBelong;	/* optional element of type ns1:DeletePhoneNumberBelong */
};
#endif

#ifndef SOAP_TYPE___ns7__GetCompanyInfo
#define SOAP_TYPE___ns7__GetCompanyInfo (821)
/* Operation wrapper: */
struct __ns7__GetCompanyInfo
{
public:
	_ns1__GetCompanyInfo *ns1__GetCompanyInfo;	/* optional element of type ns1:GetCompanyInfo */
};
#endif

#ifndef SOAP_TYPE___ns7__UpdateCompanyInfo
#define SOAP_TYPE___ns7__UpdateCompanyInfo (825)
/* Operation wrapper: */
struct __ns7__UpdateCompanyInfo
{
public:
	_ns1__UpdateCompanyInfo *ns1__UpdateCompanyInfo;	/* optional element of type ns1:UpdateCompanyInfo */
};
#endif

#ifndef SOAP_TYPE___ns7__GetCompanyAccount
#define SOAP_TYPE___ns7__GetCompanyAccount (829)
/* Operation wrapper: */
struct __ns7__GetCompanyAccount
{
public:
	_ns1__GetCompanyAccount *ns1__GetCompanyAccount;	/* optional element of type ns1:GetCompanyAccount */
};
#endif

#ifndef SOAP_TYPE___ns7__AddCompanyAccount
#define SOAP_TYPE___ns7__AddCompanyAccount (833)
/* Operation wrapper: */
struct __ns7__AddCompanyAccount
{
public:
	_ns1__AddCompanyAccount *ns1__AddCompanyAccount;	/* optional element of type ns1:AddCompanyAccount */
};
#endif

#ifndef SOAP_TYPE___ns7__UpdateCompanyAccount
#define SOAP_TYPE___ns7__UpdateCompanyAccount (837)
/* Operation wrapper: */
struct __ns7__UpdateCompanyAccount
{
public:
	_ns1__UpdateCompanyAccount *ns1__UpdateCompanyAccount;	/* optional element of type ns1:UpdateCompanyAccount */
};
#endif

#ifndef SOAP_TYPE___ns7__DeleteCompanyAccount
#define SOAP_TYPE___ns7__DeleteCompanyAccount (841)
/* Operation wrapper: */
struct __ns7__DeleteCompanyAccount
{
public:
	_ns1__DeleteCompanyAccount *ns1__DeleteCompanyAccount;	/* optional element of type ns1:DeleteCompanyAccount */
};
#endif

#ifndef SOAP_TYPE___ns7__GetClientVersion
#define SOAP_TYPE___ns7__GetClientVersion (845)
/* Operation wrapper: */
struct __ns7__GetClientVersion
{
public:
	_ns1__GetClientVersion *ns1__GetClientVersion;	/* optional element of type ns1:GetClientVersion */
};
#endif

#ifndef SOAP_TYPE___ns8__GetDicContentByCondition
#define SOAP_TYPE___ns8__GetDicContentByCondition (847)
/* Operation wrapper: */
struct __ns8__GetDicContentByCondition
{
public:
	_ns1__GetDicContentByCondition *ns1__GetDicContentByCondition;	/* optional element of type ns1:GetDicContentByCondition */
};
#endif

#ifndef SOAP_TYPE___ns8__GetAllCategory
#define SOAP_TYPE___ns8__GetAllCategory (849)
/* Operation wrapper: */
struct __ns8__GetAllCategory
{
public:
	_ns1__GetAllCategory *ns1__GetAllCategory;	/* optional element of type ns1:GetAllCategory */
};
#endif

#ifndef SOAP_TYPE___ns8__InsertDicContent
#define SOAP_TYPE___ns8__InsertDicContent (851)
/* Operation wrapper: */
struct __ns8__InsertDicContent
{
public:
	_ns1__InsertDicContent *ns1__InsertDicContent;	/* optional element of type ns1:InsertDicContent */
};
#endif

#ifndef SOAP_TYPE___ns8__UpdateDicContent
#define SOAP_TYPE___ns8__UpdateDicContent (853)
/* Operation wrapper: */
struct __ns8__UpdateDicContent
{
public:
	_ns1__UpdateDicContent *ns1__UpdateDicContent;	/* optional element of type ns1:UpdateDicContent */
};
#endif

#ifndef SOAP_TYPE___ns8__DeleteDicContent
#define SOAP_TYPE___ns8__DeleteDicContent (855)
/* Operation wrapper: */
struct __ns8__DeleteDicContent
{
public:
	_ns1__DeleteDicContent *ns1__DeleteDicContent;	/* optional element of type ns1:DeleteDicContent */
};
#endif

#ifndef SOAP_TYPE___ns8__UpdateDicContentByCategory
#define SOAP_TYPE___ns8__UpdateDicContentByCategory (857)
/* Operation wrapper: */
struct __ns8__UpdateDicContentByCategory
{
public:
	_ns1__UpdateDicContentByCategory *ns1__UpdateDicContentByCategory;	/* optional element of type ns1:UpdateDicContentByCategory */
};
#endif

#ifndef SOAP_TYPE___ns8__GetFunctionList
#define SOAP_TYPE___ns8__GetFunctionList (859)
/* Operation wrapper: */
struct __ns8__GetFunctionList
{
public:
	_ns1__GetFunctionList *ns1__GetFunctionList;	/* optional element of type ns1:GetFunctionList */
};
#endif

#ifndef SOAP_TYPE___ns8__UpdateUserFunctionList
#define SOAP_TYPE___ns8__UpdateUserFunctionList (861)
/* Operation wrapper: */
struct __ns8__UpdateUserFunctionList
{
public:
	_ns1__UpdateUserFunctionList *ns1__UpdateUserFunctionList;	/* optional element of type ns1:UpdateUserFunctionList */
};
#endif

#ifndef SOAP_TYPE___ns8__UpdateFunctionRight
#define SOAP_TYPE___ns8__UpdateFunctionRight (863)
/* Operation wrapper: */
struct __ns8__UpdateFunctionRight
{
public:
	_ns1__UpdateFunctionRight *ns1__UpdateFunctionRight;	/* optional element of type ns1:UpdateFunctionRight */
};
#endif

#ifndef SOAP_TYPE___ns8__GetTableStatistics
#define SOAP_TYPE___ns8__GetTableStatistics (865)
/* Operation wrapper: */
struct __ns8__GetTableStatistics
{
public:
	_ns1__GetTableStatistics *ns1__GetTableStatistics;	/* optional element of type ns1:GetTableStatistics */
};
#endif

#ifndef SOAP_TYPE___ns8__GetNoticeList
#define SOAP_TYPE___ns8__GetNoticeList (867)
/* Operation wrapper: */
struct __ns8__GetNoticeList
{
public:
	_ns1__GetNoticeList *ns1__GetNoticeList;	/* optional element of type ns1:GetNoticeList */
};
#endif

#ifndef SOAP_TYPE___ns8__GetNoticeListByCondition
#define SOAP_TYPE___ns8__GetNoticeListByCondition (869)
/* Operation wrapper: */
struct __ns8__GetNoticeListByCondition
{
public:
	_ns1__GetNoticeListByCondition *ns1__GetNoticeListByCondition;	/* optional element of type ns1:GetNoticeListByCondition */
};
#endif

#ifndef SOAP_TYPE___ns8__GetNoticeItem
#define SOAP_TYPE___ns8__GetNoticeItem (871)
/* Operation wrapper: */
struct __ns8__GetNoticeItem
{
public:
	_ns1__GetNoticeItem *ns1__GetNoticeItem;	/* optional element of type ns1:GetNoticeItem */
};
#endif

#ifndef SOAP_TYPE___ns8__GetAlertNoticeList
#define SOAP_TYPE___ns8__GetAlertNoticeList (873)
/* Operation wrapper: */
struct __ns8__GetAlertNoticeList
{
public:
	_ns1__GetAlertNoticeList *ns1__GetAlertNoticeList;	/* optional element of type ns1:GetAlertNoticeList */
};
#endif

#ifndef SOAP_TYPE___ns8__AddNoticeItem
#define SOAP_TYPE___ns8__AddNoticeItem (875)
/* Operation wrapper: */
struct __ns8__AddNoticeItem
{
public:
	_ns1__AddNoticeItem *ns1__AddNoticeItem;	/* optional element of type ns1:AddNoticeItem */
};
#endif

#ifndef SOAP_TYPE___ns8__AddNoticeItemToSomeone
#define SOAP_TYPE___ns8__AddNoticeItemToSomeone (877)
/* Operation wrapper: */
struct __ns8__AddNoticeItemToSomeone
{
public:
	_ns1__AddNoticeItemToSomeone *ns1__AddNoticeItemToSomeone;	/* optional element of type ns1:AddNoticeItemToSomeone */
};
#endif

#ifndef SOAP_TYPE___ns8__UpdateNoticeItem
#define SOAP_TYPE___ns8__UpdateNoticeItem (879)
/* Operation wrapper: */
struct __ns8__UpdateNoticeItem
{
public:
	_ns1__UpdateNoticeItem *ns1__UpdateNoticeItem;	/* optional element of type ns1:UpdateNoticeItem */
};
#endif

#ifndef SOAP_TYPE___ns8__DeleteNoticeItem
#define SOAP_TYPE___ns8__DeleteNoticeItem (881)
/* Operation wrapper: */
struct __ns8__DeleteNoticeItem
{
public:
	_ns1__DeleteNoticeItem *ns1__DeleteNoticeItem;	/* optional element of type ns1:DeleteNoticeItem */
};
#endif

#ifndef SOAP_TYPE___ns8__InserNoticeToSomeOne
#define SOAP_TYPE___ns8__InserNoticeToSomeOne (883)
/* Operation wrapper: */
struct __ns8__InserNoticeToSomeOne
{
public:
	_ns1__InserNoticeToSomeOne *ns1__InserNoticeToSomeOne;	/* optional element of type ns1:InserNoticeToSomeOne */
};
#endif

#ifndef SOAP_TYPE___ns8__GetReturnProportionRecord
#define SOAP_TYPE___ns8__GetReturnProportionRecord (885)
/* Operation wrapper: */
struct __ns8__GetReturnProportionRecord
{
public:
	_ns1__GetReturnProportionRecord *ns1__GetReturnProportionRecord;	/* optional element of type ns1:GetReturnProportionRecord */
};
#endif

#ifndef SOAP_TYPE___ns8__AddtReturnProportion
#define SOAP_TYPE___ns8__AddtReturnProportion (887)
/* Operation wrapper: */
struct __ns8__AddtReturnProportion
{
public:
	_ns1__AddtReturnProportion *ns1__AddtReturnProportion;	/* optional element of type ns1:AddtReturnProportion */
};
#endif

#ifndef SOAP_TYPE___ns8__UpdatetReturnProportion
#define SOAP_TYPE___ns8__UpdatetReturnProportion (889)
/* Operation wrapper: */
struct __ns8__UpdatetReturnProportion
{
public:
	_ns1__UpdatetReturnProportion *ns1__UpdatetReturnProportion;	/* optional element of type ns1:UpdatetReturnProportion */
};
#endif

#ifndef SOAP_TYPE___ns8__DeletetReturnProportion
#define SOAP_TYPE___ns8__DeletetReturnProportion (891)
/* Operation wrapper: */
struct __ns8__DeletetReturnProportion
{
public:
	_ns1__DeletetReturnProportion *ns1__DeletetReturnProportion;	/* optional element of type ns1:DeletetReturnProportion */
};
#endif

#ifndef SOAP_TYPE___ns8__GetPhoneNumberBelongByCondition
#define SOAP_TYPE___ns8__GetPhoneNumberBelongByCondition (893)
/* Operation wrapper: */
struct __ns8__GetPhoneNumberBelongByCondition
{
public:
	_ns1__GetPhoneNumberBelongByCondition *ns1__GetPhoneNumberBelongByCondition;	/* optional element of type ns1:GetPhoneNumberBelongByCondition */
};
#endif

#ifndef SOAP_TYPE___ns8__UpdatePhoneNumberBelong
#define SOAP_TYPE___ns8__UpdatePhoneNumberBelong (895)
/* Operation wrapper: */
struct __ns8__UpdatePhoneNumberBelong
{
public:
	_ns1__UpdatePhoneNumberBelong *ns1__UpdatePhoneNumberBelong;	/* optional element of type ns1:UpdatePhoneNumberBelong */
};
#endif

#ifndef SOAP_TYPE___ns8__AddPhoneNumberBelong
#define SOAP_TYPE___ns8__AddPhoneNumberBelong (897)
/* Operation wrapper: */
struct __ns8__AddPhoneNumberBelong
{
public:
	_ns1__AddPhoneNumberBelong *ns1__AddPhoneNumberBelong;	/* optional element of type ns1:AddPhoneNumberBelong */
};
#endif

#ifndef SOAP_TYPE___ns8__DeletePhoneNumberBelong
#define SOAP_TYPE___ns8__DeletePhoneNumberBelong (899)
/* Operation wrapper: */
struct __ns8__DeletePhoneNumberBelong
{
public:
	_ns1__DeletePhoneNumberBelong *ns1__DeletePhoneNumberBelong;	/* optional element of type ns1:DeletePhoneNumberBelong */
};
#endif

#ifndef SOAP_TYPE___ns8__GetCompanyInfo
#define SOAP_TYPE___ns8__GetCompanyInfo (901)
/* Operation wrapper: */
struct __ns8__GetCompanyInfo
{
public:
	_ns1__GetCompanyInfo *ns1__GetCompanyInfo;	/* optional element of type ns1:GetCompanyInfo */
};
#endif

#ifndef SOAP_TYPE___ns8__UpdateCompanyInfo
#define SOAP_TYPE___ns8__UpdateCompanyInfo (903)
/* Operation wrapper: */
struct __ns8__UpdateCompanyInfo
{
public:
	_ns1__UpdateCompanyInfo *ns1__UpdateCompanyInfo;	/* optional element of type ns1:UpdateCompanyInfo */
};
#endif

#ifndef SOAP_TYPE___ns8__GetCompanyAccount
#define SOAP_TYPE___ns8__GetCompanyAccount (905)
/* Operation wrapper: */
struct __ns8__GetCompanyAccount
{
public:
	_ns1__GetCompanyAccount *ns1__GetCompanyAccount;	/* optional element of type ns1:GetCompanyAccount */
};
#endif

#ifndef SOAP_TYPE___ns8__AddCompanyAccount
#define SOAP_TYPE___ns8__AddCompanyAccount (907)
/* Operation wrapper: */
struct __ns8__AddCompanyAccount
{
public:
	_ns1__AddCompanyAccount *ns1__AddCompanyAccount;	/* optional element of type ns1:AddCompanyAccount */
};
#endif

#ifndef SOAP_TYPE___ns8__UpdateCompanyAccount
#define SOAP_TYPE___ns8__UpdateCompanyAccount (909)
/* Operation wrapper: */
struct __ns8__UpdateCompanyAccount
{
public:
	_ns1__UpdateCompanyAccount *ns1__UpdateCompanyAccount;	/* optional element of type ns1:UpdateCompanyAccount */
};
#endif

#ifndef SOAP_TYPE___ns8__DeleteCompanyAccount
#define SOAP_TYPE___ns8__DeleteCompanyAccount (911)
/* Operation wrapper: */
struct __ns8__DeleteCompanyAccount
{
public:
	_ns1__DeleteCompanyAccount *ns1__DeleteCompanyAccount;	/* optional element of type ns1:DeleteCompanyAccount */
};
#endif

#ifndef SOAP_TYPE___ns8__GetClientVersion
#define SOAP_TYPE___ns8__GetClientVersion (913)
/* Operation wrapper: */
struct __ns8__GetClientVersion
{
public:
	_ns1__GetClientVersion *ns1__GetClientVersion;	/* optional element of type ns1:GetClientVersion */
};
#endif

#ifndef SOAP_TYPE___ns9__queryPhoneNOInfo
#define SOAP_TYPE___ns9__queryPhoneNOInfo (915)
/* Operation wrapper: */
struct __ns9__queryPhoneNOInfo
{
public:
	_ns1__queryPhoneNOInfo *ns1__queryPhoneNOInfo;	/* optional element of type ns1:queryPhoneNOInfo */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (916)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (917)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (919)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (922)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (923)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_ns2__guid
#define SOAP_TYPE_ns2__guid (256)
typedef char *ns2__guid;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stubs                                                     *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns10__queryPhoneNOInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__queryPhoneNOInfo *ns1__queryPhoneNOInfo, _ns1__queryPhoneNOInfoResponse *ns1__queryPhoneNOInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns11__queryPhoneNOInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__queryPhoneNOInfo *ns1__queryPhoneNOInfo, _ns1__queryPhoneNOInfoResponse *ns1__queryPhoneNOInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns12__queryPhoneNOInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__queryPhoneNOInfo *ns1__queryPhoneNOInfo, _ns1__queryPhoneNOInfoResponse *ns1__queryPhoneNOInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__BuyMiniCard(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__BuyMiniCard *ns1__BuyMiniCard, _ns1__BuyMiniCardResponse *ns1__BuyMiniCardResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetPhoneNoByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPhoneNoByCondition *ns1__GetPhoneNoByCondition, _ns1__GetPhoneNoByConditionResponse *ns1__GetPhoneNoByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetMyNoSection(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMyNoSection *ns1__GetMyNoSection, _ns1__GetMyNoSectionResponse *ns1__GetMyNoSectionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__LockNo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__LockNo *ns1__LockNo, _ns1__LockNoResponse *ns1__LockNoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__UnlockNo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UnlockNo *ns1__UnlockNo, _ns1__UnlockNoResponse *ns1__UnlockNoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__SubmitBusiness(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SubmitBusiness *ns1__SubmitBusiness, _ns1__SubmitBusinessResponse *ns1__SubmitBusinessResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__SellNo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SellNo *ns1__SellNo, _ns1__SellNoResponse *ns1__SellNoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__SellOhterCard(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SellOhterCard *ns1__SellOhterCard, _ns1__SellOhterCardResponse *ns1__SellOhterCardResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetMiniCardRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMiniCardRecord *ns1__GetMiniCardRecord, _ns1__GetMiniCardRecordResponse *ns1__GetMiniCardRecordResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetPayMiniCardByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayMiniCardByCondition *ns1__GetPayMiniCardByCondition, _ns1__GetPayMiniCardByConditionResponse *ns1__GetPayMiniCardByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetPayMiniCardHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayMiniCardHistoryByCondition *ns1__GetPayMiniCardHistoryByCondition, _ns1__GetPayMiniCardHistoryByConditionResponse *ns1__GetPayMiniCardHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetPhoneNoItemByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPhoneNoItemByCondition *ns1__GetPhoneNoItemByCondition, _ns1__GetPhoneNoItemByConditionResponse *ns1__GetPhoneNoItemByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetPhoneNoItemAndHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPhoneNoItemAndHistoryByCondition *ns1__GetPhoneNoItemAndHistoryByCondition, _ns1__GetPhoneNoItemAndHistoryByConditionResponse *ns1__GetPhoneNoItemAndHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetCardService(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCardService *ns1__GetCardService, _ns1__GetCardServiceResponse *ns1__GetCardServiceResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetSellCardRecordByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetSellCardRecordByCondition *ns1__GetSellCardRecordByCondition, _ns1__GetSellCardRecordByConditionResponse *ns1__GetSellCardRecordByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetSellCardRecordHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetSellCardRecordHistoryByCondition *ns1__GetSellCardRecordHistoryByCondition, _ns1__GetSellCardRecordHistoryByConditionResponse *ns1__GetSellCardRecordHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetBusinessRecordByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetBusinessRecordByCondition *ns1__GetBusinessRecordByCondition, _ns1__GetBusinessRecordByConditionResponse *ns1__GetBusinessRecordByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GettBusinessRecordHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GettBusinessRecordHistoryByCondition *ns1__GettBusinessRecordHistoryByCondition, _ns1__GettBusinessRecordHistoryByConditionResponse *ns1__GettBusinessRecordHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetSellOtherCardRecordByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetSellOtherCardRecordByCondition *ns1__GetSellOtherCardRecordByCondition, _ns1__GetSellOtherCardRecordByConditionResponse *ns1__GetSellOtherCardRecordByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GettSellOtherCardRecordHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GettSellOtherCardRecordHistoryByCondition *ns1__GettSellOtherCardRecordHistoryByCondition, _ns1__GettSellOtherCardRecordHistoryByConditionResponse *ns1__GettSellOtherCardRecordHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetOtherCardList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetOtherCardList *ns1__GetOtherCardList, _ns1__GetOtherCardListResponse *ns1__GetOtherCardListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetStockCardItemByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetStockCardItemByCondition *ns1__GetStockCardItemByCondition, _ns1__GetStockCardItemByConditionResponse *ns1__GetStockCardItemByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns13__GetStockCardItemAndHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetStockCardItemAndHistoryByCondition *ns1__GetStockCardItemAndHistoryByCondition, _ns1__GetStockCardItemAndHistoryByConditionResponse *ns1__GetStockCardItemAndHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__BuyMiniCard(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__BuyMiniCard *ns1__BuyMiniCard, _ns1__BuyMiniCardResponse *ns1__BuyMiniCardResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetPhoneNoByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPhoneNoByCondition *ns1__GetPhoneNoByCondition, _ns1__GetPhoneNoByConditionResponse *ns1__GetPhoneNoByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetMyNoSection(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMyNoSection *ns1__GetMyNoSection, _ns1__GetMyNoSectionResponse *ns1__GetMyNoSectionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__LockNo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__LockNo *ns1__LockNo, _ns1__LockNoResponse *ns1__LockNoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__UnlockNo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UnlockNo *ns1__UnlockNo, _ns1__UnlockNoResponse *ns1__UnlockNoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__SubmitBusiness(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SubmitBusiness *ns1__SubmitBusiness, _ns1__SubmitBusinessResponse *ns1__SubmitBusinessResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__SellNo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SellNo *ns1__SellNo, _ns1__SellNoResponse *ns1__SellNoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__SellOhterCard(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SellOhterCard *ns1__SellOhterCard, _ns1__SellOhterCardResponse *ns1__SellOhterCardResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetMiniCardRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetMiniCardRecord *ns1__GetMiniCardRecord, _ns1__GetMiniCardRecordResponse *ns1__GetMiniCardRecordResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetPayMiniCardByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayMiniCardByCondition *ns1__GetPayMiniCardByCondition, _ns1__GetPayMiniCardByConditionResponse *ns1__GetPayMiniCardByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetPayMiniCardHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayMiniCardHistoryByCondition *ns1__GetPayMiniCardHistoryByCondition, _ns1__GetPayMiniCardHistoryByConditionResponse *ns1__GetPayMiniCardHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetPhoneNoItemByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPhoneNoItemByCondition *ns1__GetPhoneNoItemByCondition, _ns1__GetPhoneNoItemByConditionResponse *ns1__GetPhoneNoItemByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetPhoneNoItemAndHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPhoneNoItemAndHistoryByCondition *ns1__GetPhoneNoItemAndHistoryByCondition, _ns1__GetPhoneNoItemAndHistoryByConditionResponse *ns1__GetPhoneNoItemAndHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetCardService(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCardService *ns1__GetCardService, _ns1__GetCardServiceResponse *ns1__GetCardServiceResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetSellCardRecordByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetSellCardRecordByCondition *ns1__GetSellCardRecordByCondition, _ns1__GetSellCardRecordByConditionResponse *ns1__GetSellCardRecordByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetSellCardRecordHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetSellCardRecordHistoryByCondition *ns1__GetSellCardRecordHistoryByCondition, _ns1__GetSellCardRecordHistoryByConditionResponse *ns1__GetSellCardRecordHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetBusinessRecordByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetBusinessRecordByCondition *ns1__GetBusinessRecordByCondition, _ns1__GetBusinessRecordByConditionResponse *ns1__GetBusinessRecordByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GettBusinessRecordHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GettBusinessRecordHistoryByCondition *ns1__GettBusinessRecordHistoryByCondition, _ns1__GettBusinessRecordHistoryByConditionResponse *ns1__GettBusinessRecordHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetSellOtherCardRecordByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetSellOtherCardRecordByCondition *ns1__GetSellOtherCardRecordByCondition, _ns1__GetSellOtherCardRecordByConditionResponse *ns1__GetSellOtherCardRecordByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GettSellOtherCardRecordHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GettSellOtherCardRecordHistoryByCondition *ns1__GettSellOtherCardRecordHistoryByCondition, _ns1__GettSellOtherCardRecordHistoryByConditionResponse *ns1__GettSellOtherCardRecordHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetOtherCardList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetOtherCardList *ns1__GetOtherCardList, _ns1__GetOtherCardListResponse *ns1__GetOtherCardListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetStockCardItemByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetStockCardItemByCondition *ns1__GetStockCardItemByCondition, _ns1__GetStockCardItemByConditionResponse *ns1__GetStockCardItemByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns14__GetStockCardItemAndHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetStockCardItemAndHistoryByCondition *ns1__GetStockCardItemAndHistoryByCondition, _ns1__GetStockCardItemAndHistoryByConditionResponse *ns1__GetStockCardItemAndHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetLocation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetLocation *ns1__GetLocation, _ns1__GetLocationResponse *ns1__GetLocationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__PayMoney(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayMoney *ns1__PayMoney, _ns1__PayMoneyResponse *ns1__PayMoneyResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__PayMoneyWithList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayMoneyWithList *ns1__PayMoneyWithList, _ns1__PayMoneyWithListResponse *ns1__PayMoneyWithListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__RequstRollback(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RequstRollback *ns1__RequstRollback, _ns1__RequstRollbackResponse *ns1__RequstRollbackResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__PayInternet(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayInternet *ns1__PayInternet, _ns1__PayInternetResponse *ns1__PayInternetResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__PayInternetWithList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayInternetWithList *ns1__PayInternetWithList, _ns1__PayInternetWithListResponse *ns1__PayInternetWithListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__RequstInternetRollback(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RequstInternetRollback *ns1__RequstInternetRollback, _ns1__RequstInternetRollbackResponse *ns1__RequstInternetRollbackResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__PayGame(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayGame *ns1__PayGame, _ns1__PayGameResponse *ns1__PayGameResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__PayPublicTel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayPublicTel *ns1__PayPublicTel, _ns1__PayPublicTelResponse *ns1__PayPublicTelResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPaymentRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPaymentRecord *ns1__GetPaymentRecord, _ns1__GetPaymentRecordResponse *ns1__GetPaymentRecordResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPaymentItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPaymentItem *ns1__GetPaymentItem, _ns1__GetPaymentItemResponse *ns1__GetPaymentItemResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetTransactionByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTransactionByCondition *ns1__GetTransactionByCondition, _ns1__GetTransactionByConditionResponse *ns1__GetTransactionByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetTransactionStaticsByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTransactionStaticsByCondition *ns1__GetTransactionStaticsByCondition, _ns1__GetTransactionStaticsByConditionResponse *ns1__GetTransactionStaticsByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPaymentOrPaymentHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPaymentOrPaymentHistoryByCondition *ns1__GetPaymentOrPaymentHistoryByCondition, _ns1__GetPaymentOrPaymentHistoryByConditionResponse *ns1__GetPaymentOrPaymentHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPayInternetByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayInternetByCondition *ns1__GetPayInternetByCondition, _ns1__GetPayInternetByConditionResponse *ns1__GetPayInternetByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPayInternetHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayInternetHistoryByCondition *ns1__GetPayInternetHistoryByCondition, _ns1__GetPayInternetHistoryByConditionResponse *ns1__GetPayInternetHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPayGameByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayGameByCondition *ns1__GetPayGameByCondition, _ns1__GetPayGameByConditionResponse *ns1__GetPayGameByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPayGameHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayGameHistoryByCondition *ns1__GetPayGameHistoryByCondition, _ns1__GetPayGameHistoryByConditionResponse *ns1__GetPayGameHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPayPublicTelByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayPublicTelByCondition *ns1__GetPayPublicTelByCondition, _ns1__GetPayPublicTelByConditionResponse *ns1__GetPayPublicTelByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__GetPayPublicTelHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayPublicTelHistoryByCondition *ns1__GetPayPublicTelHistoryByCondition, _ns1__GetPayPublicTelHistoryByConditionResponse *ns1__GetPayPublicTelHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetLocation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetLocation *ns1__GetLocation, _ns1__GetLocationResponse *ns1__GetLocationResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__PayMoney(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayMoney *ns1__PayMoney, _ns1__PayMoneyResponse *ns1__PayMoneyResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__PayMoneyWithList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayMoneyWithList *ns1__PayMoneyWithList, _ns1__PayMoneyWithListResponse *ns1__PayMoneyWithListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__RequstRollback(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RequstRollback *ns1__RequstRollback, _ns1__RequstRollbackResponse *ns1__RequstRollbackResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__PayInternet(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayInternet *ns1__PayInternet, _ns1__PayInternetResponse *ns1__PayInternetResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__PayInternetWithList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayInternetWithList *ns1__PayInternetWithList, _ns1__PayInternetWithListResponse *ns1__PayInternetWithListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__RequstInternetRollback(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RequstInternetRollback *ns1__RequstInternetRollback, _ns1__RequstInternetRollbackResponse *ns1__RequstInternetRollbackResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__PayGame(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayGame *ns1__PayGame, _ns1__PayGameResponse *ns1__PayGameResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__PayPublicTel(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__PayPublicTel *ns1__PayPublicTel, _ns1__PayPublicTelResponse *ns1__PayPublicTelResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetPaymentRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPaymentRecord *ns1__GetPaymentRecord, _ns1__GetPaymentRecordResponse *ns1__GetPaymentRecordResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetPaymentItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPaymentItem *ns1__GetPaymentItem, _ns1__GetPaymentItemResponse *ns1__GetPaymentItemResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetTransactionByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTransactionByCondition *ns1__GetTransactionByCondition, _ns1__GetTransactionByConditionResponse *ns1__GetTransactionByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetTransactionStaticsByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTransactionStaticsByCondition *ns1__GetTransactionStaticsByCondition, _ns1__GetTransactionStaticsByConditionResponse *ns1__GetTransactionStaticsByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetPaymentOrPaymentHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPaymentOrPaymentHistoryByCondition *ns1__GetPaymentOrPaymentHistoryByCondition, _ns1__GetPaymentOrPaymentHistoryByConditionResponse *ns1__GetPaymentOrPaymentHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetPayInternetByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayInternetByCondition *ns1__GetPayInternetByCondition, _ns1__GetPayInternetByConditionResponse *ns1__GetPayInternetByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetPayInternetHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayInternetHistoryByCondition *ns1__GetPayInternetHistoryByCondition, _ns1__GetPayInternetHistoryByConditionResponse *ns1__GetPayInternetHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetPayGameByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayGameByCondition *ns1__GetPayGameByCondition, _ns1__GetPayGameByConditionResponse *ns1__GetPayGameByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetPayGameHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayGameHistoryByCondition *ns1__GetPayGameHistoryByCondition, _ns1__GetPayGameHistoryByConditionResponse *ns1__GetPayGameHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetPayPublicTelByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayPublicTelByCondition *ns1__GetPayPublicTelByCondition, _ns1__GetPayPublicTelByConditionResponse *ns1__GetPayPublicTelByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__GetPayPublicTelHistoryByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPayPublicTelHistoryByCondition *ns1__GetPayPublicTelHistoryByCondition, _ns1__GetPayPublicTelHistoryByConditionResponse *ns1__GetPayPublicTelHistoryByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__HelloWorld(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__HelloWorld *ns1__HelloWorld, _ns1__HelloWorldResponse *ns1__HelloWorldResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__loggout(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__loggout *ns1__loggout, _ns1__loggoutResponse *ns1__loggoutResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__TestLogin(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__TestLogin *ns1__TestLogin, _ns1__TestLoginResponse *ns1__TestLoginResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__GetUserInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUserInfo *ns1__GetUserInfo, _ns1__GetUserInfoResponse *ns1__GetUserInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__RegisterUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RegisterUser *ns1__RegisterUser, _ns1__RegisterUserResponse *ns1__RegisterUserResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__AlterPsw(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AlterPsw *ns1__AlterPsw, _ns1__AlterPswResponse *ns1__AlterPswResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__AlterUserInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AlterUserInfo *ns1__AlterUserInfo, _ns1__AlterUserInfoResponse *ns1__AlterUserInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__AddAcountPayment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddAcountPayment *ns1__AddAcountPayment, _ns1__AddAcountPaymentResponse *ns1__AddAcountPaymentResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__GetReturnInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetReturnInfo *ns1__GetReturnInfo, _ns1__GetReturnInfoResponse *ns1__GetReturnInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__CharegeReturnedMoney(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CharegeReturnedMoney *ns1__CharegeReturnedMoney, _ns1__CharegeReturnedMoneyResponse *ns1__CharegeReturnedMoneyResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__GetWorkNameList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetWorkNameList *ns1__GetWorkNameList, _ns1__GetWorkNameListResponse *ns1__GetWorkNameListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__GetUserFunction(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUserFunction *ns1__GetUserFunction, _ns1__GetUserFunctionResponse *ns1__GetUserFunctionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__GetReturnRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetReturnRecord *ns1__GetReturnRecord, _ns1__GetReturnRecordResponse *ns1__GetReturnRecordResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__GetReturnRecordDeal(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetReturnRecordDeal *ns1__GetReturnRecordDeal, _ns1__GetReturnRecordDealResponse *ns1__GetReturnRecordDealResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns5__GetAcountPaymentRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAcountPaymentRecord *ns1__GetAcountPaymentRecord, _ns1__GetAcountPaymentRecordResponse *ns1__GetAcountPaymentRecordResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__HelloWorld(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__HelloWorld *ns1__HelloWorld, _ns1__HelloWorldResponse *ns1__HelloWorldResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__loggout(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__loggout *ns1__loggout, _ns1__loggoutResponse *ns1__loggoutResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__TestLogin(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__TestLogin *ns1__TestLogin, _ns1__TestLoginResponse *ns1__TestLoginResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__GetUserInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUserInfo *ns1__GetUserInfo, _ns1__GetUserInfoResponse *ns1__GetUserInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__RegisterUser(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__RegisterUser *ns1__RegisterUser, _ns1__RegisterUserResponse *ns1__RegisterUserResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__AlterPsw(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AlterPsw *ns1__AlterPsw, _ns1__AlterPswResponse *ns1__AlterPswResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__AlterUserInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AlterUserInfo *ns1__AlterUserInfo, _ns1__AlterUserInfoResponse *ns1__AlterUserInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__AddAcountPayment(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddAcountPayment *ns1__AddAcountPayment, _ns1__AddAcountPaymentResponse *ns1__AddAcountPaymentResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__GetReturnInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetReturnInfo *ns1__GetReturnInfo, _ns1__GetReturnInfoResponse *ns1__GetReturnInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__CharegeReturnedMoney(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CharegeReturnedMoney *ns1__CharegeReturnedMoney, _ns1__CharegeReturnedMoneyResponse *ns1__CharegeReturnedMoneyResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__GetWorkNameList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetWorkNameList *ns1__GetWorkNameList, _ns1__GetWorkNameListResponse *ns1__GetWorkNameListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__GetUserFunction(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetUserFunction *ns1__GetUserFunction, _ns1__GetUserFunctionResponse *ns1__GetUserFunctionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__GetReturnRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetReturnRecord *ns1__GetReturnRecord, _ns1__GetReturnRecordResponse *ns1__GetReturnRecordResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__GetReturnRecordDeal(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetReturnRecordDeal *ns1__GetReturnRecordDeal, _ns1__GetReturnRecordDealResponse *ns1__GetReturnRecordDealResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns6__GetAcountPaymentRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAcountPaymentRecord *ns1__GetAcountPaymentRecord, _ns1__GetAcountPaymentRecordResponse *ns1__GetAcountPaymentRecordResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetDicContentByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDicContentByCondition *ns1__GetDicContentByCondition, _ns1__GetDicContentByConditionResponse *ns1__GetDicContentByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetAllCategory(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAllCategory *ns1__GetAllCategory, _ns1__GetAllCategoryResponse *ns1__GetAllCategoryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__InsertDicContent(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InsertDicContent *ns1__InsertDicContent, _ns1__InsertDicContentResponse *ns1__InsertDicContentResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__UpdateDicContent(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateDicContent *ns1__UpdateDicContent, _ns1__UpdateDicContentResponse *ns1__UpdateDicContentResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__DeleteDicContent(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteDicContent *ns1__DeleteDicContent, _ns1__DeleteDicContentResponse *ns1__DeleteDicContentResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__UpdateDicContentByCategory(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateDicContentByCategory *ns1__UpdateDicContentByCategory, _ns1__UpdateDicContentByCategoryResponse *ns1__UpdateDicContentByCategoryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetFunctionList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetFunctionList *ns1__GetFunctionList, _ns1__GetFunctionListResponse *ns1__GetFunctionListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__UpdateUserFunctionList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateUserFunctionList *ns1__UpdateUserFunctionList, _ns1__UpdateUserFunctionListResponse *ns1__UpdateUserFunctionListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__UpdateFunctionRight(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateFunctionRight *ns1__UpdateFunctionRight, _ns1__UpdateFunctionRightResponse *ns1__UpdateFunctionRightResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetTableStatistics(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTableStatistics *ns1__GetTableStatistics, _ns1__GetTableStatisticsResponse *ns1__GetTableStatisticsResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetNoticeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetNoticeList *ns1__GetNoticeList, _ns1__GetNoticeListResponse *ns1__GetNoticeListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetNoticeListByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetNoticeListByCondition *ns1__GetNoticeListByCondition, _ns1__GetNoticeListByConditionResponse *ns1__GetNoticeListByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetNoticeItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetNoticeItem *ns1__GetNoticeItem, _ns1__GetNoticeItemResponse *ns1__GetNoticeItemResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetAlertNoticeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAlertNoticeList *ns1__GetAlertNoticeList, _ns1__GetAlertNoticeListResponse *ns1__GetAlertNoticeListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__AddNoticeItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddNoticeItem *ns1__AddNoticeItem, _ns1__AddNoticeItemResponse *ns1__AddNoticeItemResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__AddNoticeItemToSomeone(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddNoticeItemToSomeone *ns1__AddNoticeItemToSomeone, _ns1__AddNoticeItemToSomeoneResponse *ns1__AddNoticeItemToSomeoneResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__UpdateNoticeItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateNoticeItem *ns1__UpdateNoticeItem, _ns1__UpdateNoticeItemResponse *ns1__UpdateNoticeItemResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__DeleteNoticeItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteNoticeItem *ns1__DeleteNoticeItem, _ns1__DeleteNoticeItemResponse *ns1__DeleteNoticeItemResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__InserNoticeToSomeOne(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InserNoticeToSomeOne *ns1__InserNoticeToSomeOne, _ns1__InserNoticeToSomeOneResponse *ns1__InserNoticeToSomeOneResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetReturnProportionRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetReturnProportionRecord *ns1__GetReturnProportionRecord, _ns1__GetReturnProportionRecordResponse *ns1__GetReturnProportionRecordResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__AddtReturnProportion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddtReturnProportion *ns1__AddtReturnProportion, _ns1__AddtReturnProportionResponse *ns1__AddtReturnProportionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__UpdatetReturnProportion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdatetReturnProportion *ns1__UpdatetReturnProportion, _ns1__UpdatetReturnProportionResponse *ns1__UpdatetReturnProportionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__DeletetReturnProportion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeletetReturnProportion *ns1__DeletetReturnProportion, _ns1__DeletetReturnProportionResponse *ns1__DeletetReturnProportionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetPhoneNumberBelongByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPhoneNumberBelongByCondition *ns1__GetPhoneNumberBelongByCondition, _ns1__GetPhoneNumberBelongByConditionResponse *ns1__GetPhoneNumberBelongByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__UpdatePhoneNumberBelong(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdatePhoneNumberBelong *ns1__UpdatePhoneNumberBelong, _ns1__UpdatePhoneNumberBelongResponse *ns1__UpdatePhoneNumberBelongResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__AddPhoneNumberBelong(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddPhoneNumberBelong *ns1__AddPhoneNumberBelong, _ns1__AddPhoneNumberBelongResponse *ns1__AddPhoneNumberBelongResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__DeletePhoneNumberBelong(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeletePhoneNumberBelong *ns1__DeletePhoneNumberBelong, _ns1__DeletePhoneNumberBelongResponse *ns1__DeletePhoneNumberBelongResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetCompanyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCompanyInfo *ns1__GetCompanyInfo, _ns1__GetCompanyInfoResponse *ns1__GetCompanyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__UpdateCompanyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateCompanyInfo *ns1__UpdateCompanyInfo, _ns1__UpdateCompanyInfoResponse *ns1__UpdateCompanyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetCompanyAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCompanyAccount *ns1__GetCompanyAccount, _ns1__GetCompanyAccountResponse *ns1__GetCompanyAccountResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__AddCompanyAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddCompanyAccount *ns1__AddCompanyAccount, _ns1__AddCompanyAccountResponse *ns1__AddCompanyAccountResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__UpdateCompanyAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateCompanyAccount *ns1__UpdateCompanyAccount, _ns1__UpdateCompanyAccountResponse *ns1__UpdateCompanyAccountResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__DeleteCompanyAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteCompanyAccount *ns1__DeleteCompanyAccount, _ns1__DeleteCompanyAccountResponse *ns1__DeleteCompanyAccountResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns7__GetClientVersion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetClientVersion *ns1__GetClientVersion, _ns1__GetClientVersionResponse *ns1__GetClientVersionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetDicContentByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetDicContentByCondition *ns1__GetDicContentByCondition, _ns1__GetDicContentByConditionResponse *ns1__GetDicContentByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetAllCategory(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAllCategory *ns1__GetAllCategory, _ns1__GetAllCategoryResponse *ns1__GetAllCategoryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__InsertDicContent(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InsertDicContent *ns1__InsertDicContent, _ns1__InsertDicContentResponse *ns1__InsertDicContentResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__UpdateDicContent(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateDicContent *ns1__UpdateDicContent, _ns1__UpdateDicContentResponse *ns1__UpdateDicContentResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DeleteDicContent(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteDicContent *ns1__DeleteDicContent, _ns1__DeleteDicContentResponse *ns1__DeleteDicContentResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__UpdateDicContentByCategory(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateDicContentByCategory *ns1__UpdateDicContentByCategory, _ns1__UpdateDicContentByCategoryResponse *ns1__UpdateDicContentByCategoryResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetFunctionList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetFunctionList *ns1__GetFunctionList, _ns1__GetFunctionListResponse *ns1__GetFunctionListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__UpdateUserFunctionList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateUserFunctionList *ns1__UpdateUserFunctionList, _ns1__UpdateUserFunctionListResponse *ns1__UpdateUserFunctionListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__UpdateFunctionRight(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateFunctionRight *ns1__UpdateFunctionRight, _ns1__UpdateFunctionRightResponse *ns1__UpdateFunctionRightResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetTableStatistics(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetTableStatistics *ns1__GetTableStatistics, _ns1__GetTableStatisticsResponse *ns1__GetTableStatisticsResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetNoticeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetNoticeList *ns1__GetNoticeList, _ns1__GetNoticeListResponse *ns1__GetNoticeListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetNoticeListByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetNoticeListByCondition *ns1__GetNoticeListByCondition, _ns1__GetNoticeListByConditionResponse *ns1__GetNoticeListByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetNoticeItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetNoticeItem *ns1__GetNoticeItem, _ns1__GetNoticeItemResponse *ns1__GetNoticeItemResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetAlertNoticeList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetAlertNoticeList *ns1__GetAlertNoticeList, _ns1__GetAlertNoticeListResponse *ns1__GetAlertNoticeListResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__AddNoticeItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddNoticeItem *ns1__AddNoticeItem, _ns1__AddNoticeItemResponse *ns1__AddNoticeItemResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__AddNoticeItemToSomeone(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddNoticeItemToSomeone *ns1__AddNoticeItemToSomeone, _ns1__AddNoticeItemToSomeoneResponse *ns1__AddNoticeItemToSomeoneResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__UpdateNoticeItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateNoticeItem *ns1__UpdateNoticeItem, _ns1__UpdateNoticeItemResponse *ns1__UpdateNoticeItemResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DeleteNoticeItem(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteNoticeItem *ns1__DeleteNoticeItem, _ns1__DeleteNoticeItemResponse *ns1__DeleteNoticeItemResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__InserNoticeToSomeOne(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InserNoticeToSomeOne *ns1__InserNoticeToSomeOne, _ns1__InserNoticeToSomeOneResponse *ns1__InserNoticeToSomeOneResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetReturnProportionRecord(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetReturnProportionRecord *ns1__GetReturnProportionRecord, _ns1__GetReturnProportionRecordResponse *ns1__GetReturnProportionRecordResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__AddtReturnProportion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddtReturnProportion *ns1__AddtReturnProportion, _ns1__AddtReturnProportionResponse *ns1__AddtReturnProportionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__UpdatetReturnProportion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdatetReturnProportion *ns1__UpdatetReturnProportion, _ns1__UpdatetReturnProportionResponse *ns1__UpdatetReturnProportionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DeletetReturnProportion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeletetReturnProportion *ns1__DeletetReturnProportion, _ns1__DeletetReturnProportionResponse *ns1__DeletetReturnProportionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetPhoneNumberBelongByCondition(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetPhoneNumberBelongByCondition *ns1__GetPhoneNumberBelongByCondition, _ns1__GetPhoneNumberBelongByConditionResponse *ns1__GetPhoneNumberBelongByConditionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__UpdatePhoneNumberBelong(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdatePhoneNumberBelong *ns1__UpdatePhoneNumberBelong, _ns1__UpdatePhoneNumberBelongResponse *ns1__UpdatePhoneNumberBelongResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__AddPhoneNumberBelong(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddPhoneNumberBelong *ns1__AddPhoneNumberBelong, _ns1__AddPhoneNumberBelongResponse *ns1__AddPhoneNumberBelongResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DeletePhoneNumberBelong(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeletePhoneNumberBelong *ns1__DeletePhoneNumberBelong, _ns1__DeletePhoneNumberBelongResponse *ns1__DeletePhoneNumberBelongResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetCompanyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCompanyInfo *ns1__GetCompanyInfo, _ns1__GetCompanyInfoResponse *ns1__GetCompanyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__UpdateCompanyInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateCompanyInfo *ns1__UpdateCompanyInfo, _ns1__UpdateCompanyInfoResponse *ns1__UpdateCompanyInfoResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetCompanyAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetCompanyAccount *ns1__GetCompanyAccount, _ns1__GetCompanyAccountResponse *ns1__GetCompanyAccountResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__AddCompanyAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__AddCompanyAccount *ns1__AddCompanyAccount, _ns1__AddCompanyAccountResponse *ns1__AddCompanyAccountResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__UpdateCompanyAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__UpdateCompanyAccount *ns1__UpdateCompanyAccount, _ns1__UpdateCompanyAccountResponse *ns1__UpdateCompanyAccountResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__DeleteCompanyAccount(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__DeleteCompanyAccount *ns1__DeleteCompanyAccount, _ns1__DeleteCompanyAccountResponse *ns1__DeleteCompanyAccountResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns8__GetClientVersion(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__GetClientVersion *ns1__GetClientVersion, _ns1__GetClientVersionResponse *ns1__GetClientVersionResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns9__queryPhoneNOInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__queryPhoneNOInfo *ns1__queryPhoneNOInfo, _ns1__queryPhoneNOInfoResponse *ns1__queryPhoneNOInfoResponse);

#endif

/* End of soapStub.h */
